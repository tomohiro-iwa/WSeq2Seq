add addicional options to tabbar
Document how to use index.js as entry point (ios)
android too
android too (fixed)
Merge branch 'master' into patch-1
Update iOS installation docs
fixed the bug on iOS that a fontFamily option does not effect when button state is disabled or highlighted
Merge branch 'v2' into fixed-navigation-buttons-highlight
Merge branch 'v2' into fixed-navigation-buttons-highlight
Merge branch 'v2' into fixed-navigation-buttons-highlight
Ability to set a screenBackgroundColor on iOS * To avoid white flash while component loads
Merge branch 'master' into ios-view-background
Set UIModalPresentationStyle before presenting a modal view controller. Fixes issues with modal screens backgrounds
Merge branch 'v2' into v2-4
Fix test: Check if the button the sidemenu is no longer visible
Merge branch 'v2' into v2-failing-side-menu-test
Refactor orientation logic to separate class closes #661
Merge branch 'v2' of https://github.com/andresesfm/react-native-navigation into v2
Merge branch 'v2' into v2
Renamed RNNRootViewProtocol to RNNParentProtocol and added RNNLeafProtocol
fixed unit test
Better options resolving
Revert "Revert "Refactor options (#3962)""
Revert "Revert "Fixes shared element transition""
Revert "Revert "Adresses #3963 - stack options applied to children""
Revert "Revert "Added unit test coverage for RNNNavigationController""
Merge stack options
Merge BottomTabs options
Fixes options
Merge branch 'v2' into optionsRewrite
Closes #3787
Merge options only when viewController conforms to RNNRootViewProtocol
Merge branch 'mergeOptionsFix' of github.com:wix/react-native-navigation into mergeOptionsFix
better practice
Fixes e2e
Fixes detached overlays on setRoot
Merge branch 'master' into thanhzusu-patch-for-bugfix-ios-pop-gesture
Merge branch 'master' into thanhzusu-patch-for-bugfix-ios-pop-gesture
[iOS] Enable back swipe gesture when a navBar is hidden. Resolves this issue: https://github.com/wix/react-native-navigation/issues/930
Merge branch 'master' into back-swipe-gesture
Fix disabledBackGesture.
[iOS] Enable back swipe gesture when a navBar is hidden. Resolves this issue: https://github.com/wix/react-native-navigation/issues/930
Revert accidental commit: 3cdb1b37f60eccae4945baa377a9a9d09186867e
Merge branch 'master' into patch-1
push/pop promise
tests
modal
fix tests
Merge branch 'v2' into v2_async
probably test fix
Merge branch 'v2' into v2_async
fixing forgotten savePassProps causing props on showInAppNotification not working properly...
A few improvements for Android
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
 Loading local resources into CollapsingTopBarBackground doesn't work in android in release mode
Merge branch 'master' into master
Merge branch 'master' into master
Merge branch 'master' into master
Merge branch 'master' into master
Don't suck in touches when there is no active drawer
Merge branch 'master' into master
Merge branch 'master' into master
fix disableOpenGesture android
Fixes large title - #4192
Merge branch 'v2' into fixLargeTitle
Merge branch 'v2' into fixLargeTitle
Don't ask overlay permission on RN >= 0.52
Merge branch 'master' into android-splashscreen-redbox
Merge branch 'master' into android-splashscreen-redbox
Merge branch 'master' into android-splashscreen-redbox
Merge branch 'master' into android-splashscreen-redbox
Merge branch 'master' into android-splashscreen-redbox
walk-around for React-Native bug with multiple RCTRootView https://github.com/wix/react-native-navigation/issues/1446
Fix crash with scrollViewDidEndDecelerating and RCTTextView
Fix android crash on device rotate
Fix menu icon after config change
Make back explicit arg so state can be set on config change
Make toolbar check menu icon status
Remove unneeded super calls for derived activities
Revert reference changes
Merge branch 'master' of https://github.com/wix/react-native-navigation into android_rotation_fix
Now allowing the custom nav bar to take up the whole space on iOS
It now works well on iOS 11 as well
Merge tag v1.1.314 from wix
Added optional fixedWidth property to the Android side menu
Merge branch 'master' into master
Custom left button fixes
closes #1179
Custom left button on android
Hack to fix when app is stuck on the splash screen.
Merge branch 'master' into master
V2: Peek and pop
tslint
Refactor playground. Document preview api
Merge branch 'v2' into birkir/v2peekPreview
Implement hybrid push/preview button
Merge branch 'birkir/v2peekPreview' of github.com:birkir/react-native-navigation into birkir/v2peekPreview
Fixing small linting errors
Merge branch 'v2' into birkir/v2peekPreview
Merge branch 'v2' into birkir/v2peekPreview
Android modal life cycle screen events added, Fixes #1144
Send willDisappear and didDisappear on modal dismiss
Bug fixed - the UIScrollView will break on iOS10 when building by XCode9
fix iOS11 safeArea - https://github.com/wix/react-native-navigation/issues/1858
Merge branch 'master' into issue_1858
Bump react-native version to 0.43
Added all styling options and WIP comments
Completed screen options and layout types
Added typings to the main entrypoint
Added buttons too
Merge branch 'v2' into birkir/v2/options-typings
Optional fields
Merge branch 'v2' into birkir/v2/options-typings
Fixes js unit tests
Merge branch 'v2' into birkir/v2/options-typings
Added all styling options and WIP comments
Completed screen options and layout types
Added typings to the main entrypoint
Added buttons too
Merge branch 'v2' into birkir/v2/options-typings
Merge branch 'v2' into birkir/v2/options-typings
Merge branch 'v2' into birkir/v2/options-typings
Merge branch 'v2' into birkir/v2/options-typings
Merge branch 'v2' into birkir/v2/options-typings
Set BottomTab colours only if needed
Fix bottomTabSelected events for iOS
fix navigatorStyle don't work on Drawer
Merge branch 'master' into master
Merge branch 'master' into master
Merge branch 'master' into master
Fix lightbox dismiss on Android
Update LightBox.java
Merge branch 'master' into master
Add splash screen tut in third party lib support list
Revert the old drawer commit
Merge branch 'master' into master
Merge remote-tracking branch 'upstream/master'
Fix screen events
Change docs because color can be used with iOS too
Simplify code more
Move icon logic to one function
Make returning more clear
Remove title setting because it is in setBackItem
Looks like the if is not needed
Merge branch 'v2' into v2
Update RNNBackButtonOptions.m
Update RNNBackButtonOptions.m
Hack to fix when app is stuck on the splash screen.
Merge branch 'master' into master
Fixes sideMenu shouldStretchDrawer and animationVelocity ooptions - #4178
Merge branch 'v2' into fixSideMenuOptions
bind viewController to presenters using bindViewController
Merge options to the specific provided layout
Moved custom titleView creation to RNNRootViewController
Moved default options to presenters, moved options applying to presenters, resolved options in RNNOptionsResolver
Fixes merge options
Fixes topBar transition on pop
Prevent titleView creation when react titleView exists
Fixed unit tests
Options refactor WIP
Detach applied options from DTO - WIP
Added option types and option parsers
Unit test passes
Added presenters for each parent type
Fixes unit tests
Rename StringParam to Text, changed bottomTabs.drawBehind and topBar.drawBehind default to false
set layout.backgroundColor default to white
Added unit tests for RNNViewControllerPresenter
Set layout.backgroundColor default nil
Merge branch 'v2' into optionsResolvingRefactor
Fixes buttons color missing options
Fix unit test
fix button color parsing
Moved default options to presenters
default options fixes
Fixes e2e
Fixes unit tests
Resolve child options on childWillAppear
Recrusively setDefaultOptions on rootViewController tree
Fixes default values
External Component implementation
Limit External component e2e to Android for now
start activity with fade animation when animationType: 'fade' is passed
Merge branch 'master' into activity_animation
Merge branch 'master' into activity_animation
Fix crash when calling dismissModal before app was launched
V2 overlay skeleton (#2097)
semicolon
refactoring
rm useless files
alert dialog more styles
merge v2
hot fix
tests
e2e with own alert
fix test
fix ios e2e
custom dialog WIP
WIP
refactor custom dialog
fix e2e
gitignore
remove hardcode
snackbar
drop FAB for now
Merge branch 'v2' into v2_overlay
fix test
merge v2
Merge branch 'v2' into v2_overlay
iOS - add disabledBackGesture
added testID support in topBar and bottomTabs
Merge branch 'v2' into v2-barsTestIDs
Merge branch 'v2' into v2-barsTestIDs
Merge branch 'v2' into v2-barsTestIDs
Merge branch 'v2' into v2-barsTestIDs
Merge branch 'v2' into v2-barsTestIDs
[iOS] Setting title through navigation item doesn't change the tab bar label
Update README.md
Save dynamic fab in ScreenParams
Snackback can be displayed statically from Navigation
Merge branch 'master' into snackbarEnhancements
Bugfix - #645 - Swiping / pop gesture on root Screen breaks navigation push / touches
Add ContentView after TopBar
iOS - add disabledBackGesture
Add ability to pass the name of the image and display it as a background when transitioning between screens.
Merge branch 'master' into master
Merge branch 'master' into master
remove "react-redux" from package.json
Merge branch 'master' into remove_redux
Merge branch 'master' into remove_redux
Show in app notifications on modals
Initial commit
Clean-up title
Support showing modals without animation
Fixing issue #542
add support for react-native 0.57.0
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Don't ask overlay permission on RN >= 0.52
Display redbox with error even if there is not any react activity yet
Merge branch 'master' into android-splashscreen-redbox
Merge branch 'master' into android-splashscreen-redbox
Merge branch 'master' into android-splashscreen-redbox
Merge branch 'master' into android-splashscreen-redbox
Merge branch 'master' into android-splashscreen-redbox
fix show snackbar
Fix rightButtons immutable-like error (#1928)
iOS native event fix
Added different tabbar label colors
Updated tabbar styling doc
Added comment line :D
Merge branch 'master' into master
fixes custom buttons
Merge branch 'v2' into customButtonFix
wrap these too
allow for a callback to resolve the route params lazily
fix typo
Add paddingTop to android ToolBar.
Update documentation
Merge branch 'master' into navBarTopPadding
Support iOS 11 prefersLargeTitles #1643
better and more simple version checking and setting
Merge branch 'master' into prefersLargeTitles
Don't custom button props over the bridge
Register multiple navigatorEventListeners
Save navBar component props
Update docs
Update platformSpecificDeprecated.android.js
Merge branch 'master' into patch-2
Merge branch 'master' into patch-2
Update documentation on disableOpenGesture
throwing an error instead of a string
return a callback to remove the register handler
Revert "Don't custom button props over the bridge (#2174)"
Ensure that styles set on individual buttons are not overridden
Merge branch 'master' into dont-override-button-styles
Preview API
Merge branch 'master' into feature/preview-peek-pop
Merge branch 'master' into feature/preview-peek-pop
Added preview actions and fail-guard wrappers
Merge branch 'master' of github.com:wix/react-native-navigation into feature/preview-peek-pop
Remove old setters
Moved from passProps to actionParams
Move findNodeHandle to internal method
Removing findNodeHandle
Merge branch 'master' into feature/preview-peek-pop
Commit by default in example. Because it's cool
Merge branch 'master' into feature/preview-peek-pop
Merge branch 'master' into feature/preview-peek-pop
Merge branch 'master' into feature/preview-peek-pop
Docs and if elses ifs then
Revert "Revert "Don't custom button props over the bridge (#2174)" (#2177)"
Fix props loading from PropsRegistry in custom buttons
Add support for prefersLargeTitles in iOS 11
Support passing unserializable props to custom button
setTabButton -> has now the property 'label' to change the label of the TabButton
Add to documentation
Merge branch 'master' into master
[BugFix] use i instead of 0 to check all TabItems
Merge remote-tracking branch 'origin/master'
destroy navigation activity layouts on catalyst instance destroy
Merge branch 'master' into master
Update NavigationActivity.java
android AppCompat & Design libs from 25.0.1 to 25.3.1
Merge branch 'master' into sdk/android-appcompat
Update docs
Merge branch 'v2' into v2
Modal unmount e2e test
Merge branch 'v2' into v2
Modal unmount e2e test changes.
Merge remote-tracking branch 'origin/v2' into v2
Implemented component at the root level of the topBar
Ensure ReactView isn't created after it's destroyed
 introducing navbar shadow on iOS
Merge branch 'master' of https://github.com/wix/react-native-navigation
fix minor typo
Renamed RNNRootViewProtocol to RNNParentProtocol and added RNNLeafProtocol
fixed unit test
Revert "Revert "Refactor options (#3962)""
Revert "Revert "Fixes shared element transition""
Revert "Revert "Adresses #3963 - stack options applied to children""
Revert "Revert "Added unit test coverage for RNNNavigationController""
Merge BottomTabs options
Fixes options
Merge branch 'v2' into optionsRewrite
Refactred options and added tests
Merge branch 'v2' into refactorOptions
fixes tabBarItem
tests fix
Better namings
Clean overlay creation
Merge branch 'v2' into refactorOptions
Update broken links
Added requiresMainQueueSetup to prevent warning and future side-effects on RCCManagerModule
Merge branch 'master' into master
Fix EmptyStackException
Merge branch 'master' into patch-1
Add support for react-native 0.52.0
Merge branch 'master' into rn52
Refactore a bit
Merge branch 'master' into rn52
Merge branch 'master' into rn52
Merge branch 'master' into rn52
Merge branch 'master' into rn52
Set titleBarSubTitleTextCentered as navigator style
fixed false declaration
Merge branch 'master' into centerSubTitle_android
Merge branch 'master' into centerSubTitle_android
Add support for prefersLargeTitles in iOS 11
Refactor resetTo view controller creation into function
Configure resetTo to take multiple components to set view controllers for
Breakup view controller initializer into multiple lines for legibility
Merge branch 'master' into set-view-controllers
Merge branch 'master' into set-view-controllers
fix #2616
Measure SideMenu width according to react root view
[iOS] Setting title through navigation item doesn't change the tab bar label
Merge branch 'master' into master
support TabBarItem customization for iOS based on v1
add js tests for TabBarItem support
support default selected tab index for iOS
use OptionsProcessor.processOptions for tabItem
Swizzle presenting alerts on top most window presented
presentViewController on current presented viewController
fixed unit test
Better options resolving
Revert "Revert "Fixes shared element transition""
Revert "Revert "Adresses #3963 - stack options applied to children""
Revert "Revert "Added unit test coverage for RNNNavigationController""
Merge stack options
Fixes options
Merge branch 'v2' into optionsRewrite
Revert "Now allowing the custom nav bar to take up the whole space on iOS (#2306)"
fix images name
upgrade example project to rn51 - ios
Merge branch 'master' into upgrade_example_proj_to_rn51
fix images name
Document how to use index.js as entry point (ios)
android too
android too (fixed)
Merge branch 'master' into patch-1
Support re-enabling top bar elevation
Merge branch 'master' into master
Fix a uncommented line
Merge branch 'master' into patch-3
adds shadow opacity, shadow color, shadow offset, shadow radius to navbar for ios
mentions ios shadow in styling-the-navigator docs
Merge branch 'master' into master
Merge branch 'master' into fix_jumping_titleview
Improve getCurrentlyVisibleScreenId on iOS with drawers.
Merge branch 'master' into fix-getcurrentlyvisiblescreenId-ios-with-drawer
Merge branch 'master' into fix-getcurrentlyvisiblescreenId-ios-with-drawer
Fixed RCT imports
Updated xcodeproj to recommended settings
Fix to react native 0.41
Merge branch 'master' into master
Fixed project compilation in iOS
Merge branch 'master' into master
Merge pull request #1 from ryanbrozo/master
Merge branch 'master' into patch-1
Modify compileSdkVersion, buildToolsVersion
Removed the headers form copy build phase - they are copied as headers. This was causing build error on Xcode 10
Merge branch 'v2' into duplicate_headers_copy_fix
fixes large titles
Add support for react-native 0.52.0
Merge branch 'master' into rn52
Refactore a bit
Merge branch 'master' into rn52
Now allowing the custom nav bar to take up the whole space on iOS
Merge branch 'master' into rn52
Merge branch 'master' into rn52
Merge pull request #1 from krystofcelba/rn52
Merge branch 'master' into master
Merge branch 'master' into master
Apply title in resetTo
fix navigatorStyle don't work on Drawer
Merge branch 'master' into master
Merge branch 'master' into master
Merge branch 'master' into master
Merge branch 'master' into master
Fix lightbox dismiss on Android
Update LightBox.java
Merge branch 'master' into master
Merge branch 'master' of https://github.com/wix/react-native-navigation
Add splash screen tut in third party lib support list
Revert the old drawer commit
Fix EmptyStackException
Merge branch 'master' into patch-1
Added missing curly bracket
deep stack for startTabBasedApp and startSingleScreenApp
Added bottomTabFontSize and bottomTabSelectedFontSize properties for android tab bar
Added tabFontSize and selectedTabFontSize properties to the doc
Fix default values of bottomTabFontSize and bottomTabSelectedFontSize properties.
Merge branch 'master' into master
Merge branch 'master' into master
Set titleBarSubTitleTextCentered as navigator style
fixed false declaration
Merge branch 'master' into centerSubTitle_android
Merge branch 'master' into centerSubTitle_android
Refactor resetTo view controller creation into function
Configure resetTo to take multiple components to set view controllers for
Breakup view controller initializer into multiple lines for legibility
Merge branch 'master' into set-view-controllers
Merge branch 'master' into set-view-controllers
Merge branch 'master' into set-view-controllers
[Android] Add ability to start app with deep stack
ScreenVisibilityListener now called on disappear methods
Don’t create SideMenu button automatically on Android
Fix resetTo animation on Android
topBarBlur for ios
statusBarBlur for ios
Update README.md
fix: #3444 Disable strict prototypes build setting on iOS in v2 so RNN is buildable prior to RN 0.56.
Merge branch 'v2' into v2-disable-strict-prototypes
Merge branch 'v2' into v2-disable-strict-prototypes
Update RNNEventEmitter.m
Added e2e
Update TextScreen.js
Fix EmptyStackException
fix #1149 and the related issue in #43#issuecomment-267370982  - create BitmapDrawable using a constructor that actually uses the Resources reference
Merge branch 'master' into master
Merge branch 'master' into master
Adresses #3024
Add support for react-native 0.52.0
Merge branch 'master' into rn52
Refactore a bit
Merge branch 'master' into rn52
Merge branch 'master' into rn52
Merge branch 'master' into rn52
Support to React Native 0.52.0
revert screen change event condition and global scree event condition before 1.1.464
generate id only when not already provided
allows passing id
Merge branch 'v2' into id-2652
Merge branch 'v2' into id-2652
Document how to use index.js as entry point (ios)
android too
Merge branch 'master' into patch-1
Added animationType to sideMenu demo
bind viewController to presenters using bindViewController
Merge options to the specific provided layout
Moved custom titleView creation to RNNRootViewController
Moved default options to presenters, moved options applying to presenters, resolved options in RNNOptionsResolver
Fixes merge options
Fixes topBar transition on pop
Prevent titleView creation when react titleView exists
Fixed unit tests
Options refactor WIP
Detach applied options from DTO - WIP
Added option types and option parsers
Added presenters for each parent type
Fixes unit tests
Rename StringParam to Text, changed bottomTabs.drawBehind and topBar.drawBehind default to false
set layout.backgroundColor default to white
Added unit tests for RNNViewControllerPresenter
Set layout.backgroundColor default nil
Merge branch 'v2' into optionsResolvingRefactor
Fixes buttons color missing options
Fix unit test
fix button color parsing
Moved default options to presenters
default options fixes
Fixes e2e
Fixes unit tests
Resolve child options on childWillAppear
Recrusively setDefaultOptions on rootViewController tree
Fixes default values
Fixes tests
Fixes sideMenu.animationType
Fixes bottomTab.badge - #4167
Merge branch 'master' into master
Merge branch 'master' of https://github.com/wix/react-native-navigation
Android: If the user has specified navigatorButtons on the showModal params use those instead of the default navigatorButtons of the registered screen.
Add statusBarColor to navigator props docs
readme
doc
topbar fix
rm doc
Merge branch 'v2' into topbar
Merge branch 'v2' into topbar
options presenter fix
Merge branch 'topbar' of github.com:wix/react-native-navigation into topbar
rm userless stuff
WIP
WIP
WIP
WIP
todo
draw under
merge
fix merge
merge fix
more merge fix
improve calc
animation improvement
refactor
refctor
merge v2
fix test
anim improve
rm outdated
refactoring
tests
refactor
hotfix
more refactoring
refactor
some more refactoring
refactor
Merge branch 'v2' into topbar
Collapse topbar
Merge branch 'v2' into topbar
Only destroy CollapsingContentView
Fix Fab
basic fab
fab menu
fab menu clicks
pop lifecycle
options lifecycle
refactoring
refactor
parse unit tests
refacotr
fix test
align
fab unit tests
more tests
size
options
menu collapse
parser test
merge v2
refactor
refactor
more refactor
more refactor
fix
refactor
merge v2
refactor
merge v2
fix
fix
merege v2
fixed undefined key
Merge branch 'v2' into v2_fab
merge v2
refactor
refactort
Merge branch 'v2_fab' of github.com:wix/react-native-navigation into v2_fab
Update base activity name to get example running
Update toolbar along with style update (may want to rename setNavigationStyle later)
Add basic setNavigationTitle method
Make the modal work and presentable on Android
Fix Android modal not closing on first try
Wire up tab show/hide and tab selection
Wire up Android setTabBadge
Add toolbar toggle, not sure if animation is working
Consolidate example code since everything but lightbox should now work on the three main tabs
Fix circular reference error parsing navigatorEventSubscription
Implement popToRoot
Implement resetTo
Merge branch 'master' of https://github.com/wix/react-native-navigation
Use update styles
Remove setNavigationStyle since updatesStyles, which calls setNavigationStyle, is called is all derived methods
Cleanup
Fix boolean test
Revert drawer flag
Update remaining alert references
Restore super call for modal back
Restore update
Update tab title and persist title on tab change
Restore toolbar updates
Fix reference
Fix reference
Fix navbar bg color and text color
Add left drawer for Android
Merge branch 'more-android-updates' of https://github.com/the-mx-group/react-native-navigation into more-android-updates
Fix drawer appearance
Fix tint color for native drawer icon
Merge branch 'master' of https://github.com/wix/react-native-navigation
Set default nav arrow color to black
Fix blank screen when resume app on Android
Fixed crash caused by async operation
Disable side menu (including using swipe gesture) for a given component on Android (#4142)
Merge branch 'v2' into v2
Merge branch 'v2' of https://github.com/wix/react-native-navigation into v2
Merge branch 'v2' of https://github.com/muhammadsr/react-native-navigation into v2
Merge branch 'v2' of https://github.com/wix/react-native-navigation into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Document how to use index.js as entry point (ios)
android too
android too (fixed)
Merge branch 'master' into patch-1
update docs for ios drawer animations in top-level-api section
update docs for ios drawer animations in top-level-api section
screen Background Color iOS
ios v2 topBarTextFontFamily
added topBarHidden to iOS
minor fix and topBarHideOnScroll
minor fix
topBarButtonColor iOS
Merge branch 'v2' into v2-topBarButtonColor
topBarTranslucent iOS
merge with current v2
Merge branch 'v2' into v2-topBarButtonColor
Merge branch 'v2-topBarButtonColor' of github.com:wix/react-native-navigation into v2-topBarButtonColor
eslint fixes
minor fixes
Update custom RctManager to use old bridge
[iOS] Setting title through navigation item doesn't change the tab bar label
Merge branch 'master' into master
Update README.md
Save dynamic fab in ScreenParams
Snackback can be displayed statically from Navigation
Merge branch 'master' into snackbarEnhancements
Bugfix - #645 - Swiping / pop gesture on root Screen breaks navigation push / touches
Add ContentView after TopBar
Add ability to pass the name of the image and display it as a background when transitioning between screens.
Merge branch 'master' into master
Merge branch 'master' into master
remove "react-redux" from package.json
Merge branch 'master' into remove_redux
Show in app notifications on modals
Initial commit
Initial commit
Clean-up title
Merge branch 'master' into docsify
Support showing modals without animation
Fixing issue #542
Fixes AppBarLayout delayed init of elevation
Merge branch 'v2' into v2-fix-android-elevation-issue
Merge branch 'v2' into v2-fix-android-elevation-issue
Add support for drawer style params in Android
Set activity layout color from appStyle
Merge branch 'master' into activityLayoutColor
Ability to set a screenBackgroundColor on iOS * To avoid white flash while component loads
Fix android crash on device rotate
Fix menu icon after config change
Make back explicit arg so state can be set on config change
Make toolbar check menu icon status
Remove unneeded super calls for derived activities
Remove unneeded call to setNavUpButton (handled in updateStyles)
Revert reference changes
Merge branch 'master' of https://github.com/wix/react-native-navigation into android_rotation_fix
Merge pull request #1 from wix/master
add support for react-native 0.57.0
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Send modal lifecycle events only if modal is not destroyed
Add match_parent layoutparam in stack controller
Push screen after async action
Merge branch 'v2' of https://github.com/ramonallday/react-native-navigation into v2
Android modal life cycle screen events added, Fixes #1144
Android modal lifecycle events hardware/soft back button handled (#1238)
Merge branch 'master' into bugfix/android-modal-back-button
Android modal lifecycle events hardware/soft back button handled (#1238) Called modal DidDisappear event after previous Screen DidAppear event
setSoftInputMode on modals
setSoftInputMode on modals
setSoftInputMode on modals
Fix failing test #2183
Merge branch 'v2' into v2-fix-tests
animation fix
fix tests
Merge branch 'v2' into v2-animation
Merge branch 'v2' into v2-animation
Merge branch 'v2' into v2-animation
Merge branch 'v2' into v2-animation
Merge branch 'v2' into v2-animation
Merge branch 'v2' into v2-animation
Add custom bar button item class
Merge branch 'master' into custom-nav-bar-items
Refactor peek and pop
Rollback some XCode stuff
Merge branch 'v2' of github.com:wix/react-native-navigation into feature/previewv2
Also fixing searchbarcancelpressed event
Merge branch 'v2' into feature/previewv2
Merge branch 'v2' into feature/previewv2
setSoftInputMode on modals
setSoftInputMode on modals
setSoftInputMode on modals
Switch to RCTJavaScriptWillStartLoadingNotification
Switch to RCTJavaScriptWillStartLoadingNotification
Update lib/android/app/src/main/java/com/reactnativenavigation/viewcontrollers/stack/StackController.java
apply sendOnNavigationButtonPressed to back button
Add navBarTransparency param.
Fix #3450: change presentation context when SearchBar activated
Merge branch 'v2' into v2-fix-3450
Preview API
Merge branch 'master' into feature/preview-peek-pop
Merge branch 'master' into feature/preview-peek-pop
Added preview actions and fail-guard wrappers
Merge branch 'master' of github.com:wix/react-native-navigation into feature/preview-peek-pop
Merge branch 'feature/preview-peek-pop' of github.com:birkir/react-native-navigation into feature/preview-peek-pop
Remove old setters
Moved from passProps to actionParams
Move findNodeHandle to internal method
Removing findNodeHandle
Added height and option to dont 'pop' the view controller
Merge branch 'master' into feature/preview-peek-pop
Documentation update for peek and pop
Document how to access button press events
Commit by default in example. Because it's cool
Merge branch 'master' into feature/preview-peek-pop
Merge branch 'master' into feature/preview-peek-pop
Merge branch 'master' into feature/preview-peek-pop
Docs and if elses ifs then
Fixed RCT imports
Replaced deprecated RCTReloadNotification
Updated xcodeproj to recommended settings
馍馍修改
update pop animation normal
update
Merge branch 'master' into shouldStretchDrawer
fix #1149 and the related issue in #43#issuecomment-267370982  - create BitmapDrawable using a constructor that actually uses the Resources reference
Merge branch 'master' into master
Merge branch 'master' into master
Implemented test for public constructor
Merge branch 'v2' into test_gateway_public_constructor
Reverting to public
Merge branch 'master' into master
Fix rn 0.50 repeated calls to onMeasure.
Merge branch 'master' into master
Fixes NPE when initializing twice
remove unused param from function
Merge branch 'master' into rn52
Refactore a bit
Merge branch 'master' into rn52
Merge branch 'master' into rn52
Merge branch 'master' into rn52
Merge branch 'master' into rn52
Support to React Native 0.52.0
Merge branch 'master' into rn52_android
[V2] Disable gesture capture when sideMenu is disabled #3651
Merge branch 'v2' into patch-2
Hack to fix when app is stuck on the splash screen.
Merge branch 'master' into master
Stop calling host.clear() when activity is destroyed
Merge branch 'master' into stopClearingHost
New Feature: adding disabledSimultaneousGesture flag to manage simultaneous gesture recognition
Merge branch 'master' into thanhzusu-patch-add-disabledSimultaneousGesture
Add compatibility with react-native link
Fix top bar title positioning.
Merge branch 'v2' into v2-3
added tab selected event
changed event name to `bottomTabSelected`
Merge branch 'master' into tab_selected_event
feat: support a “modal” prop for tabbed ios apps
Merge remote-tracking branch 'origin/master' into feat-add-modal-tabs
Merge remote-tracking branch 'origin/master' into feat-add-modal-tabs
fix: apply temp fix for react-native-navigation#1502 (#1)
fix: enable fab icon scaling (#2)
Merge remote-tracking branch 'origin/master' into feat-add-modal-tabs
v1.1.340 [ci skip]
Merge branch 'master' into feat-add-modal-tabs
Merge tag 'v1.1.340' into feat-add-modal-tabs
Merge branch 'feat-add-modal-tabs' of github.com:kevboh/react-native-navigation into feat-add-modal-tabs
Update FloatingActionButtonCoordinator.java
Update package.json
Merge branch 'master' into feat-add-modal-tabs
Merge branch 'master' into feat-add-modal-tabs
Fix backButton tintColor to use it with backButton property in iOS
Fix ability to add color for back button
Change docs because color can be used with iOS too
Simplify code more
Move icon logic to one function
Remove title setting because it is in setBackItem
Make setBackItem function more clear
Looks like the if is not needed
Merge branch 'v2' into v2
Update RNNBackButtonOptions.m
Update RNNBackButtonOptions.m
Merge branch 'master' into patch-1
Merge branch 'master' into patch-1
Make Left the default "side" for toggleDrawer
Merge branch 'master' into patch-3
Compatibility with react native 0.43.0
Merge branch 'master' into patch-1
Add support for react-native 0.52.0
Merge branch 'master' into rn52
Refactore a bit
Merge branch 'master' into rn52
Merge branch 'master' into rn52
Merge branch 'master' into rn52
fixes #2524
fix in RNNNavigationController
Merge branch 'master' into setStyle
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
iOS add native support for custom nav bar
center the custom nav bar view to the minimum width
change background color of the custom view
comment custom nav bar code from example project
iOS add native support for custom nav bar
add custom navigation bar to example project
center the custom nav bar view to the minimum width
change background color of the custom view
comment custom nav bar code from example project
Merge branch 'custom_nav_bar' of https://github.com/wix/react-native-navigation into custom_nav_bar
center custom nav bar
fix custom nav bar when pop
Merge branch 'master' into custom_nav_bar
fix custom nav bar size
change custom nav bar background color in the example project
Merge branch 'master' into custom_nav_bar
Added gradle dependency for ActionItemBadge
Added title bar button badge
Updated ActionItemBadge version
Added Badge params
Added badge style parser
Added actionItem/badge creator
Added badge example
Merge remote-tracking branch 'upstream/master' into feature-button-badge
Removed static badge value
Example edit
fix(start app): show red screen in case an error is thrown while starting the app
largeTitleFix
update to rn 49 - reload still not working on ios
bridge fix
Merge branch 'v2' into v2-rn49
small fixes
testing with rn50
removed package-lock
Merge branch 'v2' into v2-rn49
go back to 49, problem with android in 50
Add paddingTop to android ToolBar.
Update documentation
Control the opacity of a translucent nav bar
Fixed RCT imports
Replaced deprecated RCTReloadNotification
Updated xcodeproj to recommended settings
Fix to react native 0.41
Fixed project compilation in iOS
Merge branch 'master' into master
Merge pull request #1 from ryanbrozo/master
Fixed RCT imports
Replaced deprecated RCTReloadNotification
Updated xcodeproj to recommended settings
Introduce basic support of overlay view
Refactor RCCNavigationController to make overlayView private
Introduce support of overlayView for TabBar based apps
Refactor `view` prop to more convenient `screen`
Update docs
Add an ability to show/remove overlay programmatically
Better support of reloading
Overlay support for SingleScreenLayout on Android
Fix enter transition for SingleScreenLayout
Fix overlay prop declaration
fix iOS11 safeArea - https://github.com/wix/react-native-navigation/issues/1858
TopTabs icons
animation fix
fix tests
Merge branch 'v2' of github.com:wix/react-native-navigation into v2-animation
Merge branch 'v2' into v2-animation
Merge branch 'v2' of github.com:wix/react-native-navigation into v2
hide toolbar
default values
tmp commit
merge
tests
animated hide
animated hode improve
fix topbar
readme
Merge branch 'v2' into v2-topbar-hide
Merge branch 'v2' into v2-topbar-hide
Merge branch 'v2' of github.com:wix/react-native-navigation into v2-topbar-hide
Merge branch 'v2-topbar-hide' of github.com:wix/react-native-navigation into v2-topbar-hide
Merge branch 'v2' into v2-topbar-hide
merge v2
Merge branch 'v2' into v2-topbar-hide
Merge branch 'v2' into v2-topbar-hide
lifecycle WIP
Merge branch 'v2-topbar-hide' of github.com:wix/react-native-navigation into v2-topbar-hide
lifecycle alert delay hack
test fixes
Merge branch 'v2' into v2-topbar-hide
Merge branch 'v2' into v2-topbar-hide
Fixes issues#1397 (#2)
Allow subclasses of NavigationApplication to provide a custom ReactNativeHost.
Merge pull request #3 from nfl/v2-application-interface
fixed failing unit test
Prevent navigation from assertion crashing when restarting the app during the initialization phase
Merge pull request #4 from nfl/v2-code-push
fix typo
Merge pull request #5 from nfl/v2-code-push
chore: Publish @nfl/react-native-navigation (#6)
Merge branch 'v2' of github.com:nfl/react-native-navigation into v2
Merge remote-tracking branch 'upstream/v2' into v2
Merge remote-tracking branch 'upstream/v2' into v2
Merge remote-tracking branch 'upstream/v2' into v2
v2.0.0-pre.d5f4771e
Merge remote-tracking branch 'upstream/v2' into v2
v2.0.0-pre.004d0854
Merge remote-tracking branch 'upstream/v2' into v2
Android: Fix BottomTabsController content layout
Merge pull request #8 from nfl/v2-android-fix-tabs-layout
Merge remote-tracking branch 'upstream/v2' into v2
Merge remote-tracking branch 'upstream/v2' into v2
v2.0.0-pre.75626fe0
Allow customNavigationTitleView and customNavigationBarView to be tra… (#9)
Merge branch 'v2' of https://github.com/wix/react-native-navigation into v2
Merge branch 'v2' of https://github.com/andresesfm/react-native-navigation into v2
Merge pull request #10 from andresesfm/v2
fixes bottom bar images disappearing after codepush
Merge pull request #12 from nfl/codepush_fix
Merge remote-tracking branch 'wix/v2' into v2
Merge pull request #13 from nfl/merge_wix_v2
Fix applyOn issues
merged
Add barStyle to topBarOptions + allow navigationBar subviews to not overflow
Merge pull request #14 from nfl/v2-apply-on
remove deprecated bar styles
Merge pull request #15 from nfl/v2-nav-header
Merge remote-tracking branch 'wix/v2' into v2
Replaced our fix for bottom bars with Wix's
merged Joon's change to Top Bar
Merge pull request #16 from nfl/merging_latest_wix_v2
fix IndexOutOfBoundsException
Merge branch 'v2' into fix_IIOOBE_bottom_tab
Fix iioobe bottom tab
Merge branch 'v2' into fix_IOOBE_bottom_bar
Minor fixes to reload flow
Don't ask overlay permission on RN >= 0.52
Display redbox with error even if there is not any react activity yet
Merge branch 'master' into android-splashscreen-redbox
Merge branch 'master' into android-splashscreen-redbox
Merge branch 'master' into android-splashscreen-redbox
Merge branch 'master' into android-splashscreen-redbox
Merge branch 'master' into android-splashscreen-redbox
Merge branch 'master' into android-splashscreen-redbox
Update RCCNavigationController.m
Add ability to include an overlay module
Add the subview in the same way modal views are added. Fixes the touches issue
Set pass through touches so the overlay view doesn't interrupt the responder chain to the views behind
Fix PropTypes import
Make screen background image stretch when using screenBackgroundImageName
Add payload param to handleDeepLink
Merge branch 'master' into master
Merge branch 'master' into master
Prevent unwanted app destroy
Adds launch image for iPhone X and iPad to showSplashScreen.
Merge branch 'master' into ipad-launch-image
Merge branch 'master' into ipad-launch-image
Merge branch 'master' into ipad-launch-image
Stop calling host.clear() when activity is destroyed
Merge branch 'master' into stopClearingHost
passProps to buttons in progress
push and pop custom transitions
refactored defaultOptions
Merge branch 'v2' into v2-animations
Update app title (android)
Start reworking examples app
Add stock masonry images
Add action & transition examples
Add app icon
Fix Masonry flashing + app icons
Change contextual menu icons
[iOS] Correctly size subtitle label before calculating title view width
Merge branch 'master' into master
#1071 Test that Navigator forwards NavigationOptions to ViewController
Add an argument allowing to run a single Android e2e test
Fix style issue
Merge branch 'v2' into style-testing
#1071 Allow changing navigation title in iOS
Update readme to document an option for running a single test
Update ScreenStyleDynamic.test.js
Merge branch 'v2' into style-testing
Upgrade Gradle version
Allow playground app to run on x86_64 emulator
#1071 Allow changing navigation title
#1071 Add tests for JavaScript
Upgrade Gradle version
Allow playground app to run on x86_64 emulator
#1071 Allow changing navigation title
#1071 Add tests for JavaScript
Implementation of passing multiple arguments to ImageLoader in order to avoid asynchronous issues and for performance as BottomBar re-creates all views every time an item is added
removed redundant checks for testId
Implementation of passing multiple arguments to ImageLoader in order to avoid asynchronous issues and for performance as BottomBar re-creates all views every time an item is added
Merge branch 'implement_images_loader' of github.com:andresesfm/react-native-navigation into implement_images_loader
Merge branch 'v2' into implement_images_loader
Pass the style parameter to DrawerControllerIOS
Merge branch 'master' into master
Stop calling host.clear() when activity is destroyed
Merge branch 'master' into stopClearingHost
Implement right SideMenu on Android
Adapt toggleSideMenu and toggleSideMenuVisible to right SideMenu
Bug: right drawer on Android isn't shown
Now allowing the custom nav bar to take up the whole space on iOS
v1.1.314 [ci skip]
Added optional fixedWidth property to the Android side menu
Merge branch 'master' into master
v1.1.314 [ci skip]
Added optional fixedWidth property to the Android side menu
Added fixedWidth drawer param to te top-level-api doc
Add support for react-native 0.52.0
Merge branch 'master' into rn52
Refactore a bit
Merge branch 'master' into rn52
Merge branch 'master' into rn52
Merge branch 'master' into rn52
Merge branch 'master' into rn52
Revert "Fix/rootview bounds iphone x (#3405)"
Merge branch 'master' into revert-3405-fix/rootview_bounds_iphone_x
Merge remote-tracking branch 'wix/master'
Fixes an issue where on an iPhone X when showing the tab bar on pop from a scrollable view to a non-scrollable view the root view's bounds would be incorrect
Merge master into fix/rootview_bounds_iphone_x
Merge branch 'master' into fix/rootview_bounds_iphone_x
Add ContentView after TopBar
Add support for react-native 0.52.0
Merge branch 'master' into rn52
Refactore a bit
Merge branch 'master' into rn52
Merge branch 'master' into rn52
Merge branch 'master' into rn52
Merge branch 'master' into rn52
replace container with component
Fix Installing MD formatting
Update Installing.md
Merge branch 'v2' into patch-4
Update Installing.md
Set to use old bridge for compatibility with 0.30+
Fixed crash occurring when tabBarBackgroundColor or tabBarButtonColor is not supplied
Merge branch 'fix/android-tab-color-crash'
Merge branch 'master' of github.com:wix/react-native-navigation
Merge branch 'master' of github.com:wix/react-native-navigation
Merge branch 'master' of github.com:wix/react-native-navigation
Merge branch 'master' of github.com:wix/react-native-navigation
Merge branch 'master' of github.com:wix/react-native-navigation
Adds setStyle property to index.js
Adds native code for setting style on RCCViewController
Fixes setStyle function
Fixes setting style on navigator
Adds ability to set modal presentation style
Makes sure autoAdjustScrollViewInsets isn't propagated through when push another view controller
Changes import to reference controllers rather than react-native-controllers and fixes setStyle mutating colours
Fixed to work with RN 33
Fixes subtitle being shown
Merge feature/styling into feature/rn33
Merge master into feature/styling
Merge branch 'feature/rn33'
Merge origin/master into feature/styling
Adds extendedLayoutIncludesOpaqueBars to navigation styling
Adds ability to add shadows to text in navigation bar / tab bar
Merge branch 'master' into feature/styling
Merge branch 'master' into feature/styling
Fixed merged ReactGateway.java file
Fixed issue with rightButtons getting ignored in preference for empty Screen buttons
Merge remote-tracking branch 'wix/master'
Merge master into feature/styling
Merge remote-tracking branch 'wix/master' into feature/styling
Fixes compiler error
Merge branch 'master' into feature/styling
Merge branch 'master' into feature/styling
Android: Fix an issue with incorrect Lightbox measurments.
Merge branch 'master' into fix-android-lightbox
propose cleaner, more familiar usage patterns
Update base activity name to get example running
Update toolbar along with style update (may want to rename setNavigationStyle later)
Add basic setNavigationTitle method
Make the modal work and presentable on Android
Wire up tab show/hide and tab selection
Wire up Android setTabBadge
Add toolbar toggle, not sure if animation is working
Fix circular reference error parsing navigatorEventSubscription
Implement popToRoot
Merge branch 'master' of https://github.com/wix/react-native-navigation
Use update styles
Remove setNavigationStyle since updatesStyles, which calls setNavigationStyle, is called is all derived methods
Cleanup
Fix boolean test
Revert drawer flag
Update remaining alert references
Restore super call for modal back
Restore update
Update tab title and persist title on tab change
Make sure addView is called before removeView to get fade transition
Restore toolbar updates
Fix reference
Fix reference
Fix navbar bg color and text color
Merge branch 'more-android-updates' of https://github.com/the-mx-group/react-native-navigation into more-android-updates
Fix drawer appearance
Fix tint color for native drawer icon
Fix custom menu icon not displaying
Merge branch 'master' of https://github.com/wix/react-native-navigation
Set default nav arrow color to black
Ability to set a screenBackgroundColor on iOS * To avoid white flash while component loads
Merge branch 'master' into ios-view-background
Fix rn 0.50 repeated calls to onMeasure.
Merge branch 'master' into master
Document how to use index.js as entry point (ios)
android too
android too (fixed)
Ensure ReactView isn't created after it's destroyed
Rebase fixes and renames
Refactred options and added tests
Merge branch 'v2' into refactorOptions
fixes tabBarItem
tests fix
Better namings
Merge branch 'v2' into refactorOptions
iOS add native support for custom nav bar
add custom navigation bar to example project
center the custom nav bar view to the minimum width
change background color of the custom view
comment custom nav bar code from example project
iOS add native support for custom nav bar
add custom navigation bar to example project
center the custom nav bar view to the minimum width
change background color of the custom view
comment custom nav bar code from example project
Merge branch 'custom_nav_bar' of https://github.com/wix/react-native-navigation into custom_nav_bar
add custom nav bar screen
center custom nav bar
Merge branch 'master' into custom_nav_bar
fix custom nav bar size
change custom nav bar background color in the example project
v2-customButtons
Merge branch 'v2' into v2-customButtons
Merge branch 'v2' into v2-customButtons
Update RNNRootViewController.m
Merge branch 'v2' into v2-customButtons
[IOS] - set titleLabel sizeToFit
Merge branch 'master' into titleLabel_sizeToFit
setTabButton -> has now the property 'label' to change the label of the TabButton
Add to documentation
Merge branch 'master' into master
[BugFix] use i instead of 0 to check all TabItems
Merge remote-tracking branch 'origin/master'
[iOS] Setting title through navigation item doesn't change the tab bar label
Merge branch 'master' into master
Unmount react views when bundle load completes
Merge branch 'v2' into unmountOnBundleLoad
Merge branch 'v2' into unmountOnBundleLoad
Remove undefined rootView
Backwards compatibility for clearHostOnActivityDestroy
Stop calling host.clear() when activity is destroyed
Merge branch 'master' into stopClearingHost
Handle fling in collapsing header with image view fixes #1284 #1248
Fix https://github.com/wix/react-native-navigation/issues/3392
V2 overlay skeleton (#2097)
remove useles files
semicolon
refactoring
rm useless files
alert dialog more styles
merge v2
hot fix
tests
e2e with own alert
fix test
fix ios e2e
custom dialog WIP
WIP
refactor custom dialog
fix e2e
gitignore
remove hardcode
drop FAB for now
fix test
merge v2
Merge branch 'v2' into v2_overlay
Fixed a typo.
Fixes overlays level - #4145
Merge branch 'v2' into fixOverlays
Disable overlay unmounts when dismissed
Fixes e2e
Merge branch 'v2' into fixOverlays
Added a missing iOS installation step
Merge branch 'master' into master
Merge branch 'master' into master
Merge branch 'master' into master
Merge branch 'master' into master
feat: support a “modal” prop for tabbed ios apps
Merge remote-tracking branch 'origin/master' into feat-add-modal-tabs
fix: apply temp fix for react-native-navigation#1502 (#1)
fix: enable fab icon scaling (#2)
Merge remote-tracking branch 'origin/master' into feat-add-modal-tabs
v1.1.340 [ci skip]
Merge branch 'feat-add-modal-tabs' of github.com:kevboh/react-native-navigation into feat-add-modal-tabs
Update FloatingActionButtonCoordinator.java
Update package.json
Merge branch 'master' into feat-add-modal-tabs
v2 proper permission handling (closes #3376)
Merge branch 'v2' into v2-permissionHandling
Merge branch 'v2' into v2-permissionHandling
Fix: Bottom Nav Icons disappear when getting a CodePush
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'master' into master
readme
merge
fix
merge
Fix disableIconTint handling on Android (#3426)
fix #1149 and the related issue in #43#issuecomment-267370982  - create BitmapDrawable using a constructor that actually uses the Resources reference
Merge branch 'master' into master
Merge branch 'master' into master
Add disableIconTint and disableSelectedIconTint option for TabBar icons
Updated documentation
Merge branch 'master' into master
fix selected tab image for ios
fix selected icon inside setTabButton function
Merge branch 'master' into selected-icon
tab bar selected icon for android
Merge branch 'master' into develop
Merge branch 'master' into develop
Add disableIconTint and disableSelectedIconTint option for TabBar icons
Updated documentation
Move disableIconTint from TabsStyle to AppStyle for iOS
Merge branch 'master' into master
Scope tabBarDisableIconTint to iOS only
Merge branch 'master' into master
Merge branch 'master' into master
Set to use old bridge for compatibility with 0.30+
Fixed crash occurring when tabBarBackgroundColor or tabBarButtonColor is not supplied
Merge branch 'fix/android-tab-color-crash'
Merge branch 'master' of github.com:wix/react-native-navigation
Merge branch 'master' of github.com:wix/react-native-navigation
Merge branch 'master' of github.com:wix/react-native-navigation
Merge branch 'master' of github.com:wix/react-native-navigation
Merge branch 'master' of github.com:wix/react-native-navigation
Adds setStyle property to index.js
Adds native code for setting style on RCCViewController
Fixes setStyle function
Fixes setting style on navigator
Adds some styling to tab bar controller and fixes some bugs
Adds ability to set modal presentation style
Makes sure autoAdjustScrollViewInsets isn't propagated through when push another view controller
Changes import to reference controllers rather than react-native-controllers and fixes setStyle mutating colours
Fixed to work with RN 33
Merge branch 'master' of github.com:wix/react-native-navigation into feature/rn33
Fixes updating title font styling with new RCCTitleViewHelper logic
Fixes subtitle being shown
Merge master into feature/styling
Merge branch 'feature/rn33'
Merge origin/master into feature/styling
Adds extendedLayoutIncludesOpaqueBars to navigation styling
Adds ability to add shadows to text in navigation bar / tab bar
Merge branch 'master' into feature/styling
Merge branch 'master' into feature/styling
Fixed merged ReactGateway.java file
Fixed issue with rightButtons getting ignored in preference for empty Screen buttons
Merge remote-tracking branch 'wix/master'
Merge master into feature/styling
Merge remote-tracking branch 'wix/master' into feature/styling
Merge branch 'master' into feature/styling
Add Support for all common color formats on Android closes #454
fixed blank nav bar titles on Android when title font size not set.
add support for react-native 0.57.0
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Merge branch 'v2' into v2
Now allowing the custom nav bar to take up the whole space on iOS
v1.1.314 [ci skip]
Merge tag v1.1.314 from wix
Added optional fixedWidth property to the Android side menu
Merge branch 'master' into master
Document how to use index.js as entry point (ios)
android too
android too (fixed)
Merge branch 'master' into patch-1
Blocks multiple pushes within one second by navigator and params
Fixing NPE found on issue #2695
Merge branch 'master' into patch-1
Merge branch 'master' into patch-1
for iOS
first try for android
iOS indent
Android Indent
Update platformSpecific.android.js
Merge branch 'master' into feature/asyncDismissModal
Update NavigationCommandsHandler.java
Update platformSpecificDeprecated.android.js
Update platformSpecificDeprecated.ios.js
Fixes overlay closes keyboard - #3892
Merge branch 'v2' into overlayFixes
Handle fling in collapsing header with image view fixes #1284 #1248
- Fixes #754 for single screen apps
Bugfix #1801: clear all old items before set new items on navigaiton bar
Merge branch 'master' into thanhzusu-patch-for-bugfix-overlap-navigation-bar
Merge branch 'master' into thanhzusu-patch-for-bugfix-overlap-navigation-bar
Merge branch 'master' into thanhzusu-patch-for-bugfix-overlap-navigation-bar
Merge branch 'master' into thanhzusu-patch-for-bugfix-overlap-navigation-bar
Merge branch 'master' into thanhzusu-patch-for-bugfix-overlap-navigation-bar
Fix BottomTabs check in CollapsingViewPagerContentViewMeasurer
Removed possibleOpenGesture MMOpenDrawerGestureModePanningCenterView possibleOpenGestureModesForGestureRecognizer. This allows swipeable componenets like swipeable lists to be used on iOS.
Merge branch 'develop' into feature/ios-swipeable
Merge branch 'v2' into v2
Merge branch 'v2-upstream' into v2
Fix #3450: change presentation context when SearchBar activated
Merge branch 'v2' into v2-fix-3450
Move event emmiter logic out of Application
Implement searchView
Translucent TitleBar
Collapse TopBar
Less noticeable translucent effect
Collapse on touch up
CollapsingTopBar fix background image fixes
Refactor all the things
Screen background option fixed in iOS
Merge branch 'v2' into bugfix/screen-background
Add topBarElevationShadowEnabled style property
Fix blank screen when resume app on Android
V2 overlay skeleton (#2097)
remove useles files
refactoring
rm useless files
alert dialog more styles
merge v2
hot fix
tests
e2e with own alert
fix test
fix ios e2e
custom dialog WIP
WIP
refactor custom dialog
fix e2e
gitignore
fix js tests
remove hardcode
snackbar
drop FAB for now
Merge branch 'v2' into v2_overlay
fix test
merge v2
Merge branch 'v2' into v2_overlay
fix bridge issue
Update RNNEventEmitter.m
largeTitleFix
update to rn 49 - reload still not working on ios
bridge fix
Merge branch 'v2' into v2-rn49
small fixes
testing with rn50
removed package-lock
Merge branch 'v2' into v2-rn49
go back to 49, problem with android in 50
fix(start app): show red screen in case an error is thrown while starting the app
setTabButton -> has now the property 'label' to change the label of the TabButton
Add to documentation
Merge branch 'master' into master
[BugFix] use i instead of 0 to check all TabItems
Merge remote-tracking branch 'origin/master'
setStyle -> to change bottomTabBar
Merge pull request #1 from wix/master
update android
Merge remote-tracking branch 'origin/master'
remove hass...-functions
update iOS set TabStyle
Merge remote-tracking branch 'origin/master'
iOS change icon color on buttonTabColor has been changed
iOS update style-update rutine to update each viewcontroller in a NavigationViewController tabButtonColor improvement
iOS add forgotten header declaration
Merge branch 'master' into master
iOS fix c&p error
Merge remote-tracking branch 'origin/master'
[Android] initialize colors for an empty AppStyles-Object
Implement switchToTopTab method
Add topBarElevationShadowEnabled style property
adresses #2570
Merge branch 'v2' into v2-navigationAnimations
feat: support a “modal” prop for tabbed ios apps
Merge remote-tracking branch 'origin/master' into feat-add-modal-tabs
Merge remote-tracking branch 'origin/master' into feat-add-modal-tabs
fix: apply temp fix for react-native-navigation#1502 (#1)
fix: enable fab icon scaling (#2)
Merge remote-tracking branch 'origin/master' into feat-add-modal-tabs
v1.1.340 [ci skip]
Merge branch 'master' into feat-add-modal-tabs
Merge tag 'v1.1.340' into feat-add-modal-tabs
Merge branch 'feat-add-modal-tabs' of github.com:kevboh/react-native-navigation into feat-add-modal-tabs
Update FloatingActionButtonCoordinator.java
Update top-level-api.md
Update package.json
Merge branch 'master' into feat-add-modal-tabs
Merge branch 'master' into feat-add-modal-tabs
ScreenVisibilityListener now called on disappear methods
consolidating component lifecycle events
fixed tests
BREAKING now must register to Navigation.events() to listen to lifecycle events
update ios and android bridge
Merge branch 'v2' into eventRegistryRework
ScreenEventsRegistry
fixed piping
it should just werk now
usage example
Merge branch 'v2' into eventRegistryRework
fixing playground tests
some more breaking changes
yey
redesigning the events
ComponentEventsObserver
full coverage
super interface ComponentEvent
glue between nativeEvents and componentObserver
register only once
Merge branch 'v2' into eventRegistryRework
update docs
Merge branch 'v2' into eventRegistryRework
fixed eventEmitter on iOS
FIx a few e2e tests
fail only on iOS
support multiple events().bindComponent() for same componentId
Merge branch 'v2' into eventRegistryRework
fixed e2e tests
Merge branch 'v2' into eventRegistryRework
Fix visibility event types
Test willUnmount
support for projects without redux
Fix npe when appStyle is undefined
Fixes issues#1397
Merge branch 'v2' into patch-2
Revert "Removed the headers form copy build phase - they are copied as headers. This was causing build error on Xcode 10 (#3774)"
Merge branch 'v2' into revert-3774-duplicate_headers_copy_fix
Closes #3545
Merge branch 'v2' into bottomTabsFix
Removed the headers form copy build phase - they are copied as headers. This was causing build error on Xcode 10
Merge branch 'v2' into duplicate_headers_copy_fix
Merge branch 'v2' into v2-failing-side-menu-test
Merge branch 'master' into master
Merge branch 'master' into master
Merge branch 'master' into master
Fix lightbox dismiss on Android
Update LightBox.java
Merge branch 'master' into master
Add splash screen tut in third party lib support list
Revert the old drawer commit
Merge branch 'master' into master
Merge remote-tracking branch 'upstream/master'
Fix screen events
iOS add native support for custom nav bar
add custom navigation bar to example project
center the custom nav bar view to the minimum width
change background color of the custom view
comment custom nav bar code from example project
iOS add native support for custom nav bar
add custom navigation bar to example project
center the custom nav bar view to the minimum width
change background color of the custom view
comment custom nav bar code from example project
Merge branch 'custom_nav_bar' of https://github.com/wix/react-native-navigation into custom_nav_bar
add custom nav bar screen
center custom nav bar
fix custom nav bar when pop
Merge branch 'master' into custom_nav_bar
fix custom nav bar size
change custom nav bar background color in the example project
Merge branch 'master' into custom_nav_bar
Avoid NPR in SET
Side Drawer Problem Resolved for Android
[iOS] Enable back swipe gesture when a navBar is hidden. Resolves this issue: https://github.com/wix/react-native-navigation/issues/930
Merge branch 'master' into back-swipe-gesture
setButtons for iOS
v2 merge
Merge branch 'v2' into v2-setButtons-ios
bind viewController to presenters using bindViewController
Moved custom titleView creation to RNNRootViewController
Moved default options to presenters, moved options applying to presenters, resolved options in RNNOptionsResolver
Fixes merge options
Fixes topBar transition on pop
Prevent titleView creation when react titleView exists
Fixed unit tests
Options refactor WIP
Added option types and option parsers
Unit test passes
Added presenters for each parent type
Fixes unit tests
Rename StringParam to Text, changed bottomTabs.drawBehind and topBar.drawBehind default to false
Added unit tests for RNNViewControllerPresenter
Set layout.backgroundColor default nil
Merge branch 'v2' into optionsResolvingRefactor
Fixes buttons color missing options
Fix unit test
fix button color parsing
Moved default options to presenters
default options fixes
Fixes e2e
Fixes unit tests
Resolve child options on childWillAppear
Fixes default values
Fixes tests
Add optional componentId param to bindComponent
Support setting orientation from application and modals Closes #681
support changed orientation in startTabBasedApp and Modal
support orientation in start singleScreenApp
replace strings macros to "static NSString *const"
[android] Basic implementation of orientation change event and getter
[android] Add configChanges prop to NavigationActivity in AndroidManifest
[android] Fix duplicate declaration of onConfigurationChange
[android] Use EventEmitter class to dispatch orientation change events
Merge branch 'master' into android-orientation-change
wrap these too
allow for a callback to resolve the route params lazily
propose cleaner, more familiar usage patterns
fix typo
fixed failing unit test
tabBarHidden for iOS
Merge branch 'v2' into v2-tabBarHidden-ios
Add documentation for third party lib "redux-persist"
Add font family support on bottom tabs
import missing classes
import missing class
update document
Support customize icon for left nav button in android
Merge branch 'master' into master
Add navBar navBarTextFontSize support for android
Merge branch 'master' of github.com:jp928/react-native-navigation
Merge branch 'master' into fix-swipe-back-after-resetto
Merge branch 'master' into fix-swipe-back-after-resetto
Validate self.viewControllers.count
Merge branch 'master' into fix-swipe-back-after-resetto
Create a local web server to modify settings. Dark Sky API key now looked up from shared prefs.
Replace elasticlunr with lunr as it allows wildcard searches #607
fix lunr website url
remove stemmer
remove content and date from the search index
Fix intermittent failure in Balking pattern describe in #699
Fix build error due to wrong indentation
Resolve ClassCastException in App.java #781
Create 2016-12-9-queue-load-leveling.md
Uploaded Images for queue-load-leveling
Merge pull request #1 from iluwatar/gh-pages
Delete Queue-load-level-pattern.png
Delete Queue-load-level-scenario.png
Update 2016-12-9-queue-load-leveling.md
Delete Queue-load-level-pattern.png
Delete Queue-load-level-scenario.png
Added new images for Queue Load Leveling.
Updated blog with images and explained classes
Updated Code for all the important classes
Added new author name
Updated author name.
:sparkles: :up: Automagic Update via Travis-CI
Updated code and added new image.
reverted changes to baseurl and url
Renamed the blog file name
 Remove redundant explicit super()
Issue #418: Adding additional example of singleton design pattern
Factory Method implemented with lambdas #332
clearing the build errors
- Add syntax highlighting stylesheet - Enabled syntax highlighting in Jekyll config settings - Added the syntax highlighter gem to the Gemfile
Add some ideas about structure
Work on layered architecture description
Work on hexagonal architecture description
Add some words
Work on lottery system description
Fix spelling
Add content describing the implementation
Added gist-it links
Add subheaders and some text
Update blog post date and add slice parameters for gist-it
Add chapter about the test application
Add note about testing layered architecture
Text improvements
Link to originals
Improve the text
Change blog title and shorten opening sentence
Add lottery ticket image and some text
Some changes based on review comments
More changes based on review comments
Improve administration port chapter
Improvements to banking chapter
Improve the notifications chapter
Changes to database chapter
Improve the app chapter
Update images
Add some text
Replace title image
Text updated because of code refactoring
Hexagonal blog: Update text based on implementation
Hexagonal blog: Small corrections
Hexagonal blog: Update lottery image
Hexagonal blog: Update blog post timestamp
Hexagonal blog: Update submodule
Url encode content to fix JSON breaking content
#587 SonarQube reports bugs
#587 SonarQube reports bugs
Resolves #643, test cases failed due to presence of global state in CallsCount. Because AppTest was executed before B2BServiceTest, it scheduled 1 sec timer using ThrottleTimerImpl class. While resetting it used that global CallCount class reset() method, which reset all counters. So that causes thread safety issue because of unintended sharing of application state between test cases, which is not a good practice.
Updated class diagram png and added UCLS file
implements Twin design pattern #63
implements Twin design pattern #63
implements Twin design pattern #63
implements Twin design pattern #63
implements Twin design pattern #63
Merge branch 'master' of https://github.com/hoswey/java-design-patterns
implements Twin design pattern #63
add new pattern
add new pattern
add all missing
Try to fix the bug
code review
Code Review
Try to fix the bug
Tyr to fix the bug
Merge branch 'master' into master
misspelled word
#5 Fixed the issue with quick class search
Issue #301: NPE in ImageLoaderEngine.
Getting an incorrect image from the camera Meizu MX4 Pro #1090
Update Decoder.java
Add files via upload
Update number of test cases
Comment logic of the fix
Mention fixed issue #642
Support android.support.v4.app.Fragment in IntentIntegrator (fixes #291).
Enhancement: ============ Option for BULK MODE SCAN from NATIVE APPLICATION is added. Check ZXing Test application for sample use. See button "Bulk Scan Anything".
Fix #957 - Provide OSGi Metadata in Manifest
replace tabs by whitespaces
Try once again to fix whitespace/indentation
Add QRCode lenient diagonal check
update tests to expect the increased number of successes
import https://mattmccutchen.net/bigint/
compile .cc as well .cpp files to include bigint
make VC++ happy with pdf417
MYzxing
Update GenericMultipleBarcodeReader.as
Rewrote Japanese help pages
Renamed Japanese app name to "Barcode Scanner"
Renamed Japanese app name to "Barcode Scanner" in katakana
Revert "Renamed Japanese app name to "Barcode Scanner" in katakana"
Revert "Renamed Japanese app name to "Barcode Scanner""
Replaced words "Barcode Scanner" in Japanese help pages to "QR Code Scanner" in Japanese.
Add installer for cpp
fail faster in FileNotFoundException case
Prevent NPE when thumbnail click not set
Inform user that message is too long to be displayed.
Fixed #8151 Documents name not readable in dark theme
1) ThreadDatabase.update() now returns boolean indicating whether or not the thread was deleted by the update. 2) SmsDatabase.deleteMessage() now returns boolean indicating whether or not deleting the message caused the message thread to be deleted. 3) MmsDatatabse.delete() now returns boolean indicating whether or not deleting the message caused the message thread to be deleted. 4) when deleting all messages in a thread ConversationFragment now resets its own threadId along with the threadId of its parent activity ConversationActivity such that a 'new thread' state is detected.
dropped 'threadDeleted' boolean
moved listener notify and return false up into if block
fixing duplicate system-contacts
fixing code formatting
remove unnecessary whitespace
better mode of doing this
whitespace
 Fix "Silent" summary for ringtone preference
Support for notification privacy settings.
Support for images in notifications.
add CHANGELOG.md #1161
changeMasterSecretPassphrase is now being called in AsyncTask
Applied code suggestions
Updated PassphraseChangeActivity
Preventing double-click on 'okButton'
Replaced AsyncTask String variables with parameters
add some audio logging
Use ACTION_GET_CONTENT for attachment picking on all platforms
Implement ListenableFuture in PersistentBlobProvider
prevent strange appcompat stack overflow
Color registration buttons correctly <API21
Add share button for safety numbers
Add functionality to button
Remove line break after safety numbers
Move description from subject to first line
Add missing newline
Dark theme support for audio drafts
Fix display of secure session reset records
add version info in new about section in preferences
enable media forwarding
Enable media message forwarding 2nd attempt
use apple emoji
Change Insecure icon to red_400
Change insecure indicator to red
Change insecure indicator to red
Update conversation_item_received.xml
Change insecure indicator icon to red,
No need for ivar. Use local variable.
Fix issue #577.
Fix >xxhdpi screens misrendering emoji
Added adaptive icon support.
don't change cursor if adapter is null
Add camera preview to message composition
encrypt files from direct camera capture
delete temp encrypted file when draft media is replaced
extract mime type query into MediaUtil class
fix NPE on attaching video files via share intent, get correct mime type for audio and video files
extracted strings from java src and layout xml
added class to automate conversion of text views and edit texts with the bho typeface.  also added the TibConvert class to convert unicode entites when the time arises...
textview, edittext, button classes abstracted with type handling for tib. contains errors.
one more fix...
stringified preferences...
fixed issue with incorrect classname for bhobutton
- fixed one error in create passphrase activity. - created custom dialog to replace context menus (since context menus won't honor custom typefaces) - replaced context menu in SecureSMS (main activity)
Merge branch 'bho' of github.com:guardianproject/TextSecure into bho
replaced contextual menus in ComposeMessageActivity class
Merge branch 'bho' of github.com:guardianproject/TextSecure into bho
added values-bo Tibetan support
adding tibetan text views
adding in strings prefs
updated localizations from transifex
removed unused view classes
transifex tx client pull config
updated strings from latest transifex
udpated tx config for lang mapping
restyled menus for clarity
Russian translation
Fixed #5272
moved manipulation of media thumbnail view into UI handler thread.
use hide() method instead of setVisibility()
Remove text emoji/kamoji using extended Unicode
Use matching status bar color during action mode
add custom color to MessageDetailsActivity
use conversationRecipients
Support for updated fingerprint format
Make fingerprint changes optionally non-blocking
use internal emoji pane for all android versions
Implemented QuickResponse
Bump SdkVersion 26
add more debugging info to direct capture
Add batch mode to contextual action bar
Make batch mode compatible for older Android devices.
The actionbar disappears only if the action hast not been cancelled. i.e. click delete -> click no -> actionbar stays
Minor fixes.
Fix text emoji pane font size and vertical align
Fix for lollipop notifications not rendering generated avatars.
Use correct pixel dimensions.
Null check. // FREEBIE
Android Wear notifications
Give user the opportunity to chose no LED-notification.
Give user the opportunity to chose no LED-notification.
Changed string/preferences__black -> string/preferences__none
Removed Color 'black'; Checks for value 'none' before building Led Notification.
fix recent emoji sort order
remove wasteful lookup
Added Iran to domain fronting list
Add check of xml file to plain text export.
Replacing of invalid characters before export.
Replace XML serializer in plaintext export Fixes #342 Alternative to #929
use internal emoji pane for all android versions
Update src/org/thoughtcrime/securesms/ConversationListFragment.java
Added Export Directory Option to Export Menu
Added XML Files for Arabic Translation
Revert "Added XML Files for Arabic Translation"
Added Backup Option to Backup Menu
Fix for Sparebank1 OTP message
"Resend Message" option
No tabs
Localisation patches
extracted strings from java src and layout xml
added class to automate conversion of text views and edit texts with the bho typeface.  also added the TibConvert class to convert unicode entites when the time arises...
textview, edittext, button classes abstracted with type handling for tib. contains errors.
one more fix...
stringified preferences...
fixed issue with incorrect classname for bhobutton
Merge branch 'bho' of github.com:guardianproject/TextSecure into bho
replaced contextual menus in ComposeMessageActivity class
new translations
Merge branch 'bho' of github.com:guardianproject/TextSecure into bho
added values-bo Tibetan support
adding tibetan text views
build stuff
adding in strings prefs
updated localizations from transifex
removed unused view classes
transifex tx client pull config
updated strings from latest transifex
udpated tx config for lang mapping
restyled menus for clarity
Added Export Directory Option to Export Menu
Russian translation
Norwegian Bokmål localisation
Fix for Sparebank1 OTP message
More localisations for Norwegian Bokmål
More strings for Norwegian Bokmål
Another Norwegian Bokmål commit
More localisation commits
Another localisation commit
Some more Norwegian commits
Fix for notification issue when deleting unread thread
Update res/xml/preferences.xml
Change behaviour when receiving CLASS0 messages
Update res/values/strings.xml
Update src/org/thoughtcrime/securesms/ReviewIdentitiesActivity.java
Update res/values/strings.xml
Update src/org/thoughtcrime/securesms/VerifyIdentityActivity.java
Update src/org/thoughtcrime/securesms/ApplicationExportManager.java
Update res/values/strings.xml
Update src/org/thoughtcrime/securesms/ConversationFragment.java
Changes the default behaviour when receiving "flash" messages
Update src/org/thoughtcrime/securesms/service/SmsListener.java
adds Android.mk
Updated to work with API Level 8 (Android 2.2)y
Replaced contact picture ImageViews with QuickContactBadges
Adds call elapsed time display
Code cleanup
Code cleanup
Improved code logic
Merge branch 'master' into in-call-timer
re-enable direct capture
write captured data async
make direct capture work with external intent too
fix pause race condition when leaving activity
fix resource leak in BitmapUtil
refactor capture data provider
treat my dyslaxisia
don't throw RuntimeExceptions
math.abs
fix icon for "Take Photo" in the attachment dialog and
add focus on tap to camera preview
add custom color to MessageDetailsActivity
use conversationRecipients
Blacklist OnePlus X from hardware AEC
Remove unused icon
Don't mention CyanogenMod
Disable screen during earpiece voice note playback
extracted strings from java src and layout xml
added class to automate conversion of text views and edit texts with the bho typeface.  also added the TibConvert class to convert unicode entites when the time arises...
textview, edittext, button classes abstracted with type handling for tib. contains errors.
one more fix...
stringified preferences...
fixed issue with incorrect classname for bhobutton
- fixed one error in create passphrase activity. - created custom dialog to replace context menus (since context menus won't honor custom typefaces) - replaced context menu in SecureSMS (main activity)
Merge branch 'bho' of github.com:guardianproject/TextSecure into bho
replaced contextual menus in ComposeMessageActivity class
new translations
added values-bo Tibetan support
adding tibetan text views
build stuff
adding in strings prefs
updated localizations from transifex
removed unused view classes
transifex tx client pull config
updated strings from latest transifex
udpated tx config for lang mapping
restyled menus for clarity
Russian translation
Russian translation
Russian translation
Russian translation
use Loader when conversation is updated instead of requery
Improve inactive and blocked conversation views
Use ACTION_OPEN_DOCUMENT for Android >= KitKat. Fixes #926.
Show emoji-only messages larger
- "Send unencrypted" forces a unencrypted sms - #919: Menu item to send a sms
Implement delivery receipts.
Index shouldn't be unique.
only set non-null bitmaps for notifications
enforce NonNull on incoming MMS content location
Add camera preview to message composition
encrypt files from direct camera capture
delete temp encrypted file when draft media is replaced
Support for per-recipient muting, blocking, and ringtones.
Fix mute icon alignment and actionbar styling.
Fix title centering issues.
Adjust header size.
Correctly clear cache.
Fix for square cropped group avatars.
Disable blocking for TS groups.
Respect blocking for incoming SMS.
No blocking for MMS groups either.
Render "blocked" as yellow.
Switch "blocked" to themed red.
add EmojiSpan that scaled w/ TextView
Fix for #4959
Update attachment_type_selector.xml
Update attachment_type_selector.xml
Support for quick reply from notifications.
Finish popup when expanding.
Resolve emoji keyboard layout issues
workaround GB GridView click handling bug
fix landscape padding
fix OutgoingRinger crashes
update onPrepared
remove setSound
simplify start/stop
use single start method
simplify try-catch
fix onCompletion
fix redphone busy
fix stop outgoingRinger
catch possible exception
use apple emoji
add padding to conversation activity to compensate for actionbar overlay mode
don't show recent emoji if empty
Replace `isPushRegistered` with `isRegistered`
Unregister Cloud Messaging if `isPushRegistered`
Prevent attempted call to `setPushRegistered`
Demand a connection when not getting notifications
Adapt to changes to `SignalServiceAccountManager`
Don't quit over a lack of Google Play Services
Add `Reminder` to disable battery optimisation
fix MMS part transfer indicator
Implement delivery receipts.
Index shouldn't be unique.
Tweak contact selection layout
allow batch selection of failed messages
Convert safety numbers to singular in constant
Convert safety numbers to singular in field name
Change string
add some audio logging
do not automatically enable bluetooth audio routing
Add wildcard on both sides of verification SMS regex
Add privacy mode for notifications
Remove accidently commited translations
Update contact DB on incoming messages
apntool and ApnDatabase
Implement notification repeat feature.
Fix for derp. How did this happen?
Update the Intent's extra
Adding "You: " to conv list if last message is outgoing and fixing a typo
fixed indentation
fix custom input race case
Set the advanced menu icon correctly
only open media preview when there is something to preview.
Revert thumbnail null check for non image media
Change lock icons
maintain one ContactsDatabase instance per Loader
use semaphores in loader
sticky date headers
Override startActivity to add CREATE_NEW_TAB extra
Override startActivity to add CREATE_NEW_TAB extra
Merge branch 'links_open_new_tab' of github.com:jkdf2/Signal-Android into links_open_new_tab
Update spacing to 2.
Remove Browser.EXTRA_APPLICATION_ID in intent.
fix crash when opening link with no browser installed
Add possiblity to store key verification
Adding contact name and number to what is verified
Fixing typo
Don't connect to server if !isPushRegistered
add dark theme to emojiDrawer
Update language list
Support for archive actions
Fix some GB weirdness, support for batch archive actions
tweaks
Make the batch action unarchive when in the archive
Optionally show progress for long running operations
Fix batch unarchive snackbar text
Turn off swipe gestures when in batch selection mode
Remove in-conversation delete thread action
Change lock icons
Added L10n fix for notification and on first unlock activity
minor group and conversation ui fixes
Localize some group update strings
allow empty group avatar updates and log updates
slight refactoring and avatar unset fixes
show when avatar is updated, more localizing
incorrect group title fix
fix cloned recipient bug on group update
prevent rapid tapping of update button
Fix NPE when camera is not in ready state
Fix Unread Badger for Sony Launcher fixes #6484 by using version 1.1.16 of ShortcutBadger
Large attachment support
simplify PduPart logic
address comments round 0
one-way listeners
pass in data size to slide constructor
better naming, capture race condition fix
get it done
Improve identity key scanning strings
Improve group update descriptions
add sender parameter
Add support to copy multiple messages, perserving chronological order of copy messages
Add a space between group member names
bump sdk to 22, update notifications
gingerbread assets
categories and addPerson for single /and/ multi
Limit images by pixel count instead of edge size
Translate 'UNBLOCK' button in ConversationActivity //FREEBIE fixes #3422
Adding "You: " to conv list if last message is outgoing and fixing a typo
fixed indentation
fix contact selection header theming
Add time to messages when they are within the week
Slightly more verbose "no legacy support" message.
add custom phone number type, fixes #389
fix thumbnail click
fix handling of sms:, smsto:, mms:, mmsto: URIs
parse everything up front and use split whenever possible
validate less, no static, recipients -> path, style
isEmpty() instead of length < 1, use contains() less
throw exception for bad query param instead of considering it a null value
treat 'sms:555?body' as a legal URI
add a space :P
Fix sendComplete UI updates on destroyed views
Made kitkat 4.4 compliant
Updated support, implemented text-call response, updated mms support
- Added button to add a unknown contact. \n - Removed deprecated code
Added first changes to support updating recipients without recreating them.
Revert "Added first changes to support updating recipients without recreating them." This feature needs more time and another way of solving it.
Added german translation
Changed 'add contact' button to an option menu entry
- Renamed "Add contact" to "Add to contacts"
Merge branch 'master' into add_contact
Fixed some alignment errors and renamed 'Contact' to 'Contact info'
Merged upstream and updated project to AndroidStudio 0.8
Replaced add contact info icon
Merge branch 'master' into add_contact
Replaced tabs with spaces
Add to contacts menu item is now added via the menuinflator
Change 'SD card' to 'storage' & cosmetic corrections
Replace 'my' with 'your'
Upgrade libtextsecure 1.8.2
contact selection reeemix
inline sticky header classes
Disable AudioView controls clicks when message is selected
Fixes #7458 - Fix failing tests that reference a master secret
Improve group update descriptions
add sender parameter
refactor emoji code into package
ASCII emoji support
Upgrade Gradle to 2.10 and Android plugin to 1.5.0
support variable keyboard heights
add sane default emoji panel size
Strip separators prior to validating non-email SMS recipients
Remove unused import
Fix for recipients with unusual characters in their phone number.
fix crash on pending self-sent media
launcher icon
Add files via upload
change notification icon
change actionbar icon
change lockscreen wm dark
change lockscreen wm light
notification icon white
Delete icon_notification.png
change notification icon white
Delete lockscreen_watermark_dark.png
Delete lockscreen_watermark_light.png
add light theme to PassphrasePromptActivity
Delete lockscreen_watermark_dark.png
add dark theme to PassphrasePromptActivity
Delete lockscreen_watermark_light.png
add light theme to PassphrasePromptActivity
pixel launcher round icon
change actionbar icon mdpi
Delete lockscreen_watermark_dark.png
change lockscreen wm dark mdpi
Delete lockscreen_watermark_light.png
change lockscreen wm light mdpi
Delete icon_notification.png
Delete icon_notification.png
change notification icon white mdpi
Delete drawable-mdpi-v9
Create icon_notification
change icon notification dark mdpi
Delete icon_notification
change lockscreen watermark dark xxhdpi
change lockscreen watermark light xxhdpi
icon update xxxhdpi
change notification icon xxxhdpi
change notification icon xhdpi
change actionbar icon xhdpi
change lockscreen watermark light xhdpi
add pixel launcher round icon
change actionbar icon holo dark
add actionbar icon holo light
change actionbar icon holo dark
add actionbar icon holo light
change actionbar icon holo dark
add actionbar icon holo light
Update AndroidManifest.xml
change actionbar  icon holo dark xxhdpi
add actionbar  icon holo light xxhdpi
Revert "add actionbar  icon holo light xxhdpi"
change hdpi icons
change mdpi icons
change xhdpi icons
change xxhdpi icons
change xxxhdpi icons
change hdpi-v11
change hdpi-v9
change mdpi-v11
change xhdpi-v11
change xxhdpi-v11
change xxxhdpi-v11
change artwork
Update AndroidManifest.xml
update launcher icon mdpi
update launcher icon hdpi
update launcher icon xxhdpi
Update launcher icon xxxhdpi
add transparent icon hdpi
add transparent icon mdpi
add transparent icon xhdpi
add transparent icon xxhdpi
add transparent icon xxxhdpi
Add the ability to show more "Recent Chats" when sharing
Show groups when searching for contacts.
increased number of recent chats from 5 to 50
Shortcuts for Android 7.1
Do not add shortcuts if the list is empty
shortLabel and longLabel cut
Change strings
Removed new group shortcut
- Fix #913: Message ID has to be set when called from listener
- Fix #913: Message ID has to be set when called from listener
- Fix #913: Prefer to handle the fix with record.getId()
Blacklist OnePlus X from hardware AEC
Remove unused icon
Don't mention CyanogenMod
Disable screen during earpiece voice note playback
1) discovered that a spurious onItemClick callback occurs when moving left or right across an image before releasing a long click. 2) prevented the false onItemClick from occuring by curating the list view and item view onTouch actions.
Use ACTION_OPEN_DOCUMENT for Android >= KitKat. Fixes #926.
Integrate ViewPager, shows one image
Forward threadId to MediaPreview
Implement paging lock
Implement image draft preview
Fix memory leak
Make paging experience smoother
Async load thread images from database
Remove draftMode, image draft preview crashes for now
Use cursor directly instead of conversion to list
Go to right image means forward in time
Rename adapter accessing thread media
Use interface for adapter access
Implement image draft preview, again
transform google photos nonsense URI scheme to something usable when necessary
Use ACTION_GET_CONTENT for attachment picking on all platforms
Implement ListenableFuture in PersistentBlobProvider
Use a SyncAdapter to synchronize the directory "the Android Way"
Fixing style issues
refactor emoji code into package
refactor emoji code into package
Workaround to add tsdevice:/? string when QR codes won't work
Fix synced sent media messages expiring too fast
Add fast scroller to conversation view
Move scroll_to_bottom_button to the left
Center "scroll to bottom" button
Implement Basic WebSocket support
Basic implementation of Websocket Resources
Implement delivery receipts.
fix translation of MessageDetailsActivity's label
prevent contact number NPE
Use full icon size
when camera preview is open, the preview toggle button will close the preview
Refactor "parts" to contain MMS/PDU madness to MMS code paths.
Rename PartDatabase -> AttachmentDatabase
Address mcginty comments
Show lock notification immediately after setting is toggled
Solving the issue #4132
Sending the user to the ConversationListActivity when he is in ConversationActivity
fix for issue #2891: Alignment of the keyboard / Smiley switch for long texts
Introduction of a new "About application" page
Add version info in preferences/advanced
add app name and version number to preferences section "Version"
Show emoji-only messages larger
Add a space between group member names
fix "rough scaling" bitmaps
fix Code style Guidelines link in contributing.md
Fix group message resend button behaviour
Keep error state as long as there are errors
Check for identity key mismatches, too
Show a "resend all" button for >1 network failures
Fix resend, resend all & verify button appearance
Remove per-recipient resend buttons
Re-enable resend button after a failed resend
Fix resending in one-to-one conversations
Don't display resend button for ID mismatches
Fix MediaPreviewActivity showing wrong image sender
Use a single resend job for all network failures
Store only primitive types in PushGroupSendJobs
sticky date headers
use Locale from DynamicLanguage for displaying dates
add @Nullable annotation for consistency and follow existing naming conventions for constants
Save drafts for recipients without an existing thread
Preserve shortcuts to old launcher activity
Calculate SMS characters respecting encoding
Refactor: Don't do heavy lifting in UI thread when loading Conversation
Fix group message resend button behaviour
Keep error state as long as there are errors
Check for identity key mismatches, too
Show a "resend all" button for >1 network failures
Fix resend, resend all & verify button appearance
Remove per-recipient resend buttons
Fix resending in one-to-one conversations
Fix MediaPreviewActivity not showing image sender
Don't display resend button for ID mismatches
Fix MediaPreviewActivity showing wrong image sender
Fix whitespace
Use a single resend job for all network failures
Store only primitive types in PushGroupSendJobs
Remove unregistered group members
Don't issue errors when group members unregister
Add missing MSISDN headers to MMS send request
fix unit strings
Fix forwarding text to new coversation
Wording: Improve some strings in Privacy preferences
RTL support
Apply message bubble paddings to both top and bottom
Display send date for incoming messages
only send group avatar when modified
smooth transition for custom keyboards and softkey
InputManager refactor
refactor to InputAwareLayout
Use Glide for loading part thumbnails
make ForegroundImageView undestand slide deck futures
ThumbnailView
pass MasterSecret with Uri refactor
refactor glide request code
remove now-unused method in PartAuthority
overview mastersecret passing
use custom transform to avoid storing aspect ratio
remove some debug code
untouch a file
remove transform debug code
Memory leak fix for RegistrationProgressActivity. RegistrationService maintains a reference via RegistrationStateHandler.
Fixed leak associated with DatabaseMigrationActivity.  ApplicationMigrationService maintains a reference via ImportStateHandler.
Memory leak fix. MediaOverviewActivity leaks its context via an anonymous listener that references it.
Closes issue #3224 and addresses memory leaks observed in NewConversationActivity, ConversationActivity, ConversationListActivity.
Blacklist OnePlus X from hardware AEC
Remove unused icon
Don't mention CyanogenMod
Disable screen during earpiece voice note playback
migrate ReceiveKeyDialog to MaterialDialog to enable dark theme
let the quick camera remember front/back mode
Support recovering forgotten/unknown group info from sender
Fixes messages sent to self
fix direct capture file writing race condition
Add wildcard on both sides of verification SMS regex
Added white background to indicator for BLOCKED indicator
Adding "You: " to conv list if last message is outgoing and fixing a typo
fixed indentation
Pull some MessageRecord members up to DisplayRecord
Extract the StatusManager into its own public class
Add delivery status icons to the inbox
Make sure the convo list gets updated on all changes
Put indicators to the left of the snippet
Don't use DisplayRecord constants directly in the ThreadDB
Address remaining comments
Slightly adjust check mark padding (again)
Alerts on the left, the rest on the right
Right-align the inbox pending indicator properly
More conservative alignment :( + remove useless context member
Even more alignment fixes
Switch to a better failure icon for the inbox
Use a better way of properly right-aligning "..." in the inbox
Stop translating status values back and forth
Fix problems introduced by the rebase
Remove redundant notifyConversationListListeners() calls
Use better if-else brace style
Add delivery status to the archived view
Reintroduced the encrypted backup of messages and keys. Removed the native libraries from this backup. Signal now needs a restart after restoring an encrypted backup.
Don't issue errors when group members unregister
Change read receipt icon from dark blue to green
emojicons
always show enter key, better minheight
add pin, refactor keyboard height calculation
remove unnecessary invalidate
move routing logic to all activities
revert getMasterSecret()-related changes
Change insecure icon to red_400
Change Insecure icon to red_400
Change insecure indicator to red
Change insecure indicator to red
Update conversation_item_received.xml
Change insecure indicator icon to red,
Improve inactive and blocked conversation views
move db query off main thread, fix group self-add
Enable proximity sensor while call is ringing
fix indentation
add missing space after if keyword
Introduction of a new "About application" page
add app name and version number to preferences section "Version"
added test for forward of text message, detects #3413 and validates #3414
Enable media message forwarding 2nd attempt
check for null Intent.EXTRA_STREAM
- "Send unencrypted" forces a unencrypted sms - #919: Menu item to send a sms
Implement delivery receipts.
Index shouldn't be unique.
migrate ReceiveKeyDialog to MaterialDialog to enable dark theme
fix layout ellipsis errors
Fix plaintext export XML escaping fixes the reason for #6830 by escaping the contact name too
warn user before build expires
warn user before build expires
update strings
prevent blocking recipient resolution on UI thread
Allow GridView to intercept clicks
Fix some GB weirdness, support for batch archive actions
tweaks
Don't archive the archive element
Make the batch action unarchive when in the archive
Optionally show progress for long running operations
Fix batch unarchive snackbar text
Turn off swipe gestures when in batch selection mode
Remove in-conversation delete thread action
Added QuickContact onclick in GroupMembersDialog
Do not decrease compose hint font size
Fix redundant if
Move default SMS and system import to "reminders"
refactor initializeReminders()
Reintroduced the encrypted backup of messages and keys. Removed the native libraries from this backup. Signal now needs a restart after restoring an encrypted backup.
Adding task affinity to the share activity. Fixes #7312.
add dependencies to BUILDING.md
remove version numbers
fix issue #1759
clean up EmojiDrawer layout
change the displayed direction of incoming self-textmessages and suppress notifications
change the displayed direction of incoming self-mediamessages and suppress notifications
Display send date for incoming messages
Fix image cache bugs.
Add preview of encryption channel in input field hint.
Split initializeSecurity() into two methods (initializeSecurity() and initualizeSecurityUI()) to make it less confusing. Also put else on the same line.
Fixes messages sent to self
tell ComposeText transport, it handles the rest
fix header/footer item ID issue
Prevent crash from strange SQLite error
Pull up method setTicker(...)
Harmonize ticker content
Add separate AbstractNotificationBuilder string
finish ConversationActivity on delete of empty thread
always prompt to confirm delete of thread
display group information in message notifications
stop using undocumented broken sqlite function
don't e164-ize shortcodes
new version of libphonenumber
canonical address db refactor
add testing
remove old-new tests
Revert "Revert "stop using undocumented broken sqlite function""
Revert "Revert "Revert "stop using undocumented broken sqlite function"""
new take on canonicalizing
remove logging code
fix queuing of pending parts that had data already
Reactivate a group if a contact gets readded Fixes #723 //FREEBIE Removes the own number from group on leaving, to receive a proper re-added message
Fix for toggle behavior during rapid clear/fill cycles.
sticky date headers
Fixing the issue #2791 (Export backups to a sub-folder)
#2791 / #1901 - Backups to sub-folder
#2791 / #1901 - Backups to sub-folder
#2791 - BACKUPFOLDERNAME added
2791 - foldernames to static strings
Fixing the issue #2791 (Export backups to a sub-folder)
Change the name and access modifiers of folder creation method.
Merge branch 'master' into BackupDirectory
fixing the indentation spaces
Merge branch 'master' into BackupDirectory
Fixing the issue #2791 (Export backups to a sub-folder)
I changed the way to call new File
I created a abstractBackup and changed the plaintextExport and plaintextImport to extend from abstractBackup. Fix the problem with in import backups in old paths
I changed the EncryptedBackupExporter to extend AbstractBackup and use the same directory tree of PlainTextBackup.
Change the call order to call verifyCanWrite() before setup();
Fixing the issue #2791 (Export backups to a sub-folder)
This solve the issue #3327
Fixing the issue #2791 (Export backups to a sub-folder)
Localize LedBlinkPattern preference dialog
Add Notifications Database
Use NotificationDatabase for notification preferences
Add option to customize vibrate pattern
Add option to test notification
Add per-contact notifications
Cleanup whitespace
Don't write notification values to shared prefs
No need to for ConfigContacts to handle home key
Remove empty string for AOSP
Remove unnecessary supresslint
Remove unnecessary runQueryOnBackgroundThread
1) discovered that a spurious onItemClick callback occurs when moving left or right across an image before releasing a long click. 2) prevented the false onItemClick from occuring by curating the list view and item view onTouch actions.
Use full icon size
Enabled building on windows using the current system time as build_timestamp
Remove unnecessary linebreaks from res/values/strings.xml
Tint audio controls to be visible in dark theme
catch Camera RuntimeExceptions
Clarify "SMS import complete" notification text
Reintroduced the encrypted backup of messages and keys. Removed the native libraries from this backup. Signal now needs a restart after restoring an encrypted backup.
use the Ringtone class instead of interacting with MediaPlayer directly
"image/jpg" -> "image/jpeg" on MIME type checks and saving attachments
Add MIME type to PersistentBlobProvider
Store/query MIME type in Persistent Blob URI path
Support legacy Persistent Blob URI's and file extensions
Rebase on 3.9.1, add MIME type to location snapshot blob create
Revert "Support legacy Persistent Blob URI's and file extensions"
Use file extension in Persistent Blob URI to store/query MIME type
Revert BLOB_DIRECTORY constant to String literal, used in one place
Revert "Use file extension in Persistent Blob URI to store/query MIME type"
Remove CameraView usage of JobManager.
fix "partial scroll" when sending in certain cases
add stable IDs to conversations
Accept verification SMSes with missing colons
display group information in message notifications
- "Send unencrypted" forces a unencrypted sms - #919: Menu item to send a sms
Accept verification SMSes with missing colons
As reopen of: #4091
Adding Verizon MSISDN header
Blacklist OnePlus X from hardware AEC
Remove unused icon
Don't mention CyanogenMod
make google play badge readable
don't specify language in google play badge url
Update
Fix bug on getting MIME type for external Persistent Blob URI's
allow scroll on message details view of long messages
Use a SyncAdapter to synchronize the directory "the Android Way"
Fixing style issues
Moving account creation to initial setup + package upgrade listener
Add possiblity to store key verification
Adding contact name and number to what is verified
Fixing typo
- Fix #913: Message ID has to be set when called from listener
- Fix #913: Message ID has to be set when called from listener
Merge branch 'sending_fix' of github.com:Hellmy/TextSecure into sending_fix
- Fix #913: Prefer to handle the fix with record.getId()
fix OutgoingRinger crashes
update onPrepared
remove setSound
simplify start/stop
remove loopEnabled
use single start method
simplify try-catch
fix onCompletion
fix redphone busy
fix stop outgoingRinger
catch possible exception
fix emoji not being replaced with Editable actions
Fix occasional crash on Android 7 direct reply Fixes #6185 //FREEBIE
Add camera preview to message composition
refactor direct capture
fit into new composition layout
rework camera initialization task organizing
Add button to test notifications
Add option for custom vibration pattern
Localize LedBlinkPattern preference dialog
Use NotificationDatabase for notification preferences
Add option to customize vibrate pattern
Add per-contact notifications
Cleanup whitespace
Don't write notification values to shared prefs
No need to for ConfigContacts to handle home key
Remove empty string for AOSP
Remove unnecessary supresslint
Remove unnecessary runQueryOnBackgroundThread
Localize LED Pattern Message [FREEBIE]
Add Custom Vibrate Patterns to Settings
fix variable names and alignment
Merge remote-tracking branch 'upstream/master' into VibratePattern
Fix lowercase/uppercase
Fix xml formatting
Fix formatting
Fix indent
Add setting migration
migrateNotificationVibrate()
Support for per-recipient muting, blocking, and ringtones.
Fix mute icon alignment and actionbar styling.
Fix title centering issues.
Adjust header size.
Correctly clear cache.
Fix for square cropped group avatars.
Disable blocking for TS groups.
Respect blocking for incoming SMS.
Respect blocking for MMS.
No blocking for MMS groups either.
Render "blocked" as yellow.
Switch "blocked" to themed red.
Per-Recipient notification silencing
Compactifying reminder
Rebase onto AppCompat
Fixes #6211 contact custom label name instead of phone number when available
add missing braces on if
add missing space after if keyword
- "Send unencrypted" forces a unencrypted sms - #919: Menu item to send a sms
Implemented QuickResponse
Support "quick response" when TextSecure is unlocked.
update camera preview strategy
optimize out some calls to getParameters
Fix Japanese language entry
use system properties instead of Proxy object
more debuggging info about proxies
okhttp rewrite
okhttp -> apache httpclient 4.3.x
refactor and remove separate mms fix
remove cruft, increase method readability
Prevent NPE when thumbnail click not set
Adding "You: " to conv list if last message is outgoing and fixing a typo
fixed indentation
extracted strings from java src and layout xml
added class to automate conversion of text views and edit texts with the bho typeface.  also added the TibConvert class to convert unicode entites when the time arises...
textview, edittext, button classes abstracted with type handling for tib. contains errors.
one more fix...
stringified preferences...
fixed issue with incorrect classname for bhobutton
- fixed one error in create passphrase activity. - created custom dialog to replace context menus (since context menus won't honor custom typefaces) - replaced context menu in SecureSMS (main activity)
Merge branch 'bho' of github.com:guardianproject/TextSecure into bho
replaced contextual menus in ComposeMessageActivity class
new translations
Merge branch 'bho' of github.com:guardianproject/TextSecure into bho
adding tibetan text views
build stuff
adding in strings prefs
updated localizations from transifex
removed unused view classes
transifex tx client pull config
updated strings from latest transifex
Add 'Signal Call' option to contact card
fix direct capture drag twitch
Blacklist OnePlus X from hardware AEC
Remove unused icon
Don't mention CyanogenMod
Disable screen during earpiece voice note playback
setting to disable notifications for new contacts
make "Enter name or number" translateable
Basic implementation of Websocket Resources
Set background colors for NoActionBar themes
Set switch color for NoActionBar themes
Style text cursor in contact search
Color DarkNoActionBar toolbar darker
Adjust hint text style in contact search
Revert change of light theme toggle colors
Escape single quotes in SQLite entries for message backups
Fix of issue 6551
Blacklist OnePlus X from hardware AEC
Remove unused icon
Don't mention CyanogenMod
Disable screen during earpiece voice note playback
Ignore superfluous calls to RoutingActivity.onNewMasterSecret()
Fix back button behavior for activities started from a notification
fix unit strings
Keep screen on during voice note recording
add some audio logging
do not automatically enable bluetooth audio routing
Fix group message resend button behaviour
Keep error state as long as there are errors
Check for identity key mismatches, too
Show a "resend all" button for >1 network failures
Fix resend, resend all & verify button appearance
Remove per-recipient resend buttons
Re-enable resend button after a failed resend
Fix resending in one-to-one conversations
Fix MediaPreviewActivity not showing image sender
Don't display resend button for ID mismatches
Fix MediaPreviewActivity showing wrong image sender
Fix whitespace
Use a single resend job for all network failures
Store only primitive types in PushGroupSendJobs
sticky date headers
Accessible content labels for attachment icons Fixes #5908 // FREEBIE
-
-
Merge branch 'master' of https://github.com/WhisperSystems/Signal-Android
- included use of constant instead of repetitive 1024
- replace arrays with string arrays. converting in preferences
- modified size options with 300kb-10mb
- modified size options with 300kb-10mb
- changed title
Increase JPEG quality & slow down quality decrease
Fix issue 2100: explain size limit for video attachments.
only allow thumbnail clicks when slide is present
#665 fix handling of alphanumeric sender numbers
add focus on tap to camera preview
fix issue with camera controls going missing
- Fix #913: Message ID has to be set when called from listener
Merge branch 'sending_fix' of github.com:Hellmy/TextSecure into sending_fix
- Fix #913: Prefer to handle the fix with record.getId()
Fix everlasting media drafts Due to the changes in #1985 the draft gets recreated right after the attachment dialog returns the new attachment. Therefor the attachment of the draft wont changes... //FREEBIE
Import: Check if item is valid before doing anything else
Export and import address of the thread’s primary recipient
Export the text of MMS messages in plaintext backup
Fix exporting delivery status of Signal messages
Export: Remove unused optional attributes
update IME action label
reduce emoji memory consumption
Conversation back press always goes back to conversation list. fixes #3739 // FREEBIE
refactor emoji code into package
Remove unregistered group members
Update src/org/thoughtcrime/securesms/ConversationListFragment.java
Support for archive actions
Fix some GB weirdness, support for batch archive actions
tweaks
Make the batch action unarchive when in the archive
Optionally show progress for long running operations
Fix batch unarchive snackbar text
Turn off swipe gestures when in batch selection mode
Remove in-conversation delete thread action
remove 'Media message:' prefix from MMS notification notification
Translate strings in RecipientPreferenceActivity
Add possiblity to store key verification
Adding contact name and number to what is verified
Fixing typo
Add share button for safety numbers
Add functionality to button
Remove line break after safety numbers
Catch ActivityNotFoundException
Move description from subject to first line
Add missing newline
Do not decrease compose hint font size
Fix redundant if
Change lock icons
Change ic_menu_lock_dark to full opacity white
Refactor ContactSelectionListAdapter and associated views.
changed fix to cleaner code alternative
Stop recycled bitmap crashes Fixes #792
Stop recycled bitmap crashes Fixes #792
Stop recycled bitmap crashes Fixes #792
Use ACTION_OPEN_DOCUMENT for Android >= KitKat. Fixes #926.
Do not show sent checkmark for verification status changes
Add message notification task stack
Theme number picker text (disappearing messages)
fix off-thread UI interactions in ConversationItem
moved view manipulation into UI thread
Correctly sets subtitle on conversation batch select mode during first selection
make ComposeText extend AppCompatEditText
initialize country code/name via telephonyManager.getSimCountryIso();
telephonyManager.getSimCountryIso().toUpperCase();
Send m-notifyresp-ind (NotifyRespInd) for retrieved MMS on Lollipop API
Do not call Notification.setSound with empty ringtone
Introduction of a new "About application" page
Introduction of a new "About application" page
add app name and version number to preferences section "Version"
Fixes #6343 - Support copying links on long click.
Fixes #6343 - Support links highlighting when touched.
Fix copying links when scrolling in #6343
Reset audio mode & focus on incoming ringer stop
Don't request audio focus in IncomingRinger
prevent overwriting external capture URIs
Fixing logic inside MessageNotifier
Fixing logic inside MessageNotifier
Fix indentation of if-else blocks
Buxfix for #3518
Added a testcase
The caller checks whether decoding is necessary or not
small bugfix
Possible buxfix for #3518
Adding widget with notification count
Fix wrong layout
Fix that nasty off by one
Properly reset on cancel
Update copyright
Added outgoing MMS Preferencees
Added outgoing MMS Preferencees
Changed standard Settings to ask before fallback
Added do not ask again checkbox to Fallback confirmation dialog
Fix Outgoing MMS/SMS preference
Merge remote-tracking branch 'WhisperSystems/master' into outgoingMmsPreference
Improve do not ask again checkbox behavior
update includeAndroidContacts
buildOutgoingFallbackDescription
default preferences
set mms settings before sms settings
fix the connectedCheck build target
fixed comment to reference actual issue
warn user before build expires
warn user before build expires
update strings
switch back to BufferedInputStream
Don't issue errors when group members unregister
limit displayed message length to 1024 characters.
cleaned up to comply with code guidelines
reduced patch to "resrict to 1000 characters only" as suggested
automatically check verification status when succeeding a qrcode scan
Improve disappearing message time strings
play notification sound and vibrate (if enabled) when new message received during a phone call.
don't vibrate on users face
prevent a thread race in CameraView
Support for updated fingerprint format
Make fingerprint changes optionally non-blocking
Disable send while clearing the attachment drawer
clear drafts immediately upon sending or new intent
Keep retrying message sends for 24 hours.
Improve multi-device strings consistency
rotate images regarding exif information
fix variable names, public->private
fix public->private
add another createScaledBitmap()
refactor, fix group avatar
added Google Play Store textfiles en/fr/de
upd latest German version
+new google-playstore-string.xml (English)
Fix conversation list safety number change snippet for groups
Change "SD card" to "storage" & cosmetic changes
Fix some existing 'sd_card' string names
Revert "Fix some existing 'sd_card' string names"
Change 'phone' to 'device'
Merge remote-tracking branch 'refs/remotes/WhisperSystems/master' into storage
👀 the 💥😐
fix zero length attachments crashing signal
Support for disappearing messages
Make sure disappearing message notifications disappear for receiver
Display thread summary of disappearing message update
Support for disappearing messages in message detail view
Always show call action item
Don't start timer for attachments until they've been downloaded and seen
Make conversation update messages selectable and removable
Don't expire timer update notifications
Move disappearing menu off state into overflow menu
limit displayed message length to 1024 characters.
cleaned up to comply with code guidelines
reduced patch to "resrict to 1000 characters only" as suggested
Fix for getting the device number with national prefix and by removing the forced country code '+1' when digit count equals ten
Support for disappearing messages
Make sure disappearing message notifications disappear for receiver
Display thread summary of disappearing message update
Support for disappearing messages in message detail view
Always show call action item
Don't start timer for attachments until they've been downloaded and seen
Make conversation update messages selectable and removable
No need for ivar. Use local variable.
Fix issue #577.
fix failed incoming MMS regression
Blacklist OnePlus X from hardware AEC
Remove unused icon
Don't mention CyanogenMod
Disable screen during earpiece voice note playback
Allow deleting attachments from media overview
Add "select all" context menu entry
Allow saving all attachments of a thread
Address comment (cursor looping)
add resized resources
Merge pull request #1 from agrajaghh/ex/fehnomenal/export-all-media
Add possiblity to store key verification
Adding contact name and number to what is verified
Fixing typo
fix silent in-thread notification
added class to automate conversion of text views and edit texts with the bho typeface.  also added the TibConvert class to convert unicode entites when the time arises...
textview, edittext, button classes abstracted with type handling for tib. contains errors.
one more fix...
stringified preferences...
- fixed one error in create passphrase activity. - created custom dialog to replace context menus (since context menus won't honor custom typefaces) - replaced context menu in SecureSMS (main activity)
replaced contextual menus in ComposeMessageActivity class
new translations
Merge branch 'bho' of github.com:guardianproject/TextSecure into bho
added values-bo Tibetan support
adding tibetan text views
adding in strings prefs
updated localizations from transifex
removed unused view classes
transifex tx client pull config
updated strings from latest transifex
udpated tx config for lang mapping
restyled menus for clarity
Russian translation
migrate AlertDialog to material-dialogs
update proguard, otherwise install is failing on gingerbread devices with "E/dalvikvm LinearAlloc exceeded capacity"
Support recovering forgotten/unknown group info from sender
fix onDestroy NPE when views not inflated
update controls properly on orientation change
Allow GridView to intercept clicks
limit displayed message length to 1024 characters.
cleaned up to comply with code guidelines
reduced patch to "resrict to 1000 characters only" as suggested
Save one call of .toArray()
Allow saving all attachments of a thread
Address comment (cursor looping)
add resized resources
Merge pull request #1 from agrajaghh/ex/fehnomenal/export-all-media
STATUS_NONE should be equals to -1 instead of 0. fixes #503
added Google Play Store textfiles en/fr/de
upd latest German version
+new google-playstore-string.xml (English)
add dependencies to BUILDING.md
remove version numbers
fix keyboard/focus regressions
Fix multi-thread intents launching a conversation
- Fix #913: Message ID has to be set when called from listener
Merge branch 'sending_fix' of github.com:Hellmy/TextSecure into sending_fix
- Fix #913: Prefer to handle the fix with record.getId()
- "Send unencrypted" forces a unencrypted sms - #919: Menu item to send a sms
- force push option with control
- Fix bug, where push message is marked as sent without really sending
Merge remote-tracking branch 'remotes/upstream/master' into option_push_force
- Fix #919 and addressing #671: Option to prefer push and a force send sms
- Remove duplicate method
Threshold for alarming notifications
fix crash on null Android contact name
Add MIME type to PersistentBlobProvider
Store/query MIME type in Persistent Blob URI path
Support legacy Persistent Blob URI's and file extensions
Revert "Support legacy Persistent Blob URI's and file extensions"
Use file extension in Persistent Blob URI to store/query MIME type
Revert BLOB_DIRECTORY constant to String literal, used in one place
Revert "Use file extension in Persistent Blob URI to store/query MIME type"
fix handling of sms:, smsto:, mms:, mmsto: URIs
parse everything up front and use split whenever possible
validate less, no static, recipients -> path, style
isEmpty() instead of length < 1, use contains() less
throw exception for bad query param instead of considering it a null value
treat 'sms:555?body' as a legal URI
add a space :P
Add branded launch
Ignore unencrypted messages
Add camera preview to message composition
encrypt files from direct camera capture
delete temp encrypted file when draft media is replaced
Added XML Files for Arabic Translation
Added Backup Option to Backup Menu
Improve key iterations
Check android sdk sha256 sum on Dockerfile
Output at most one frame from AudioCodec::decode
Flag secure in all activities that extends BaseActionBarActivity
Changing the method to private
Add possiblity to store key verification
Adding contact name and number to what is verified
assert gif size constraints before OOMEs
Display send date for incoming messages
Added "verified" to contacts database.
Merge remote-tracking branch 'upstream/master'
Fixed #5272
Changed the contacts selector for attachment to match the fact that only phone numbers can be shared.
Enable delivery reports by default.
Merge remote-tracking branch 'upstream/master'
Merge
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'.
Merge remote-tracking branch 'upstream/master'
Added persistent verified status in new verification action
Merge remote-tracking branch 'upstream/master'
Added "silent" ringtone to contacts.
Merge commit 'ca3337232b16f07d48d4ac80fd0c852fd8e45be4'
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Merge commit 'f0b615eda60d12f3fd8703865a92b75feb435110' Did not chose the latest commit since a test fails in it.
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Merge commit 'f148ff8bfa1d12e15f11b64feaad01bedbd5eb5b'
Merge commit '70d94c01303972874d8181b615486ddedd32611f'
Added persistent verification information depending on the peers public key. This will show the "verified" animation when clicking "Verify safety number" if that contact has been verified using qr code. It can not be set arbitrarily by the user. // FREEBIE
Merge remote-tracking branch 'upstream/master' into MemberIdentifying
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master' into MemberIdentifying
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master' into MemberIdentifying
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master' into MemberIdentifying
Merge remote-tracking branch 'upstream/master'
Merge branch 'master' of https://github.com/WhisperSystems/Signal-Android
Merge remote-tracking branch 'origin' into MemberIdentifying
Support for quick reply from notifications.
Finish popup when expanding.
Inject iterations into MasterSecretUtil
Refactor to fetch iterations from mock function
Remove iterations from signature
Display send date for incoming messages
- Fix #913: Message ID has to be set when called from listener
- Fix #913: Message ID has to be set when called from listener
Merge branch 'sending_fix' of github.com:Hellmy/TextSecure into sending_fix
- Fix #913: Prefer to handle the fix with record.getId()
Fix missing MasterSecret in PartProvider
Enable media message forwarding 2nd attempt
fix gingerbread press reaction
Adding option to hide non-Push-Contacts. This fixes #664 (partly, see below)
- "Send unencrypted" forces a unencrypted sms - #919: Menu item to send a sms
Change background connection icon
Fixed 'All Media' toolbar color mismatch.
Added ic_reply.png
Added WearReplyReceiver
Fix up wearable reply stuff a little.
Fixed Group reply
Removed choices (R.array.MessageNotifier_wear_replies)
add notification extensions for android wear
Give user the opportunity to chose no LED-notification.
Give user the opportunity to chose no LED-notification.
Changed string/preferences__black -> string/preferences__none
Removed Color 'black'; Checks for value 'none' before building Led Notification.
Support for playing video in-app
Allow copying of text from media messages.
Allow multi-copy with media messages.
Only show copy if text is selected, remove newlines from copied text.
make search hint translatable
1) removed unused import. 2) corrected default value of 'pref_key_ringtone'.
using Uri constant 'Settings.System.DEFAULT_NOTIFICATION_URI' instead of string constant.
First attempt at addressing issue #726.
Minor indentation fix.
Forgot a null check.
use internal emoji pane for all android versions
Make "Contact joined Signal" translatable
Fixed incompatibility that was introduced with #992.
Add save icon for "save attachment" in action bar. Also force its display.
No need for ivar. Use local variable.
Fix issue #577.
extra logging for activity lifecycle
Add shadow under compose view on scroll
Show shadow below conversation input panel (#5098)
prevent SMS/MMS composition in UI when messaging to non-TextSecure users is not enabled
Use Glide for loading part thumbnails
make ForegroundImageView undestand slide deck futures
ThumbnailView
pass MasterSecret with Uri refactor
refactor glide request code
overview mastersecret passing
use custom transform to avoid storing aspect ratio
remove some debug code
untouch a file
remove transform debug code
cleanup per recipient ringtone preference
enable silent per recipient ringtone preference
Refactor statement
Rearrange hours_ago string
Use existing relative time span string method
Undo refactoring
Fix some potential integer overflows for expiration time
add permissions to app for default SMS
undo whitespace changes
dont notify on receive if kitkat+ and not default
remove RESPOND_VIA_MESSAGE
fix isDefaultSmsProvider and simplify logic
remove BROADCAST_SMS
ignore SMS_RECEIVED if kitkat and default app
move isDefaultSmsProvider into Util
properly handle default SMS provider for MMS
Fix flickering emoji and periodic emoji vanishings
remove unnecessary drawable logic
Save drafts for recipients without an existing thread
fixes #1407, sharing contact from the Contacts app
Fix everlasting media drafts Due to the changes in #1985 the draft gets recreated right after the attachment dialog returns the new attachment. Therefor the attachment of the draft wont changes... //FREEBIE
Enable proximity sensor while call is ringing
swap statusbar color in dark theme
rename variables
add 4th color row
renaming / ordering
Support for per-recipient muting, blocking, and ringtones.
Fix mute icon alignment and actionbar styling.
Fix title centering issues.
Correctly clear cache.
Fix for square cropped group avatars.
Disable blocking for TS groups.
Respect blocking for incoming SMS.
Respect blocking for MMS.
No blocking for MMS groups either.
Render "blocked" as yellow.
Switch "blocked" to themed red.
Per-Recipient notification silencing
Add reminder in muted threads
Compactifying reminder
propagate message read status
improved markThreadAsRead behavior
display message read status
apply workaround for Android 4 bug
Signal: Clarify a string.
limit displayed message length to 1024 characters.
cleaned up to comply with code guidelines
reduced patch to "resrict to 1000 characters only" as suggested
subclass ringtone pref to allow per-recipient ringtone setting dialog to represent setting state #3397
mod alignment #3397
spaces removed #3397
indent fix #3397
changes for displaying contact Name aside contact number
change scope of findContactName to private
extracted strings from java src and layout xml
added class to automate conversion of text views and edit texts with the bho typeface.  also added the TibConvert class to convert unicode entites when the time arises...
textview, edittext, button classes abstracted with type handling for tib. contains errors.
one more fix...
stringified preferences...
- fixed one error in create passphrase activity. - created custom dialog to replace context menus (since context menus won't honor custom typefaces) - replaced context menu in SecureSMS (main activity)
Merge branch 'bho' of github.com:guardianproject/TextSecure into bho
replaced contextual menus in ComposeMessageActivity class
new translations
added values-bo Tibetan support
adding tibetan text views
build stuff
adding in strings prefs
removed unused view classes
udpated tx config for lang mapping
restyled menus for clarity
Russian translation
Russian translation
Updated to work with API Level 8 (Android 2.2)y
Replaced contact picture ImageViews with QuickContactBadges
scroll *all* the way
Support for archive actions
Fix some GB weirdness, support for batch archive actions
tweaks
Make the batch action unarchive when in the archive
Optionally show progress for long running operations
Turn off swipe gestures when in batch selection mode
Remove in-conversation delete thread action
fix plurals
address review comments
fix unit strings
Workaround to add tsdevice:/? string when QR codes won't work
add focus on tap to camera preview
Improve draft saving's integration with Activity lifecycle
Recycle correctly instead of turning it off
Pass correct address from media overview to preview
Don't update convo items with group recipient data
Increase swipe-to-archive snackbar duration
Allow saving all attachments of a thread
Address comment (cursor looping)
add resized resources
Merge pull request #1 from agrajaghh/ex/fehnomenal/export-all-media
fix plurals
address review comments
Support for disappearing messages
Make sure disappearing message notifications disappear for receiver
Display thread summary of disappearing message update
Support for disappearing messages in message detail view
Don't start timer for attachments until they've been downloaded and seen
Make conversation update messages selectable and removable
Don't expire timer update notifications
Move disappearing menu off state into overflow menu
Support sending notifications to Pebble watches
Remove preferenceLayoutChild present on some notification settings
Fix spelling in disclaimer
Delete unused disclaimer file
Reset MessageNotifier and NotificationItem
Moved Pebble functions to PebbleNotifier class and changed notification mechanism
PebbleNotifier now uses getDisplayBody instead of getBody
Remove unused import and improve code style
Improve PebbleNotifier message retrieval and notification system
Fix issue where encrypted message notifications are sent twice if received before the user has entered the master password
Clearer notification text when receiving encrypted message
add notification extensions for android wear
fix missing EmojiTextViews
Fix some wording for group conversations
Change notification privacy setting wording
Fix failed SMIL generation when part name is null
fix selfie horizontal flip
Use gravity instead of calculations
Fixed action bar title not being translated after language change
Check if bitmap is not null in createScaledBitmapInto
fix direct capture control view placement
unjankify incoming media sharing
Fixes #7293. Custom ringtones are now resolved for calls from system contacts.
Threshold for alarming notifications
Set background colors for NoActionBar themes
Set switch color for NoActionBar themes
Style text cursor in contact search
Color DarkNoActionBar toolbar darker
Adjust hint text style in contact search
Revert change of light theme toggle colors
Fix outgoing group edit action marked as unread messages
stop using undocumented broken sqlite function
don't e164-ize shortcodes
new version of libphonenumber
canonical address db refactor
add testing
remove old-new tests
Revert "remove old-new tests"
Revert "Revert "stop using undocumented broken sqlite function""
Revert "Revert "Revert "stop using undocumented broken sqlite function"""
new take on canonicalizing
caching fixed
remove logging code
don't play in-thread notification sound in priority mode fixes #3337
Add forward button to MediaPreview
Add share button for attachments and drafts
Externalize share button title
Resolve media message race condition
Enabled audio and video drafts All slide types do have an "image", therefore we need to switch the check order fixes string DraftDatabase_Draft_video_snippet //FREEBIE
Allow batch deletion of media.
Pass correct address from media overview to preview
- "Send unencrypted" forces a unencrypted sms - #919: Menu item to send a sms
Reset audio mode & focus on incoming ringer stop
Don't request audio focus in IncomingRinger
Fix crash when username is null in mms auth
Fix sharing text via ShareActivity intents
Fixing broken unit test for ConversationAdapter
Fix title centering issues.
Correctly clear cache.
Fix for square cropped group avatars.
Respect blocking for incoming SMS.
Respect blocking for MMS.
Render "blocked" as yellow.
Switch "blocked" to themed red.
Per-Recipient notification silencing
Add reminder in muted threads
Compactifying reminder
Rebase onto AppCompat
Remove unregistered group members
Pull some MessageRecord members up to DisplayRecord
Extract the StatusManager into its own public class
Add delivery status icons to the inbox
Make sure the convo list gets updated on all changes
Put indicators to the left of the snippet
Don't use DisplayRecord constants directly in the ThreadDB
Rename the constant translation methods
Address remaining comments
Slightly adjust check mark padding (again)
Alerts on the left, the rest on the right
Right-align the inbox pending indicator properly
More conservative alignment :( + remove useless context member
Even more alignment fixes
Switch to a better failure icon for the inbox
Use a better way of properly right-aligning "..." in the inbox
Stop translating status values back and forth
Fix problems introduced by the rebase
Remove redundant notifyConversationListListeners() calls
Don't issue errors when group members unregister
Updated emoji set
bugfix, crashed at adding new conversation, nexus 7 2 without SIM
Keep error state as long as there are errors
Check for identity key mismatches, too
Show a "resend all" button for >1 network failures
Fix resend, resend all & verify button appearance
Remove per-recipient resend buttons
Re-enable resend button after a failed resend
Fix resending in one-to-one conversations
Don't display resend button for ID mismatches
Fix MediaPreviewActivity showing wrong image sender
Fix whitespace
Use a single resend job for all network failures
Store only primitive types in PushGroupSendJobs
Pull some MessageRecord members up to DisplayRecord
Extract the StatusManager into its own public class
Don't use DisplayRecord constants directly in the ThreadDB
Rename the constant translation methods
Address remaining comments
Slightly adjust check mark padding (again)
Alerts on the left, the rest on the right
Right-align the inbox pending indicator properly
More conservative alignment :( + remove useless context member
Even more alignment fixes
Switch to a better failure icon for the inbox
Use a better way of properly right-aligning "..." in the inbox
Stop translating status values back and forth
Fix problems introduced by the rebase
Remove redundant notifyConversationListListeners() calls
Use better if-else brace style
Add delivery status to the archived view
workaround GB GridView click handling bug
fix landscape padding
Remove race condition between extraneousGUI events disabling speakerphone and ringtone playing through speakerphone, fixes #6356, #6406
Fix forwarding text to new coversation //FREEBIE
bump sdk to 22, update notifications
gingerbread assets
categories and addPerson for single /and/ multi
Adding task affinity to the share activity. Fixes #7312.
make QuickCamera unclickable
Update string name as per project convention
Update string name as per project convention
Bringing up to date with master
If Signal isn't enabled for receiving SMS, don't allow sending SMS
change hdpi icons
change mdpi icons
change xhdpi icons
change xxhdpi icons
change xxxhdpi icons
change hdpi-v11
change mdpi-v11
change xhdpi-v11
change xxhdpi-v11
change xxxhdpi-v11
change artwork
Update AndroidManifest.xml
update launcher icon mdpi
update launcher icon xhdpi
update launcher icon xxhdpi
Update launcher icon xxxhdpi
add transparent icon hdpi
add transparent icon mdpi
add transparent icon xhdpi
add transparent icon xxhdpi
add transparent icon xxxhdpi
Use ACTION_OPEN_DOCUMENT for Android >= KitKat. Fixes #926.
fix keepAlive interval for non GCM Android #6644
fix timeout duration
Periodically "prod" the message pipe, when GCM is disabled
Move default SMS and system import to "reminders"
refactor initializeReminders()
fix ContactUpdates for non-e164 contacts
Change read receipt icon from dark blue to green
- "Send unencrypted" forces a unencrypted sms - #919: Menu item to send a sms
Add possiblity to store key verification
Fix NewConversationActivity toolbar/overflow dynamic theming
let ThumbnailView handle remove button placement
fix attachment remove button alignment
move routing logic to all activities
revert getMasterSecret()-related changes
Updated authenticator icons (Fixes #7908)
fix unit strings
Add sorting by default phone number
Per-Recipient notification silencing
Add reminder in muted threads
Compactifying reminder
Rebase onto AppCompat
really fix crash from incorrect send job
Russian translation
Russian translation
Override startActivity to add CREATE_NEW_TAB extra
Override startActivity to add CREATE_NEW_TAB extra
Merge branch 'links_open_new_tab' of github.com:jkdf2/Signal-Android into links_open_new_tab
Update spacing to 2.
fix crash when opening link with no browser installed
Fix group message resend button behaviour
Keep error state as long as there are errors
Check for identity key mismatches, too
Show a "resend all" button for >1 network failures
Fix resend, resend all & verify button appearance
Remove per-recipient resend buttons
Fix resending in one-to-one conversations
Fix MediaPreviewActivity not showing image sender
Don't display resend button for ID mismatches
Fix MediaPreviewActivity showing wrong image sender
Use a single resend job for all network failures
Store only primitive types in PushGroupSendJobs
Fixes messages sent to self
use internal emoji pane for all android versions
migrate to AppCompatDialog
fix for PlayServicesProblemFragment
remove material-dialogs dependency
migrate dialogs from the mute/block change
remove android:backgroundDimEnabled=false
Revert "remove android:backgroundDimEnabled=false"
chain AlertDialog.Builder methods
// FREEBIE
Exclude numbers instead of contact_ids
Filter contacts directly in db queries
fiter duplicated numbers
refactoring
Revert "refactoring"
update contact query
update contact query
show transfer progress when re-sending failed media
emojify!! emojify!?
migrate ReceiveKeyDialog to MaterialDialog to enable dark theme
Tint default avatars in group chats. Fixes #969
Reverting null-changes
Properly resetting resources
Hashing directly into the HSV palette
Fix changing files for no reason
Fix the content description of the audio record button
set default characterset to utf-8. resolves issue 6374
Fixed issue #4074
Fix issue 2150: message details not reflecting 24-hour system preference.
Add the option to mute notifications for one year. Closes #4448.
Ignore unencrypted messages
Russian translation
refactoring
Revert "refactoring"
update contact query
update contact query
Allow deleting attachments from media overview
Add "select all" context menu entry
Don't block UI while loading the contact list. Added a simple ContentProvider for push contacts.
Adding option to hide non-Push-Contacts. This fixes #664 (partly, see below)
Depend on sms preferences
Linkify geo URIs
group and contact list fixes
Add check of xml file to plain text export.
Replacing of invalid characters before export.
make invite strings plural
Automatically show keyboard when new SMS is composed
Automatically show keyboard when new SMS is composed
Automatically show keyboard when new SMS is composed
Merge remote-tracking branch 'origin/master'
Automatically show keyboard when new SMS is composed
Automatically show keyboard when new SMS is composed
Add Intent.FLAG_INCLUDE_STOPPED_PACKAGES
Re-add Android Auto manifest entry
Initial Android Auto support
Explicitly set UnreadConversation Message and Timestamp
Fix the reply code to use OutgoingTextMessage
Merge branch 'master' into android_auto
Merge remote-tracking branch 'upstream/master' into android_auto
Adapt Android Auto Intents to upstream changes
Merge remote-tracking branch 'upstream/master' into android_auto
Android Auto: Fix codingstyle and add localization
Indentation changes according to feedback
Avoid exporting AndroidAutoReplyReceiver and ws fixes
Don't export the AndroidAutoHeardReceiver
fix invalid transportation options
Improve #3990
Improve #3990
Resolve emoji keyboard layout issues
workaround GB GridView click handling bug
fix landscape padding
Support for per-recipient muting, blocking, and ringtones.
Fix mute icon alignment and actionbar styling.
Adjust header size.
Correctly clear cache.
Fix for square cropped group avatars.
Disable blocking for TS groups.
Respect blocking for incoming SMS.
Respect blocking for MMS.
No blocking for MMS groups either.
Render "blocked" as yellow.
Switch "blocked" to themed red.
Pass correct address from media overview to preview
display group information in message notifications
fix redphone init race condition
fix redphone terminate race condition
play sound while connecting
Fix theme usage for passphrase activity
add dark theme to PassphrasePromptActivity
Applies selected theme to unlock screen. Fixes issue #2296
fix timeout duration
make RecyclerView unique IDs per thread
remove caching of ThreadRecords
set list adapter to null when (recipients or threadId == null) to prevent old messages from being displayed when forwarding a message to a recipient for which there is no existing conversation.
Fixed issue #3536. Updates visibleThreadId after sending a message in a new thread
fix receiving utf-8 characters in multimedia push messages
restart camera preview on orientation change
Added a new Stopwatch class to easily log timings.
Added OrderEnforcer class to schedule ordered tasks.
Turned SingleUseBlobProvider into MemoryBlobProvider.
Implemented new camera capture flow.
Added alternative to failed bitmap, otherwise app becomes unstable. This could be used by attacker to force use of less secure methods, and possibly other damage to device.
Support for direct photo capture from app.
fix images disappearing when in recyclerviews
Split initializeSecurity() into two methods (initializeSecurity() and initualizeSecurityUI()) to make it less confusing. Also put else on the same line.
Don't show sent checkmark for outgoing calls
use Loader when conversation is updated instead of requery
Refactor: Don't do heavy lifting in UI thread when loading Conversation
Fix context menu
move db query off main thread, fix group self-add
support repeating keyevents for emoji backspace
encapsulate key repeat logic into its own class
Refactor into RepeatableImageKey
reset contact selection after batch invite
Fixed leek of personal information (phone number) to Android Logcat.
fixing duplicate system-contacts
fixing code formatting
remove unnecessary whitespace
better mode of doing this
whitespace
Add 48 text-only emoji/emoticons/kaomoji
Fix text emoji pane font size and vertical align
Added file locations to Import & Export functions
Removed absolute /sdcard directory reference
use glide for encoding and resizing outgoing media
use same default group photo in GroupCreateActivity
Set ActionBar title to "Privacy"
Fix for issue 973 (Sharing photos are in wrong format on the Galaxy S3)
removed unnecessary imports
This also rotates the actual image, not only the thumbnail
add CHANGELOG.md #1161
Unify alert dialog button colors
Unify dialog (radio) button colors
Restore former dialog layout
Raise button-background contrast in dark theme
Raise button-background contrast in light theme
Fix resend buttons being shown when they shouldn't
update camera preview strategy
Fix for media thumbnails flickering on model updates.
Seek to the beginning before playing ringtone
Release MediaPlayer immediately after ringer stops
fiter duplicated numbers
refactoring
Revert "refactoring"
update contact query
update contact query
Let LogSubmitActivity adapt to theme
add dynamicTheme and dynamicLanguage to MessageDetailsActivity
add dark theme to PassphrasePromptActivity
dont merge - artwork for pixelapse
reduce emoji memory consumption
Fix for media thumbnails flickering on model updates.
modified ConversationFragment and ConversationListFragment to use the LoaderManager more efficiently. dropped wasteful call to notifyDataSetChanged() in ConversationFragment.
dropped threadIdChanged boolean
handle null emojify inputs better
Set background colors for NoActionBar themes
Set switch color for NoActionBar themes
Style text cursor in contact search
Color DarkNoActionBar toolbar darker
Adjust hint text style in contact search
Revert change of light theme toggle colors
prevent contact number NPE
fix broken unit tests
remove unmaintained espresso tests
Blacklist OnePlus X from hardware AEC
Remove unused icon
Don't mention CyanogenMod
Disable screen during earpiece voice note playback
changed ContactsDatabase.query() method to add the 'New message to... <phone number>' cursor row regardless of the 'pushOnly' arg or TextSecurePreferences.isSmsEnabled().
Add vertical spacing to emoji sprites
Use high-resolution contact photos in calls
Restrict in-call contact picture height to visible area
Add different dpi versions of ic_contact_picture_large
Use @agrajaghh's optimized PNGs
Introduction of a new "About application" page
add app name and version number to preferences section "Version"
fix checkbox overlap with fastscroll
Break long filter thread id calls up into chunks of 900.
check if image decoding succeeded before using the result
use Locale from DynamicLanguage for displaying dates
add @Nullable annotation for consistency and follow existing naming conventions for constants
add previewFormat logging to QuickCamera
include name when sending contact info
Display send date for incoming messages
bump sdk to 22, update notifications
gingerbread assets
categories and addPerson for single /and/ multi
notification logo changed to match the latest version according to issue #2732
the new notification picture was reduced in size to match the size of the old one
prevent early callback death
Improve date localization for API >= 18 (4.3, JELLY_BEAN_MR2)
Theme background color in device link card
Use theme in device link scanning screen
#733 fixed log message
Transifex: pull Serbian
Fix selection for hungarian (magyar)
Fix reacting to messages when not the default SMS provider
Localize LedBlinkPattern preference dialog
Add Notifications Database
Use NotificationDatabase for notification preferences
Add option to customize vibrate pattern
Add option to test notification
Add per-contact notifications
Cleanup whitespace
Don't write notification values to shared prefs
No need to for ConfigContacts to handle home key
Remove empty string for AOSP
Remove unnecessary supresslint
Add preview of encryption channel in input field hint.
Split initializeSecurity() into two methods (initializeSecurity() and initualizeSecurityUI()) to make it less confusing. Also put else on the same line.
Add button to flip camera (front vs rear). Fixes #6279
Add button to flip camera (front vs rear). Fixes #6279
Clean up camera flipping, handle having missing cameras.
Check if bitmap is not null in createScaledBitmapInto
#2791 / #1901 - Backups to sub-folder
#2791 / #1901 - Backups to sub-folder
#1901 - attachements to TextSecure folder
2791 - removed Media folder, folders correctly created
#2791 - BACKUPFOLDERNAME added
2791 - foldernames to static strings
Swipe left to right to get from conversation to conversation list. #584 //FREEBIE
Regrouped the initializing-methods in ConversationActivity //FREEBIE
Fixed formatting issues.
Fix typo //FREEBIE
Changed from OnGestureListener interface to SimpleOnGestureListener. Reset the reformatting by IntelliJ...Mea culpa. Thanks, @turtlekiosk //FREEBIE
Reset formatting, messed up by me. // FREEBIE
Fix when emoji keyboard is open. Check wether the emoji keyboard is open, otherwise the emoji-scroll gesture would have been overwritten. // FREEBIE
Enhance backswipe with open (emoji)keyboards. Resolve conflicts with open emoji drawer (which has its own horizontal scroll container). You always get back, by swiping in the conversation area. // FREEBIE
Cleanup. Get rid of unused imports I added accidentally // FREEBIE
Made PR clean. Reverted some little refactoring I did in previous commits, since they do not belong to this PR. // FREEBIE
Move avatars to toolbar in individual convos
Added 'SELECTED_THREADS_EXTRA' to GroupCreateActivity
Added getRecipientsForThreadIdIncludingGroupMembers to ThreadDatabase
Alter FAB to create group in batch mode
Wrapped getBatchSelections in Conversations
fix call termination sounds
set max groupname to 30 chars
group title max is 255 chars, view in recipient preferences is scrollable
horizontal marquee in conversation title view
trim group name on incoming update
Revert "trim group name on incoming update"
Revert "Revert "trim group name on incoming update""
Revert "trim group name on incoming update"
Revert "horizontal marquee in conversation title view"
Revert "group title max is 255 chars, view in recipient preferences is scrollable"
Revert "increase size of group name"
set group name maxLength to 255 chars
Provide a fallback for building without git
Prevent NPE when thumbnail click not set
Close keyboard when entering message detail view  Fixes #2598 //FREEBIE
Print localized date and time
Save the system locale before overwriting it
Remove unused import
refactor preferences into multiple PreferenceFragments
change textcolors
staying in preferences after enabling passphrase protection
invert the passphrase setting
load MmsPreferencesFragment without an Activity, add Summary
improve MMS settings strings
use android.R.string.cancel
add color variables
use switch() and throw AssertionError
fix "case" indent
dont use getString if not necessary
DisablePushMessagesTask should only accept CheckBoxPreference
remove initializeEditTextSummary since its not used
replace nested if's with &&
remove unnecessary spaces
use getBooleanExtra
move PICK_IDENTITY_CONTACT into PreferenceFragmentAdvanced
remove unused ENABLE_PASSPHRASE_ACTIVITY
rename PreferenceFragment classes
fix linebreak
use getString formatting options
remove unnecessary spaces
breaking up getSummary() into smaller methods
use ProgressDialogAsyncTask instead of AsyncTask
RecipientPreference: Harmonize backbutton and ActionBar back-Press UX Use the transition defined in super.onBackPressed() in onOptionsItemSelected() //FREEBIE
Hide keyboard by default on new contact selection. #3704 fixes #3704 Most people probably don't want to search for their contacts at the first, but immediately click on them in  their contact list. // FREEBIE
- ContactSelection: Pressing the toggle button now brings up the keyboard //FREEBIE
add equals/hashCode to glide models
Fix scrollbars
Resize fast scroller when keyboard is shown
use internal emoji pane for all android versions
Add preview of encryption channel in input field hint.
Add possiblity to store key verification
Adding contact name and number to what is verified
Fixing typo
Fixing race condition and other mistakes. Fixes #1603.
Support for disappearing messages
Make sure disappearing message notifications disappear for receiver
Display thread summary of disappearing message update
Support for disappearing messages in message detail view
Always show call action item
Don't start timer for attachments until they've been downloaded and seen
Make conversation update messages selectable and removable
Don't expire timer update notifications
Move disappearing menu off state into overflow menu
use e164 for RecipientDetails
use canonical number when sending blocked updates
remove class member variables
synchronize run and terminate
play sound while connecting
Changes from CodeReview
Changes to new_messsage
Update strings.xml to fix issue #4278
Fix linkifying in selection mode
Update notification_icon.png
limit displayed message length to 1024 characters.
cleaned up to comply with code guidelines
reduced patch to "resrict to 1000 characters only" as suggested
Send m-notifyresp-ind (NotifyRespInd) for retrieved MMS on Lollipop API
CreateProfileActivity uses DynamicTheme
add custom phone number type
fix variable name
Update "TextSecure messages" preferences strings
hide irrelevant preferences in RecipientPreferenceActivity
Revert "Fix re-registering missing MasterSecret"
Pass MasterSecret into pref fragments
fix keepAlive interval for non GCM Android #6644
fix timeout duration
Pass correct address from media overview to preview
- Added button to add a unknown contact. \n - Removed deprecated code
Added first changes to support updating recipients without recreating them.
Revert "Added first changes to support updating recipients without recreating them." This feature needs more time and another way of solving it.
Added german translation
Changed 'add contact' button to an option menu entry
- Renamed "Add contact" to "Add to contacts"
Merge branch 'master' into add_contact
- Removed "Attach contact info" from option menu - Added "Contact" to the attachment dialog to send a contact
Fixed some alignment errors and renamed 'Contact' to 'Contact info'
Merged upstream and updated project to AndroidStudio 0.8
Replaced tabs with spaces
Add to contacts menu item is now added via the menuinflator
fix ContactSelectionListItem NPE
fix OutgoingRinger crashes
update onPrepared
remove setSound
simplify start/stop
remove loopEnabled
use single start method
simplify try-catch
fix onCompletion
fix redphone busy
fix stop outgoingRinger
catch possible exception
Add possibility to delete contact's identity and directory entry
really fix crash from incorrect send job
Fix for getting the device number with national prefix also removing the forced country code '+1' when digit count equals ten
automatically check verification status when succeeding a qrcode scan
Improve #3990
consider search query when selecting all threads
Fix for recipients with unusual characters in their phone number.
refactor emoji code into package
adapt SMS strings in preferences
Make debug log strings more consistent
Added check for MMS settings on send of group messages. Added check for MMS settings on receive of MMS messages and stalled the message download until Fallback MMSC settings become avavailable. If an MMS download hard fails clicking on the message will attempt the download again.
Small change in vocabulary.
Noticed that Intellij murdered the imports again, reverted to old import organization, again.
Style changes.
Moved the Fallback MMSC preferences to a separate activity such that it can be started without first navigating to ApplicationPreferencesActivity. Removed all stalled MMS logic from SendReceiveService, FallbackMmscPreferencesActivity now restarts stalled MMS downloads onStop() instead. Organized MMS enabled checking logic in ConversationActivity and added MMS check for email recipients.
style changes.
Flag secure in all activities that extends BaseActionBarActivity
Changing the method to private
Add inbox delivery status migration
Do the migration in SQL
Get the automated tests up and running again
Signal: Clarify a string.
Localize LedBlinkPattern preference dialog
Add Notifications Database
Add option to customize vibrate pattern
Add option to test notification
Add per-contact notifications
Don't write notification values to shared prefs
No need to for ConfigContacts to handle home key
Remove empty string for AOSP
Remove unnecessary supresslint
Remove unnecessary runQueryOnBackgroundThread
catch MMS NPE for time being
- Added button to add a unknown contact. \n - Removed deprecated code
Added first changes to support updating recipients without recreating them.
Revert "Added first changes to support updating recipients without recreating them." This feature needs more time and another way of solving it.
Added german translation
Changed 'add contact' button to an option menu entry
- Renamed "Add contact" to "Add to contacts"
Merge branch 'master' into add_contact
- Removed "Attach contact info" from option menu - Added "Contact" to the attachment dialog to send a contact
Fixed some alignment errors and renamed 'Contact' to 'Contact info'
Merged upstream and updated project to AndroidStudio 0.8
Replaced add contact info icon
Merge branch 'master' into add_contact
Replaced tabs with spaces
Add to contacts menu item is now added via the menuinflator
Support recovering forgotten/unknown group info from sender
fix NPE in PushGroupUpdateJob
add equals/hashCode to glide models
skip camera layout when preview is zero-sized
Shortcuts for Android 7.1
Added my own icon, new strings and updated the shortcuts.xml
New icon for create group shortcut
Updated new icons in shortcut.xml
Added DynamicShortcut functions
Completet the Pull Request, everything works with Dynamicshortcuts
Pushed ThreadDatabase changes
refactoring
Remove conflict
Basic support for feature 520
Honor synced end session messages
Change TS Media message timestamp from received time to sent time
add stable IDs to conversations
better hashing of unique IDs
Initial changes conv-list layout
Tweak alignments
Last tweak to conv_list_item_view, looks good imho
Add 8dp padding to top and bottom of conv list
cleanup per recipient ringtone preference
enable silent per recipient ringtone preference
Change string "Load" to "View"
Update attachment content type when updating attachment data
Fixes an issue that was causing the per recipient notification sound to not be able to be set to "none" and "default" was functioning as none.
Disable 'Export Encrypted Backup' button if the passphrase is disabled
1) discovered that a spurious onItemClick callback occurs when moving left or right across an image before releasing a long click. 2) prevented the false onItemClick from occuring by curating the list view and item view onTouch actions.
Change background of PassphrasePromptActivity
Changed bubble message font size to match the input text message.
Update issue and pull request templates
Clarify how to fill checkboxes
Add comment for description and tests
Add actual and expected results to issue template
Add comment for debug log
much improvements, such help, wow
Adds dependency for display in notifications on pref_key_enable_notifications
Finish activity before restarting it
Since we're on minSdk 9, this can be simplified
Allow saving all attachments of a thread
Address comment (cursor looping)
Merge pull request #1 from agrajaghh/ex/fehnomenal/export-all-media
fix corrupt messages crashing Signal
Basic websocket connection maintenance logic.
Support for keepalives.
Only connect via WS if we've registered ourselves as capable.
Update copyright header and indentation.
- "Send unencrypted" forces a unencrypted sms - #919: Menu item to send a sms
Show videos in media overview
getImageDatabase => getMediaDatabase
"No images" => "No media"
make ListPartitionTest run during connectedCheck
ellipsize emoji
extracted strings from java src and layout xml
added class to automate conversion of text views and edit texts with the bho typeface.  also added the TibConvert class to convert unicode entites when the time arises...
textview, edittext, button classes abstracted with type handling for tib. contains errors.
one more fix...
stringified preferences...
fixed issue with incorrect classname for bhobutton
- fixed one error in create passphrase activity. - created custom dialog to replace context menus (since context menus won't honor custom typefaces) - replaced context menu in SecureSMS (main activity)
Merge branch 'bho' of github.com:guardianproject/TextSecure into bho
new translations
Merge branch 'bho' of github.com:guardianproject/TextSecure into bho
adding tibetan text views
adding in strings prefs
updated localizations from transifex
removed unused view classes
transifex tx client pull config
updated strings from latest transifex
udpated tx config for lang mapping
restyled menus for clarity
Russian translation
Russian translation
Add null check
Fix test
Add null check for target every time
Fix test
fix hotchemi/PermissionsDispatcher#133, adding createAppSettingsIntent method
Address GrantableRequest and XxxPermissionRequest problem which is described in #376.
Change the signature of BaseTest and move one case string array to actual files.
Update BUILD_TOOLS_VERSION.
Fix to scan only annotated classes.
made sample compile with Android Studio 3.2 alpha 18
migrated to AndroidX
reverted commenting out some publishing infrastructure
extracted AndroidX version into gradle property
import cleanup
updated travis.yml to platform 28
adds android licences to make travis happy
copies licences to android home
fixed all imports and tests again
Disable bintray release plugin until they support gradle-4.6
Upgrade gradle plugin
Fix the problem with onActivityResule's Intent nullable
Format gradle.properties
Remove unnecessary change
Introducing gradle-bintray-plugin
Tweak bintray plugin settings to work.
made sample compile with Android Studio 3.2 alpha 18
migrated to AndroidX
reverted commenting out some publishing infrastructure
import cleanup
updated travis.yml to platform 28
adds android licences to make travis happy
copies licences to android home
Merge remote-tracking branch 'upstream/master'
Merge branch 'master' into androidX
fixed all imports and tests again
It doesn't work any more :'(
After we broke it, we fixed it :D
fixed sample for usage with kotlin 1.0.0-rc-1036
Updated to kotlin version 1.0.0-rc-1036
Update KotlinPoet to 1.0.0-RC1.
Temporal commit.
Fix compile error.
Revert rename.
[ci skip] temporal commit.
Temporal commit.
Fix compile error.
Revert rename.
Update Build Tools & Lint dependency versions
Move UAST-based Lint rules to dedicated package
Re-introduce old Lint Detectors based on JavaPsiScanner & modularize
Ensure Lint test execution with absent ANDROID_HOME envvar
Prettier access to root's local.properties & tightened visibility of Utils
Use identical test foundation for both Uast & Psi implementation
3.0.0-rc1
Add a workaround to convert java.lang.String to kotlin.String in argument's parameter.
Remove unused code.
Tweaked a bit.
Fix tests.
Fix tests.
Endorse AA plugin in README
Revert "Move static methods to a separate class"
[cassandra] Bump to current stable version.
[cassandra] Move static methods to separate class.
cassandra: Add support for Cassandra 3.0 with the Cassandra 3 driver.
cassandra: upgrade cassandra-all to 2.1.6 for testing
Cassandra: Don't use Count(*) to estimate partition columns in Cassandra >=2.2
Use fastutils primitive sets in huge IN lists bytecode.
Support INSERT for JDBC connectors
Add test for insert into mysql and postgresql
cli: do not interrupt client thread when pager completes
Add missing column to verifier SQL documentation
Fix format
Fix column listing for tables with only unsupported columns
Propagate unknown expression stats filtering from leaf
Enforce calculated stats consistency
Add JoinStatsRule
Add AggregationStatsRule
Add UnionStatsRule, IntersectStatsRule
Special case NOT(IS NULL) predicate stats
Add simple implementation of SemiJoinStatsRule
Handle symbol = symbol explicitly in stats
Add simple SemiJoinStatsCalculator
Move ROUND tests to be together with other ROUND tests
Change ROUND_N cases for short→long decimal so that they are short→long
Fix type of ROUND_N
Fix ROUND_N for negative N for input with scale 0
Construct proper literal for DECIMAL in LiteralInterpreter.toExpression
fixup! Construct proper literal for DECIMAL in LiteralInterpreter.toExpression
Estimate IN involving expression in left hand side
Replace distributed_join with join_distribution_type session property
Replace reorder_joins with join_reordering_strategy
Support inserting stats for plan unit tests
Support using a fake node count for unit tests
Make binaryExpression() handle empty list
Add methods to flip join and set distribution type
Allow setting default session properties in RuleTester
Add ReorderJoins rule to pick the best join order
fixup! Replace reorder_joins with join_reordering_strategy
Add benchmark for ReorderJoins rule
Add test for join reordering of TPC-H queries
Make cost-based decision when selecting Join distribution type
Add documentation for cost and statistics
fixup! Replace distributed_join with join_distribution_type session property
Fix partial container cleanup in run_on_docker.sh
Implement EquiJoinClause.toString()
Ensure correct use of EffectivePredicateExtractor
Simplify expressions every time PredicatePushDown is run
Remove the outer join differences from migration doc
JDBC Connector fix column sizes of types
comment typo fix
add test of unbounded varchar
typo fixed
FLOAT and DECIMAL type support
ARRAY and COLOR tests
Add version to top right of web UI header (issue #4185)
Prevent inserting into non-managed Hive tables
Prevent deletion from non-managed Hive tables
Prevent inserting into non-managed Hive tables
Refactor TestTablePartitioningInsertInto
Refactor TestTablePartitioningInsertInto
Refactor TestTablePartitioningInsertInto
Refactor TestTablePartitioningInsertInto
Use the same types for partitioned nation as for regular nation
Extract NATION_PARTITIONED_BY_REGIONKEY_NUMBER_OF_LINES_PER_SPLIT
Test that non-managed hive tables are immutable
Rewrite Single Distinct Aggregation into GroupBy
Handle FunctionCall.filter in DefaultTraversalVisitor
Add ReorderWindows to iterative optimizer
Add sorting test to reorder windows DSL tests
Implement VARCHAR(length)
Add test for matching UNKNOWN argument to VARCHAR(x) function
Test for calling varchar(x) function with varchar
Added more comprehensive tests for Signature
Relax INSERT type validation constraints
Add support for parametric Varchar to hive connector
Fix compatibility checking for VARCHAR(x) in HivePageSink
Re-enabled assertion in TestExpressionCompiler
canCoerce throws with unmatched number of parameters
Use new syntax for defining type parameters
Backward compatibile serialization/deserialization for ParameterKind
Support multiple negations in conjuncts in JOIN condition clause
Relax constraints on shape of condition in JOIN ON clause
Allow multiple IN expression in JOIN ON clase
Remove equality join condition from post join filter
Add type coercions in join criteria
Add type coercions for non-equi join criteria
Add tests
Fix tests broken
change to correct test case
remove function replaceType, minor change for error message
Don't include plugins as presto-server dependencies
Renamed metadata/TypeParameter to TypeParameterRequirement
Refactor ROW to generalized Parameters
Add map_from_entries function
correct the url for the kill query button https://github.com/prestodb/presto/issues/10223
Fix live plan and stage kill button URL
Raise error when connector returns no no columns for table
Fix race condition in TestHttpPageBufferClient
Fix serialization of arrays of Bing tiles
Remove unnecessary code in SqlStageExecution
Optimize partition fetch in Cassandra 2.2+ with IN queries.
Fix NPE when scheduling non-remotely accessible splits
Fix high coordinator CPU usage when scheduling splits with affinity
Adjust split queue reservations in topology aware scheduler
Add avg function support for interval types
Add VarianceAggreagetions support for interval types
Add geometric_mean function support for interval types
Add sum aggregate for Interval types
Add average aggregate for Interval types
Add config and session property deprecated.legacy-timestamp
Add isLegacyTimestamp flag to ConnectorSession
Add new TIME/TIMESTAMP parsing/printing to DateTimeUtils
Add new TIME/TIMESTAMP semantic variant to Expression parsing
Introduce new TIME/TIMESTAMP semantics to SQL types
Introduce new TIME/TIMESTAMP semantics SPI types
Introduce new TIME/TIMESTAMP semantics to scalar functions
Fix current_time, localtime & localtimestamp semantics
Add new date time semantics to date time cast operators
Fix at_timezone(TIME WITH TIME ZONE)
Fix current_time timezone offset
Split TestDateTimeFunctions into variants based on isLegacyTimestamp
Change default TIME/TIMESTAMP semantics to ANSI SQL
Split TestDateTimeOperators into variants based on isLegacyTimestamp
Introduce new TIMESTAMP semantics to to_iso8601 scalar
Always use fixed TIME as session base in TestDateTimeFunctions
Add tests covering Time types representation
Add copyPositions API to Block
Register coercions in Join analysis
Remove expressionOptimizer from StatementAnalyzer.visitJoin
Add missing tests for coercions in the join condition
Extend CanonicalizeExpressions optimizer to rewrite filter in Join
Don't canonicalize ON criteria in Join analysis
Fix ORDER BY with LIMIT expressions with same canonicals
Use static import for checkArgument
Set query ID as name prefix of HDFS files
Support INSERT for JDBC connectors
Add test for insert into mysql and postgresql
Remove duplicate H2ResourceGroupDao and provider, fixes #6473 , fixes #6471
Serialize aggregation States to VARBINARY
Close operators and drivers in tests
Implement BinaryFileSpiller
Add config and session option enabling spilling
Add tests for queries using binary spiller
Fix formatting in HashAggregationBenchmark
Rename isFull method in HashAggregationOperator
Implement spilling in aggregation using Spiller
Add benchmark for BinaryFileSpiller
Assert all types are orderable before spilling
Refactor HashAggregationOperator
Add `experimental.spiller-spill-path` property (#264)
Add `experimental.spiller-threads` property (#267)
Add revocable memory pool in QueryContext
Support revocable memory in stats and coordinator
Notify blocked drivers when query is out of memory
ClusterMemoryManager.process takes List as arg
Extract getTotalMemoryReservation
Consider revokable memory when enforcing query.max-memory
Fix typo: Use denyShowTables in checkCanShowTables
Support PredicatePushdown with distinct marker used in predicate
Remove unused log variable
Rename ScalarAggregationToJoinRewriter
Prepare sources and make join node in the same method
Extract createSubqueryEquivalentJoin method
Add utility fail scalar functions
Support correlated non aggregation scalar subqueries
Add data schema to the decoder params
Add basic Avro decoder for Kafka
Use Optionals in KafkaTopicDescription
Add Avro decoder to Redis
Add support for structural types in Avro decoder for Kafka
Add TestingEnvironment
Add tests for Avro schema evolution in Kafka connector
Add documentation for Avro support in Kafka connector
Fix LocalFileRecordCursor timestamp parser
support default timestamp format in request log
cli: do not interrupt client thread when pager completes
NPE check for parameters field in Glue db, table, partition objects
Merge remote-tracking branch 'prestodb/master' into 5342_insert_error
Fix check style within StatementAnalyzer.
Fix the field count mismatch as the type mismatch for rows in VALUES clause.
Avoid unnecessary metastore calls for internal databases
Fix PageBuilder use in benchmark binary file spiller
Add stage id/plan node id to generated page projection class name
CREATE TABLE check for duplicate columns
Fix current_time, localtime timezone offset
Enable tests for non-legacy timestamp semantics
Add warning concerning legacy_timestamp session property
Add new TIME/TIMESTAMP parsing/printing to DateTimeUtils
Add new TIME/TIMESTAMP semantic variant to Expression parsing
Introduce new TIME/TIMESTAMP semantics to SQL types
Introduce new TIME/TIMESTAMP semantics SPI types
Fix current_time, localtime & localtimestamp semantics
Add new date time semantics to date time cast operators
Use legacy-flag aware wrappers for SqlTime/SqlTimestamp cration in tests
Fix at_timezone(TIME WITH TIME ZONE)
Introduce new TIMESTAMP semantics to to_iso8601 scalar
Always use fixed TIME as session base in TestDateTimeFunctions
Add tests covering Time types representation
Use Asia/Kathmandu as Cassandra timezone in product-tests
Fix timestamp related Teradata Function product-tests
Use named constant for time zone mask in DateTimeEncoding
Rename SqlTime#millisUtc to millis
Rename SqlTimestamp#millisUtc to millis
Rename DateTimeUtils#parseTime to parseTimeLiteral
Add documentation for DateTimeUtils#parse* methods
Parse TIMESTAMP literal with parseTimestampLiteral
Accept values with zone in varchar to timestamp cast
Add basic test for dictionary aggregation
Handle DictionaryBlocks from different sources in dictionary aggregation
Successful metadata queries not logged
Save changes
Merge branch 'master' of github.com:Myrthan/presto into task-3164
Test changes
Add benchmark for map-to-map cast
Customize MethodHandle for map-to-map cast during function specialization
Short-circuit inner and right join when right side is empty
Disable join reordering in tests expecting concrete execution plan
Create part table in H2
Short-circuit Join when probe side empty
Enable HDFS wire encryption when communicating with Metastore
Enable HDFS wire encryption when communicating with HDFS
Add product test coverage for HDFS wire encryption
Add originSubquery Node field to ApplyNode
Add originSubquery Node field to LateralJoinNode
Raise proper error when subquery is not supported
Support for Kerberos secured internal communication
Support _HOST placeholder in Kerberos internal communication
Document Kerberos secured internal communication
Product tests for Kerberos secured internal communication
Extract Assignments from ProjectNode and ApplyNode
Use PlanBuilder for subquery planning
Add support for coercions in scalar subqueries
Support for subquery coercions in IN predicates
Add support for coercions in ANY, ALL subquery
Additional tests that IN subquery is applied only once
Tests that ALL, ANY subquery is applied only once
Support for coercions in correlated expressions
Support for coercions to supertype for IN, ANY, ALL, CASE and IF expressions
Add support for Glue Hive metastore
Measure peak memory usage for stage tasks execution.
Print update types to stderr in batch mode
check history path is readable/writable, otherwise use MemoryHistory
extract Console::getHistory for test visibility
fix checkstyle error
Use varchar when it's not decideable
#10123
Prevent rename of partition columns
support for VARCHAR in Hive
Whitespace fixes in TestHiveFileFormats
presto-orc: add varchar support for dictionary encoding
Add config for setting the ACL type for S3 uploads
Prune unreferenced outputs before correlated IN
Fix optimized parquet reader complex hive types processing
fix type mismatch in Parquet predicate pushdown
fix parquet predicate pushdown tests
Use QueryTemplate.replaceAll over nested for loop
Make subquery to be Expression in ExistsPredicate
Unify createPlanBuilder methods
Add missing DefaultTraversalVisitor#visitExists method
Use subquery output symbol for planned EXISTS expression
Avoid running query on h2 when it is slow
Use smaller data to tests EXISTS
Add position checks in RunLenghtEncodedBlock
Skip static fields when testing block retained size
Represent all-nulls with RLE block
Make port of socks proxy configurable in product tests
Fix timezone issue while writing dates in Hive
Add ARBITRARY_DISTRIBUTION to SystemPartitioningHandle
Reduce number of unions in AbstractTestQueries#testAssignUniqueId
Add support for AssignUniqueId partitioning in PropertyDerivations
Add tests validating no remote exchange is added before aggregation
Rename StatsRecorder to RuleStatsRecorder
Introduce StatsRecordingPlanOptimizer
Record stats for AddExchanges and PredicatePushdown
Presto Raptor plugin fails DELETE FROM query if table has column of Decimal type #11339
Fix resource leak in Parquet reeader
Allow for different implementations of StatementClient
Use text/plain for create query request
Add builder for DistributedQueryRunner
Add builder for TpchQueryRunner
Move json fix functions to a separate class
Add nullable annotations for SessionContext
Save types, serde and session as part of SqlTask
Add actions and dataUris to QueryResults
Add json-based data structures for v2 protocol
Extract getTaskResults() method in TaskResource
Implement server part of v2 protocol
Implement client part of v2 protocol
Add a flag to enable client v2 protocol on a server
Convert TPCH distributed test to use v1 protocol
Pass protocol version from the command line
lag and lead window functions
Lowercase schema and table names for QualifiedTablePrefix
Fix outdated comment in EqualityInference
Add PlanDeterminismChecker
Test that plan for TPC-H Q9 is deterministic
Add IdentityLinkedHashMap
Use deterministic identity Maps and Sets in planner and analyzer
Add TestQueryPlanDeterminism (extends AbstractTestQueries)
fixup! Use deterministic identity Maps and Sets in planner and analyzer
Disallow usages of IdentityHashMap in sql.{planner,analyzer} packages
Expose OrderingCompiler cache stats via JMX
Expose JoinFilterFunctionCompiler cache stats via JMX
Expose JoinProbeCompiler cache stats via JMX
Enable cache stats when CacheBuilder.newBuilder is called #7081
Merge remote-tracking branch 'prestodb/master'
Show hit/miss rate in ExpressionCompiler via JMX
Support PredicatePushdown with distinct marker used in predicate
Remove unused log variable
Rename ScalarAggregationToJoinRewriter
Rename variable
Return Optional.empty() when rewrite does not succeed
Prepare sources and make join node in the same method
Extract createSubqueryEquivalentJoin method
Support correlated non aggregation scalar subqueries
Throw exception when using SET/RESET SESSION from JDBC
GeometryType write functions to handle null slice
Add ST_Union scalar function to efficiently union an array of geometries
Remove restriction on GeometryCollection for ST_Union
Optimize geometry_union_agg and convex_hull_agg to reuse GeometryCursor
Fix parquet predicate pushdown type mismatch bug
Skip looking up predicates for complex types in Parquet
Change buildSql in QueryBuilder to return PreparedStatement
Adatper between SliceOutput and OutputStream using Slice as buffer
Fixing checkstyle errors and adding license headers
Removing support for big-endian and small refactoring
Use OutputStreamSliceOutputAdapter in PagesResponseWriter
Simplify writeFloat and writeDouble
Initial implementation of InputStreamSliceInputAdapter
Use InputStreamSliceInputAdapter in HttpPageBufferClient
Add tests for encoding in little-endian
Add tests for encoding float
Fixing checkstyle errors
Add abstraction of parameters for JDBC connections
Introduce parameter in JDBC URL for connection via SSL
Fixing license header and checkstyle errors
Fixing comments from code review
Add abstraction of parameters for JDBC connections
Introduce parameter in JDBC URL for secure connection
Return a proper exit code from the presto-cli
Add -stop-on-error command line argument
Reset memory revocation listener when OperatorContext is destroyed
Add example access-control.properties
Implement forwarding access controls
Make sure that file based access control have coherent config properties
Unify json parsing in file based access controls
Do not wrap RuntimeExceptions in RuntimeException
Make FileBased*AccessControls to be refreshable
SHOW CREATE VIEW statement
SHOW CREATE VIEW should return complete CREATE VIEW statement, similary to MySQL. Documentation.
Enable streaming aggregation for pre-grouped inputs
Identify streaming aggregations in EXPLAIN
Push up AssignUniqueId through remote exchange
Add StreamingAggregationOperator
Add plan checker for streaming aggregations
Update AddLocalExchanges to plan streaming aggregations
Preserve local properties of the probe when passing through a LEFT join
Add AggregationNode#isStreamable
Make Geometry values display nicely in the CLI
Introduce SystemTablesProvider interface
Add ConnectorMetadata.getSystemTable
Use DelegatingSystemTablesProvider in ConnectorManager
Return Hive partitions as Iterable
Allow passing Iterable to InMemoryRecordSet
Use SystemTablesProvider.getSystemTable in listTableColumns
Rewrite SHOW PARTITIONS to select from table$partitions
Remove support for SHOW PARTITIONS statement
Completely remove SHOW PARTITIONS
Make PlanNodeSearcher.findSingle throw on multiple matches
Reject multiple TableScans in ShowStatsRewrite
Allow SHOW PARTITIONS .. WHERE for table above partition limit
Remove __internal_partitions__ information_schema table
#6812 Fix table creation with external location
Add "--stop-on-error" boolean argument to cli
Return a proper exit code from the presto-cli
Return a proper exit code from the presto-cli
Add -stop-on-error command line argument
Save conf so that superclass methods have access to it via getConf()
Add Column Support in Hive Connector
Rename column support in Hive Connector
Fix Access Control method spec
Move execution of statements into a new method
Add source command to CLI
Remove auto GC based on code-cache fill level
Add warning about timestamp truncation for date_parse
Enable parsing nanoseconds in date_parse
fixup! Enable parsing nanoseconds in date_parse
Add Histogram function
Add per-query peak memory tracking
Remove redundant note for lower function
Fix kerberos service principal format
Add basic IF NOT EXISTS support for create table
Fail JsonToMapCast in specialize when key type is not simple
Allow partial json cast
Update to Java 8 stream API
Remove Discovery support for Hive metastore
Make StaticHiveCluster injectable
Use separate config class for Hive metastore URI
Fix typo in test name
Fix exception in RowNumberOperator
Add coercion for union
Add year check to Presto server startup
Wrap PreferredProperties in a new context in AddExchange
Move flipComparison function to ExpressionUtils
Fix SqlFormatter for VALUES
Simplify visitSearchedCaseExpression in AggregationAnalyzer
Fix format of kerberos service principal
Improve error message for out-of-bounds access to arrays
Fix typo
Fix race condition in SHOW TABLES test
Add support for hash-partitioned semijoins
Fail invalid constant array access during analysis
Update to ANTLR 4.5.1
Remove duplicate word in comment of TupleDescriptor
Add release notes for 0.111
Add release notes for 0.111
Document the Histogram function
Add release notes for histogram function
Update histogram documentation and release notes
Treat TinyInt(1) as TinyInt instead of Bool in MySQL
Change MySQL product tests to reuse MySQL specific table
Make db/TestQueues.testBasic deterministic
Check before sleep in db/TestQueues.java
Added support for map construction from key/value arrays
Add support for EXCEPT
Fix formatting for intersect tests
Add documentation for INTERSECT and EXCEPT
Address comments
Allow fs.s3.impl to be configurable
Add skewness and kurtosis aggregation functions.
Fix current_time timezone offset
Add config and session property deprecated.legacy-timestamp
Split timestamp tests for testing both old and new semantics
Add new TIME/TIMESTAMP parsing/printing to DateTimeUtils
Add new TIME/TIMESTAMP semantic variant to Expression parsing
Introduce new TIME/TIMESTAMP semantics to SQL types
Introduce new TIME/TIMESTAMP semantics SPI types
Introduce new TIME/TIMESTAMP semantics to scalar functions
Add new date time semantics to date time cast operators
Enable timestamp non-legacy tests
Fix at_timezone(TIME WITH TIME ZONE)
Split TestDateTimeFunctions into variants based on isLegacyTimestamp
Split TestDateTimeOperators into variants based on isLegacyTimestamp
Introduce new TIMESTAMP semantics to to_iso8601 scalar
Add basic TIMESTAMP hive compatibility testing scenarios
Add basic TIMESTAMP rewrites in hive
Support LazyBlocks as input in TimestampRewriter
Pass row count explicitly to MapBlock constructor
Fix MapBlock.fromKeyValueBlock to allow overallocated collections
Add support for ARRAY type in TimestampRewriter
Add support for MAP type in TimestampRewriter
Use Asia/Kathmandu as Cassandra timezone in product-tests
Fix timestamp related Cassandra product-tests
Fix timestamp related Teradata Function product-tests
Use non-JVM timezone in TestDateTimeFunctionsBase
Change default TIME/TIMESTAMP semantics to ANSI SQL
Use name constant for time zone mask in DateTimeEncoding
Add originSubquery Node field to ApplyNode
Add originSubquery Node field to LateralJoinNode
Raise proper error when subquery is not supported
Decouple many tests from getObjectValue
Handle maps with complex keys properly in fixValue
Fix optimization backfire for NOT IN
fix exception during plan duplicate columns in order by clause
add missing code
Use a HashMap to fix it
add more tests
Execute multiple frames within single WindowPartition
Merge windows with identical partition and order but different frames
Add unit tests covering ASC/DESC and null orderings
Rename MergeIdenticalWindows to MergeWindows
Upper-case SQL keywords in TestMergeWindows' queries
Prune unused columns from VALUES
Remove racy assertions from TestQueues
Customize MethodHandle for map-to-map cast during function specialization
Made maps comparable
Auth configuration keys
Getters and setters for auth configuration
Fix type of getters
Use credentials from CassandraClientConfig
Test new authentication conf + defaults
Fix whitespaces trailing (checkstyle violation)
Add function to compute Levenshtein distance between two strings
Add notion of revocable memory to *MemoryContext classes
Revocable system memory in contexts
Improve exception messages
Extract OperatorContext.updateMemoryFuture
Expose memoryFuture concerning revocable memory from OperatorContext
Use isWaitingForSystemRevocableMemory in isBlocked
Add revokeMemory() to Operator
systemMemoryRevokingRequested
Periodically request memory revoking if needed
QueryContextVisitor
Requesting revoking unblocks driver
Revoke memory in Driver
Revocable system memory separate in stats
Cleanup TestMemoryPools test
Add revoking tests to TestMemoryPools
Add tests for queries using binary spiller
Add getRawHash method to GroupByHash
Add MergeHashSort class for merging iterators of pages
Prepare HashAggregationBuilder for spilling version
Add support for merge with memory for aggregation spill
Add jmx SpillerFactory stats
Add spilled data size stat to BinaryFileSpiller
Use SpillableHashAggregationBuilder in HashAggregationOperator
Split revokeMemory into start and finish
Revoke memory asynchronously
Use revocable memory for spilling in aggregation
Implement isBlocked in HashAggregationOperator
Rename memoryLimitBeforeSpill in HashAggregationOperator
Trigger memory revoking in OperatorAssertions
Create TaskContext with limited memory pools
Use revocable memory in hash aggregation tests
Fix distinct on non-comparable type
Refactor BenchmarkSTContains
Optimize the ST_Envelope function
Convert results to common types before comparing
Remove no-op assignment
Speed up TestAnalyzer
Round decimals to expected precision in H2QueryRunner
Fix handling of DECIMAL literals with only integral or only fractional part
Use proper DOUBLE literals in tests
Enable treatment of fixed point literals as DECIMAL
fixup! Use proper DOUBLE literals in tests
fixup! Enable treatment of fixed point literals as DECIMAL
fixup! Use proper DOUBLE literals in tests
fixup! Enable treatment of fixed point literals as DECIMAL
fixup! Enable treatment of fixed point literals as DECIMAL
fixup! Enable treatment of fixed point literals as DECIMAL
fixup! Enable treatment of fixed point literals as DECIMAL
Close block builder before throwing
Support delete from unpartitioned Hive table
Add JSON to ROW cast
Minor refactor to CastWithJsonParse tests
Optimize json_parse with cast to row
Add @ScalarFunction with Block parameters
Implement AbstractArrayElementBlock.getSingleValueBlock
Allow @ScalarFunction on instance methods
Optimize concat(array, array)
Add INDETERMINATE scalar operator to detect nulls
Use INDETERMINATE for SemiJoin
Implement limits for spilled data size
Extract SpillerStats out of SpillerFactoryWithStats
Intoduce stream-spiller based GenericSpiller
Account memory for stream buffers used during spilling
Cleanup old spill files on startup
Account for Page-related memory in MergeHashSort
Remove default spill path and add validation
Cleanup checkArgument conditions in DriverContext
Remove unnecessary empty line after LICENSE comment
New connector for Kafka
Merge branch 'master' of https://github.com/prestodb/presto
Review changes
Added xml header
Remove unused paramater from BeginTableWrite#rewriteDeleteTableScan
Fix formating EXISTS predicate
Add Support EXISTS expression
Add Lookup resolution to the PlanNodeSearcher
Extract scalar aggregation rewriter to a separate class
Take FunctionRegistry instead of entire Metadata
Add Lookup resolution to the DependencyExtractor
Make ScalarAggregationToJoinRewriter Lookup-aware
Break isResolvedScalarSubquery into smaller methods
Add assignUniqueIdMatcher for plan testing
Add Lookup resolution to the ScalarQueryUtil.isScalar
Support Nested Schema Evolution in Parquet
Add ROW constructor
Invalid WKT format query fail as INVALID_FUNCTION_ARGUMENT
Merge master and resolve conflict
Fix outdated comment in EqualityInference
Add PlanDeterminismChecker
Test that plan for TPC-H Q9 is deterministic
Test that plan for TPC-H Q6 equivalent is deterministic
Add IdentityLinkedHashMap
Use deterministic identity Maps and Sets in planner and analyzer
Add TestQueryPlanDeterminism (extends AbstractTestQueries)
fixup! Use deterministic identity Maps and Sets in planner and analyzer
Disallow usages of IdentityHashMap in sql.{planner,analyzer} packages
Add table_type Hive property for CTAS queries
Rename ExpressionRewriteRule to ExpressionRewriter
Migrate SimplifyExpressions to iterative optimizer
Add LambdaCaptureDesugaringRewriter test
Extract CommonPredicatesExpressionRewriter
Merge Desugaring and CanonicalizeExpressions iterative optimizers
Migrate DesugaringOptimizer to iterative optimizer
Make ExpressionRewriteRules static and public
Fixed silent clamping in double to long cast
Use PlanBuilder for subquery planning
Support for subquery coercions in IN predicates
Add support for coercions in ANY, ALL subquery
Additional tests that IN subquery is applied only once
Tests that ALL, ANY subquery is applied only once
Support for coercions in correlated expressions
Support for coercions to supertype for IN, ANY, ALL, CASE and IF expressions
#2031: adding support for getTransactionIsolation method
Fix issue #4482
Add isS3Filesystem for checking is a path is s3 path
Add unit test for HiveWriteUtils#isS3FileSystem
Remove unused HiveMetadata.getPartitionManager
Remove empty staging directories after insert into hive table
Refactor Hive test to enable accessing staging and target path
Remove unused getPartitionManager
Refactor PartitionUpdate to store paths as Path
Remove left partition directories after insert into hive table
Fix decoding min/max REAL value in Hive stats
Enable streaming aggregation for pre-grouped inputs
Identify streaming aggregations in EXPLAIN
Push up AssignUniqueId through remote exchange
Add StreamingAggregationOperator
Add plan checker for streaming aggregations
Update AddLocalExchanges to plan streaming aggregations
Add AggregationNode#isStreamable
Include join type when printing plan pattern
Static import TRUE_LITERAL in PredicatePushdown
Support PredicatePushdown with distinct marker used in predicate
Remove unused log variable
Add utility fail scalar functions
Add test for predicate push down through mark distinct
Add RemoveRedundantProjections rule
Register rule stats by class
Add from_ieee754_32 and from_ieee754_64
Make sure to reverse byte order in from_ieee*
Extract an interface for Hive Metastore client
Make outputStage in QueryInfo use Optional
Cleaning up CatalogSchemaTableName
Further cleanup CatalogSchemaTableName
Disable high-scale-lib in cassandra-all to suppress SecurityException
Just add com.github.stephenc.high-scale-lib.high-scale-lib instead of com.boundary.high-scale-lib
Add unit testing infra for TableWriter and Union
Migrate PushTableWriteThroughUnion
Add newSymbol() method that accepts a symbol
Add support for views to JDBC connectors
Remove unused log variable
Rename ScalarAggregationToJoinRewriter
Return Optional.empty() when rewrite does not succeed
Prepare sources and make join node in the same method
Extract createSubqueryEquivalentJoin method
Add utility fail scalar functions
Support correlated non aggregation scalar subqueries
Fix coercion overrides in ExpressionAnalyzer
Support for regex functions using re2j-td in Presto
Categorize error on casting inf/nan to decimal
Add ReorderWindows optimizer
Add section in documentation describing optimizer.reorder-windows feature flag
Add feature-toggle for Window Reordering
Add note about limitations of anyTree matcher
Add missing test for depending window functions
Don't merge windows when one depends on another
Disable reorder-windows by default to prevent a correctness error
Implement implicit coercion for ROW type
Add DOUBLE PRECISION as alias for DOUBLE
Fix HiveBenchmarkQueryRunner startup bug
Simplify partition sorting in HiveClient
Add support for Hive file formats
Add TupleDomain to HiveSplit
Use multibinder for HiveRecordCursorProviders
Add date type
Check JVM time zone matches Hive storage time zone
Convert Hive to use ConnectorPageSourceProvider instead of RecordSetProvider
Declare Slice explicitly in pom dependency management
Add SliceArrayBlock
Add support for lazy blocks
Add OperatorContext.recordInputWallNanos(long)
Switch default file format to ORC
Add metadata abstraction for ORC
Extend custom ORC reader to support DWRF
Add support for NULL parition keys
Make HiveRecordSink store uncompressed
Add Hive write support for varbinary, date and timestamp
Benchmark Hive input formats directly
Pass prepared statements in HTTP request body
Modify CLI to support long prepared statements
Support long prepared statements in QueryResults
Add tests for long prepared statements
change array, map and row type encoding
Fix ExpressionOptimizer function call to check Nullable argument
Add resource_group to runtime.queries table
Optimize map_agg memory usage.
Directly new HashSet
Add unit test for SimpleTypedSet.getType
Use new stats calculator by default
Enforce calculated stats consistency
Add ExchangeStatsRule
Add JoinStatsRule
Add AggregationStatsRule
Add UnionStatsRule, IntersectStatsRule
Special case NOT(IS NULL) predicate stats
Add simple implementation of SemiJoinStatsRule
Handle symbol = symbol explicitly in stats
Add simple SemiJoinStatsCalculator
Stats calculator for simple Filter+Project+SemiJoin
Move ROUND tests to be together with other ROUND tests
Change ROUND_N cases for short→long decimal so that they are short→long
Fix type of ROUND_N
Fix ROUND_N for negative N for input with scale 0
Construct proper literal for DECIMAL in LiteralInterpreter.toExpression
fixup! Construct proper literal for DECIMAL in LiteralInterpreter.toExpression
Estimate IN involving expression in left hand side
Replace distributed_join with join_distribution_type session property
Replace reorder_joins with join_reordering_strategy
Support inserting stats for plan unit tests
Support using a fake node count for unit tests
Make binaryExpression() handle empty list
Add methods to flip join and set distribution type
Allow setting default session properties in RuleTester
Add ReorderJoins rule to pick the best join order
Create Ordering in CostComparator
fixup! Replace reorder_joins with join_reordering_strategy
Add benchmark for ReorderJoins rule
Add test for join reordering of TPC-H queries
Make cost-based decision when selecting Join distribution type
Add documentation for cost and statistics
Fix partial container cleanup in run_on_docker.sh
Implement EquiJoinClause.toString()
Ensure correct use of EffectivePredicateExtractor
Add intermediate exceptions as suppressed in RetryDriver
Refactor system requirement checks into separate methods
Add Hadoop native libraries for Linux ppc64le
Allow running Presto on Linux ppc64le
Set MALLOC_ARENA_MAX=2 for product tests docker Java containers
Adjust properties doc page to fit new format
Move general properties to the begining of properties doc
Fix and extend exisitng properties description
Add general properties description
Add exchange properties description
Add node scheduler properties description
Add optimizer properties description
Add query properties description
Add task properties description
Add session properties description
Add information about most important performance releated properties
Add regular expression properties description
Add tuning for queries with fast processing splits
Add optimizer.reorder-windows documentation
Assume AWS Role in PrestoS3FileSystem
Add AWS role as session property
Cache AmazonS3Clients in PrestoS3FileSystem
Fix TestPrestoS3FileSystem.testStaticCredentials
Add support for custom credentials providers
Fixes facebook/presto#2040
Move ExpressionAnalyzer's Scope to Context
Use Scope to resolve lambda arguments in ExpressionAnalyzer
Support lambda captures using dereference expressions
Introduce Analysis.isColumnReference shorthand
Fix planning when lambda argument shadows relation column
Implement Array Less Than Or Equal for new type system
Revert "Improve Stripe Size Estimation for SliceDictionaryColumnWriter"
Remove logging debug information for small stripes
Modify CLI client to use jvm socks proxy flags
Modify CLI client to accept socks proxy (fixes #2289)
Add execution for DROP COLUMN
Support DROP COLUMN for Hive
Support DROP COLUMN for Raptor
Allow for coercion when inserting into table
Add new feature to support mapr hadoop cluster
Add new connector for MapR 3
Add MapR related jars
added versions
Don't fail if found conflict
Remove LZO
Upgrade Presto hive-apache to 1.2.2-2
Change JVM time zone in tests to better test corner cases
Clarify expected behavior after representation fixed in JDBC
Add more DATE/TIME related tests
Simplify SqlTimestamp, SqlTime construction in tests
Change JVM time zone in product tests
Upgrade Presto hive-apache to 1.2.2-2
Change JVM time zone in tests to better test corner cases
Clarify expected behavior after representation fixed in JDBC
Add more DATE/TIME related tests
Simplify SqlTimestamp construction in tests
Change default session zone in tests to non-UTC
Pass Session to JdbcClient.toPrestoType
Test DATE support in JDBC connectors
Move scalar evaluating method to AbstractTestQueryFramework
Move date/time literal test to separate test class
Make DateTimeUtils.timestampHasTimeZone independent of JVM zone
Fix reading locally unrepresentable date/times from H2
Allow running tests with a connector that supports TIMESTAMP but not DATE
Fix parquet predicate pushdown type mismatch bug
Support Parquet TupleDomain using ColumnDescriptor
Wait longer for schema agreement in Cassandra tests
Retry when retrieving metadata in Cassandra tests
Rename PagesHashStrategy compare to compareSortChannelPositions
Add PagesHashStrategy#isSortChannelPositionNull method
Fix null handling in inequality joins
Move PositionComparator to SortedPositionLinks
Rename fast_inequality_join flag to match feature toggle
Add missed finishInsert method in presto-mongodb
Fix typo in MongoDB Connector's document
Add distribution type to semi join query plan
Merge branch 'master' of github.com:prestodb/presto into add-distribution-type-to-semijoin-query-plan
Add module to implements JDBC meta data schema
Respect X-Forwarded-Proto header in / endpoint
Add data schema to the decoder params
Add basic Avro decoder for Kafka
Use Optionals in KafkaTopicDescription
Add Avro decoder to Redis
Add support for structural types in Avro decoder for Kafka
Add TestingEnvironment
Add tests for Avro schema evolution in Kafka connector
Add documentation for Avro support in Kafka connector
Fix plan when stream partitioning and node partitioning differ
Change tests in AbstractTestQueries
Add main to HiveQueryRunner
Add bucketed variant of Hive queries test
Support Nested Schema Evolution in Parquet
Add NestedField for RowType
Add isIdentityProjection to ExpressionUtils
Add NestedFields into TableScanNode
Update getSplits() and add NestedFields into HiveSplit
Skip reading unused nested fields in Parquet
Pruning Join Nested Predicates
Remove effectivePredicate from HiveSplit.getInfo()
Remove throwing error instead set default cusomisation
imports
Merge branch 'master' of github.com:Myrthan/presto into task-2960
Added customisation for each DB client
Imports again
Statement from sql not from jdbc
Space
Merge branch 'master' of github.com:Myrthan/presto into task-2960
Delete dobuled line
Execute multiple frames within single WindowPartition
Merge windows with identical partition and order but different frames
Add unit tests covering ASC/DESC and null orderings
Rename MergeIdenticalWindows to MergeWindows
Upper-case SQL keywords in TestMergeWindows' queries
Fix base for counter in AssignUniqueIdOperator
Check if rowId and value mask are using different bits
Test AssignUniqueId generatees unique ids
Reintroduce queryBoundary in Scope
Add getLocalParent and getOuterQueryParent methods to Scope
Use Optional<Scope> as context in StatementAnalyzer
Add scope checkStates to StatementAnalyzer
Make QuerySpecification output scope use context scope as parent
Add support for hierarchical scopes during planning
Do not create unneded intermediate scope in visitQuery
Assign proper scope to OrderBy AST node
Directly use hierarchyFieldIndex when rebinding field to symbol
Move and rename verifyAggregations method to AggregationAnalyzer
Add ScopeReferenceExtractor
Add support for orderByScope to AggregationAnalyzer
Support for SymbolReference in project method.
Rename scope computing methods
Coerce unresolved node in TranslationMap
Use unmodifiableSet in Analysis#getColumnReferences
Proper analysis and planning of complex ORDER BY expressions
Expressions with lambda arguments are not group expressions
Replace ExpressionAnalysis.getColumnReferences with isColumnReference
Ensure type is known during analysis
Simplify trivial scope creation
Introduce RelationId identifying source of fields
Identify Field-s during analysis
Identify FieldReference's target column during analysis
Use FieldId to identify fields in AggregationAnalyzer
Use FieldId to identify fields in ScopeReferenceExtractor
Refactor ScopeReferenceExtractor to return Stream
Analyze SELECT's Subquery with respect to aggregation
Analyze SELECT's EXISTS with respect to aggregation
Test analysis of ORDER BY's aggregation's Subquery
Add Parquet 1.6 support
Deallocate prepared statement on close
Fix schema checks in file-based access control
Use Optional instead of nullable Principal in access control SPI
Remove redundant by-hand memoization of Assignments#getOutputs()
Add Assignments#equals() and Assignments#hashCode()
Add PlanBuilder.join(...) overload with a filter parameter
Add PlanBuilder.tableScan(...) overloads with originalConstraint
Support matching originalConstraint in plan matcher
Migrate CanonicalizeExpressions to Rule
Add RemoveTrivialFilters rule
Support IS [NOT] NULL in ExpressionVerifier
Support correlated IN predicate
Fix test description
Fix formatting
Extend the username extraction to principal user matching rules
Add support for current_user
Fix NaN handling in distinct from operator for double and real
Pass config and metadata of LocalQueryRunner to JoinCompiler
Extract generateInputReference from InputReferenceCompiler
Pass Metadata and FeaturesConfig to JoinCompiler constructor
Use IS NOT DISTINCT FROM for GROUP BY
Add positionIsNotDistinctFromRow to SimplePagesHashStrategy
Add varchar data to BenchmarkGroupByHash
Use typeEquals for Slice types in JoinCompiler
Fix formatting
Use convenience utf8Slice(String)
Extract data type mapping tests to separate classes
Add support for DECIMAL in JDBC connectors
Fix flaky TestQueues test
Force queue rules to form a tree
Move ExpressionAnalyzer's Scope to Context
Use Scope to resolve lambda arguments in ExpressionAnalyzer
Support lambda captures using dereference expressions
Introduce Analysis.isColumnReference shorthand
Fix planning when lambda argument shadows relation column
Fix Exception when using subscript operator in aggregation query
Introducing array_agg aggregation function
#1975. array_agg aggregate function
Add internal try function for TRY desugaring
Reorganize tests with TRY expression
Remove legacy handling for TRY
Fix serialization of HeartbeatFailureDetector.Stats
Extract Assignments from ProjectNode and ApplyNode
Add support for coercions in scalar subqueries
Support for subquery coercions in IN predicates
Add support for coercions in ANY, ALL subquery
Additional tests that IN subquery is applied only once
Tests that ALL, ANY subquery is applied only once
Support for coercions in correlated expressions
Support for coercions to supertype for IN, ANY, ALL, CASE and IF expressions
Cassandra: Fix UUID comparisons on Cassnadra partition key. Fixes #2927
Fix read max-data-per-node correctly in memory connector config
Extend metastore to get schema of non-metastore tables
Disallow ALTER TABLE operations when Avro schema is set
Disallow CTAS when Avro schema is set
Disable creating partitioned/bucketed tables when Avro schema set
Add documentation for Avro schema evolution in Hive connector
Update error messages in Avro-Kafka support with proper capitalization
Make db/TestQueues.testBasic deterministic
Check before sleep in db/TestQueues.java
Use ExpressionInterpreter.invoke inside FunctionInvoker.invoke
Remove FunctionInvoker
Pass FunctionRegistry instead of whole Metadata
fixup! Support CAST to INTERVAL type
Changing test cases for ArrayElementAtFunction
Fixing types in test cases for ArrayElementAtFunction
First draft to make ArrayElementAtFunction return null with an out of range index
Ran code formatter
Switching back to primitive ints, was using Integer before
Remove indexInRange function
Add cache size limit to Hive metastore cache
Extract MockConnectorFactory
User lower case when listing schemas
Fix testMetadataIsClearedAfterQueryFailed
Check supported types before inserting into Hive tables
Check partition and table have the same Hive column types
Support column aliases in WITH clause
Update correlation in Apply node
Refactor TestLogicalPlanner to test logical plan creation
Do not read IN predicate symbols for correlated Apply
Prune not used correlation or ApplyNode
Move replaceInPredicates method under the usage
Refactor TransformUncorrelatedInPredicateSubqueryToSemiJoin
Add test to check if correlation is resolved correctly
Make PlanMatcherPatter.toString() output be more readable
Add unit tests for correlated EXISTS subquery
Test for non correlated EXISTS subquery as JOIN conditition
Test for non correlated scalar subquery as JOIN conditition
Extract collect subqueries methods
Introduce SemanticExceptions.throwNotSupportedException
Update docs about manual usage of product tests
Log query for test assertion failures
Introduce QueryTemplate for tests
Do not support correlated subqueries in join condition
Add missing @Test annotation for test method
Fix typo in AbstractTestQueries
Use orders vs lineitem to make test pass faster
Extract mergeProjection method so it can be reused
Use DefaultTraversalVisitor in DependencyExtractor
Don't traverse EXISTS in default Expression visitor
Use existing method to retrieve types for EnforceSingleRowOperator
Check join filter in ValidateDependenciesChecker
Support correlated count scalar subqueries
Introduce EnforceUniqueColumns plan node
Unqurantine TPCH passing queries
Pushdown predicate over EnfroceUniqueColumns
Update docs about subqueries
Add support for types with integer parameters
Implement VARCHAR(length)
Add mini-language to calculate return type parameter
Extract SignatureBinder interface.
Allow CONCAT(varchar(x), ...) to return limited varchar type
Fix function resolution for varchar(x)
Rename variable
Add test of coercion with predicate pushdown
Fixes of two bugs in CREATE TABLE AS SELECT WITH NO DATA
Disallow union to have both SOURCE and HASH inputs
Add tests for union over aggregation and table scan
Change the return type of Block's size-related methods to long
Presto Elasticsearch Connector
add elasticsearch connector
update elasticsearch connector package name
update elasticsearch pom.xml remove test dep
Fix rollback unimplemented problem
Merge pull request #2 from prestodb/master
Merge pull request #3 from prestodb/master
Format code
Merge branch 'master' of https://github.com/harbby/presto
merge
Merge branch 'prestodb-master'
update es connector version=0.209-SNAPSHOT
Merge pull request #5 from prestodb/master
Distinguish between users and roles when retrieving privileges
Fix GRANT and REVOKE documentation about PUBLIC role
32 bit interval_year_month
checkedCast INTERVAL_YEAR_TO_MONTH
Pushdown join condition conjucnts to innerside based on inherited predicate
Test for pushdown of join condition conjucnts to innerside
Pushdown join condition conjucnts to innerside based on inherited predicate
Add description for running product tests using Docker for Mac
shorten code
Merge branch 'master' of https://github.com/prestodb/presto
Add presto-memory stub based on blackhole connector
Implement MemoryPagesStore
Test MemoryPagesStore
Test MemoryMetadata
Add presto-memory smoke tests
Implement MemoryLocalQueryRunner for benchmarks
Add memory connector to config
Limit memory usage in memory connector
Use guice to initialize presto-memory
Synchronize MemoryMetadata
Use java cast instead of checkType
Fix presto-memory splits-per-node config property name
Resolves #6550: Uncategorized error for from_unixtime
Categorize invalid offset minutes error for from_unixtime
Resolves #6550: Uncategorized error for from_unixtime
Resolves #6550 : Adding test for Uncategorized error for from_unixtime
Update TestMathFunctions.java
Update MathFunctions.java
Create warning system
Add warnings to client and server protocol
Add warnings to presto-cli
Static import String.format
Remove unused function ExpressionAnalyzer.create
Session based ConnectorMetadata
Add support for current_user
Do not support correlated subqueries in join condition
Fix joinEqualityExpression predicate
Introduce LongValueCompressor
Introduce AssignUniqueId plan node
Introduce PlanNodeSearcher
Pushdown predicate over AssignUniqueId
Support scalar aggregation in TransformUncorrelatedScalarToJoin
Support correlated count scalar subqueries
Update big_queries tests group
Unqurantine TPCH passing queries
Update docs about subqueries
Prevent inserting into non-managed Hive tables
Prevent deletion from non-managed Hive tables
Unify query/statement progress calculation
Refactor ApplyNode
Do not add EnforceSingleRowOperator when not needed
Add test for multi level in predicate
Register coercions in Join analysis
Remove expressionOptimizer from StatementAnalyzer.visitJoin
Add missing tests for coercions in the join condition
Approx percentiles now also accepts an array of percentages
Enable Accumulator to retrieve blocks from the index
Add Accumulator.addInput(WindowIndex)
Add Accumulator.addInput for window functions without parameters
fixup! Enable Accumulator to retrieve blocks from the index
Add Accumulator.addInput(WindowIndex)
Add missing test for parameterless window function
Treat TinyInt(1) as TinyInt instead of Bool in MySQL
Change MySQL product tests to reuse MySQL specific table
Enable TINYINT and SMALLINT in JDBC connectors
Fix memory accounting in TopNRowNumberOperator
Execute multiple frames within single WindowPartition
Merge windows with identical partition and order but different frames
Add unit tests covering ASC/DESC and null orderings
Rename MergeIdenticalWindows to MergeWindows
Upper-case SQL keywords in TestMergeWindows' queries
Reintroduce queryBoundary in Scope
Add getLocalParent and getOuterQueryParent methods to Scope
Use Optional<Scope> as context in StatementAnalyzer
Add scope checkStates to StatementAnalyzer
Make QuerySpecification output scope use context scope as parent
Add support for hierarchical scopes during planning
Distinguish between relation and hierarchy field index in ResolvedField
Do not create unneded intermediate scope in visitQuery
Assign proper scope to OrderBy AST node
Directly use hierarchyFieldIndex when rebinding field to symbol
Move and rename verifyAggregations method to AggregationAnalyzer
Add ScopeReferenceExtractor
Support for SymbolReference in project method.
Rename scope computing methods
Coerce unresolved node in TranslationMap
Use unmodifiableSet in Analysis#getColumnReferences
Proper analysis and planning of complex ORDER BY expressions
Do not allow nondeterministic ORDER BY when SELECT DISTINCT is present
Expressions with lambda arguments are not group expressions
Replace ExpressionAnalysis.getColumnReferences with isColumnReference
Ensure type is known during analysis
Simplify trivial scope creation
Identify Field-s during analysis
Use FieldId to identify fields in AggregationAnalyzer
Use FieldId to identify fields in ScopeReferenceExtractor
Refactor ScopeReferenceExtractor to return Stream
Analyze SELECT's Subquery with respect to aggregation
Test analysis of ORDER BY's aggregation's Subquery
Test analysis of lambda captures in aggregation's Subquery
Add first order function signature cache
Improved string representation of array values in jmx connector
Prevents sending large responses to client for certain optimized block types.
Added default implementation of getUnoptimizedBytes in Block interface
Replaces some usages of getSizeInBytes with getUnoptimizedSizeInBytes.
Restrict size of data sent to client without requiring estimation of data size.
Change type of addresses to ArrayList
Correctly handle lists in parquet created by writers other than hive
fix Typo in mongodb connector document
Document GRANT and REVOKE
Document hive.security property
Add ReorderWindows optimizer
Add section in documentation describing optimizer.reorder-windows feature flag
Add feature-toggle for Window Reordering
Add window tests to AbstractTestQueries regarding partitioning and ordering
Add note about limitations of anyTree matcher
Handle FunctionCall.filter in DefaultTraversalVisitor
Add ReorderWindows to iterative optimizer
Add sorting test to reorder windows DSL tests
Fix JDBC connectors to clean up temp table after exception
Enable compilation of PagesHashStrategy with filter function
Compile JoinFilterFunction implementation
Move join filter function verification to JoinFilterFunctionVerifier
Pass Session to compiled JoinFilterFunction
Use compiled JoinProbe with filter function
Use isolateClass for JoinFilterFunctionVerifier
Reuse code for fieldReferenceCompiler
Add support for TRY in compiled JoinFilterFunction
Fix bing_tile_at for points close to tile edges
Include sse-kms
Added sse-kms values to test suite
Include sse-kms changes with docs update
Updates on PrestoS3SseType and docs
Fix TestHiveS3Config default S3SseType
Remove TestLocalQueriesIndexed
Move TestNonIterativeDistributedQueries to ci-only
#1286. Support sample node in explain statement
Add a docs section about limitations of Cassandra connector
fixup! Add a docs section about limitations of Cassandra connector
Register coercions in Join analysis
Remove expressionOptimizer from StatementAnalyzer.visitJoin
Add missing tests for coercions in the join condition
Extend CanonicalizeExpressions optimizer to rewrite filter in Join
Don't canonicalize ON criteria in Join analysis
Support LIKE for SHOW SCHEMAS and SHOW CATALOGS
Fix equals, hashCode, toString for ShowSchemas
Quote expected query when it fails, not actual
Prevent NullPointerException in assertExceptionMessage
Extract PartitionedOutputOperator.appendRow
Replace replicateNulls with replicateNullsAndAny in partitioning
Implement replicateNullsAndAny partitioning replication
Support nulls on left side of semi join
Add TODO note about Projection handling in EffectivePredicateExtractor
geometric average aggregation function
change to use logarithmic approach
add documentation and address review comments
Update window.rst
Support LIMIT ALL.
Add backticks around LIMIT
Add tests
Add show partition limit all
Add tests
Add comment field in DESCRIBE TABLE
Allow missing fields in structs in ORC
Optimize multimap_agg with flattened group state
Minor fix in AggregationTestUtils
Add array_agg test to AbstractTestQueries
Optimize array_agg with flattened group state
Do not gather partitioned sources of union by default
Add tests for fully distributed plans with UNION
Refactor decomposable check into separate method
Add produceDefaultOutput flag to AggregationNode
Fix hash channel for default output in aggregation
Add EmptySplit to schedule leaf tasks with no data
Generate empty split in SourcePartitionedScheduler
Add test for aggregation with union over values
Add new feature to support mapr hadoop cluster
Add new connector for MapR 3
Add new connector for MapR
Add MapR related jars
added versions
Don't fail if found conflict
Remove LZO
Always talk to partition leader
Add Node::getNodes() method
Do not merge projections with nested TRY expression
Move Predicates class to util package
Introduce isBlocked method in ConnectorPageSource
Use isBlocked in BlackholePageSource instead of sleep
Fix ArrayType.equalTo to work with non-orderable types
Fix ArrayType.equalTo to work with non-orderable types
Fix ArrayType.equalTo to work with non-orderable types
Created approx percentile function that returns multiple percentiles
Return a proper exit code from the presto-cli
Add -stop-on-error command line argument
Fix HiveBenchmarkQueryRunner startup bug
Simplify partition sorting in HiveClient
Add support for Hive file formats
Add TupleDomain to HiveSplit
Add date type
Check JVM time zone matches Hive storage time zone
Convert Hive to use ConnectorPageSourceProvider instead of RecordSetProvider
Declare Slice explicitly in pom dependency management
Add SliceArrayBlock
Add OperatorContext.recordInputWallNanos(long)
Switch default file format to ORC
Add metadata abstraction for ORC
Extend custom ORC reader to support DWRF
Add new ORC reader implementation
Add support for NULL parition keys
Make HiveRecordSink store uncompressed
Add support for TIMESTAMP in Hive partition key
Add Hive write support for varbinary, date and timestamp
Add HiveType.toString()
Add missing plan nodes support to ExpressionExtractor
Add missing plan nodes support to DesugaringOptimizer
Add lambda in JoinNode filter test
Examine orderby clause when swapping adjacent windows
Add MergeAdjacentWindows rule to iterative optimizer
Remove deprecated MergeWindows optimizer
Handle FunctionCall.filter in DefaultTraversalVisitor
Add ReorderWindows to iterative optimizer
Add sorting test to reorder windows DSL tests
Extract Assignments from ProjectNode and ApplyNode
Use PlanBuilder for subquery planning
Add support for coercions in scalar subqueries
Support for subquery coercions in IN predicates
Add support for coercions in ANY, ALL subquery
Additional tests that IN subquery is applied only once
Tests that ALL, ANY subquery is applied only once
Support for coercions in correlated expressions
Support for coercions to supertype for IN, ANY, ALL, CASE and IF expressions
Enforce single-threaded run of TestMetadataManager
Mongodb case sensitive collection support
Upgrade mongo-java driver to 3.4.2
Handle GROUPING when aggregation expressions require implicit coercions
Categorized error for too many dots
Fix format
Fix column listing for tables with only unsupported columns
try to handle jdbcType 1111 as VARCHAR
added test for querying native/unsupported data types in Postgres and updated release notes;
rebase
Fix NaN handling in distinct from operator for double and real
Pass config and metadata of LocalQueryRunner to JoinCompiler
Extract generateInputReference from InputReferenceCompiler
Pass Metadata and FeaturesConfig to JoinCompiler constructor
Add positionIsNotDistinctFromRow to SimplePagesHashStrategy
Add varchar data to BenchmarkGroupByHash
Use typeEquals for Slice types in JoinCompiler
Array comparison functions should use MethodHandle
Do not escape schemaName in MySqlClient#getTables()
Handle GROUPING when aggregation expressions require implicit coercions
Save changes
Added create table as query with no data
Support for CTAS with no data
Support date partition in parquet table
Port example http connector to TableLayout API
Remove ExamplePartition
Introduce AssignUniqueId plan node
Refacactor - replace qualified name with import
Prefer DependencyExtractor.extractUnique instead of extractAll
Pushdown predicate over AssignUniqueId
Introduce PlanNodeSearcher
Support correlated count scalar subqueries
Update big_queries tests group
Unqurantine TPCH passing queries
Update docs about subqueries
Read Data in Parquet File Format
Adding Elasticsearch connector. Please check and suggest improvements.
Add missing plan nodes support to ExpressionExtractor
Add missing plan nodes support to DesugaringOptimizer
Add lambda in JoinNode filter test
Add field/line delimiter property in create table
Remove Cassandra Thrift dependency
Remove describe_splits_ex dependency
Add CassandraTokenSplitManager integration test
Update Cassandra connector documentation
Unify Cassandra Datastax Driver version
Do not expose Thrift port in Cassandra product tests
Update Tempto to 1.27
Update Cassandra to 3.9 in Product Tests
Added the parameter n to the max_by and min_by aggregation functions
Implemented /dev/zero like table scan feature in blackhole connector
Fix bogus test for json_extract and Unicode escape
Support backslash escape in JSON path subscripts
ORC bloomfilter support
Merge github.com:prestodb/presto
Fix failed unit test in hive config
Support uncorrelated subqueries in aggregation queries
Applying comments
Logical plan assertion DSL
Support PredicatePushdown with distinct marker used in predicate
Remove unused log variable
Rename variable
Return Optional.empty() when rewrite does not succeed
Prepare sources and make join node in the same method
Extract createSubqueryEquivalentJoin method
Add utility fail scalar functions
Support correlated non aggregation scalar subqueries
Add plan sanity checkers to check if generated plan is correct
Addressing comments for: 'd7eaafa Add plan sanity checkers to check if generated plan is correct'
Addressing comments for: '745f434 Introduce ApplyNode representation of subquery'
Represent correlation as list in ApplyNode
Migrate TransformExistsApplyToScalarApply to iterative optimizer
Implement min_by aggregation function
Revert "Avoid binding session for every row for lambda execution"
Extend BindExpression to bind multiple values at a time
Add context to RowExpressionCompiler
Refactor lambda bytecode generation into LambdaBytecodeGenerator
Support compiling lambda as SAM class
Migrate parametric scalars to the new lambda execution framework
Migrate rest functions to the new lambda execution framework
Make FunctionType.getJavaType() fail
Merge tiny pages returned from PageProcessor
Use MaterializedRow.getOnlyValue to retrieve scalar result
Use ZonedDateTime for TIMESTAMP WITH TIME ZONE in tests
Rename MaterializedResult.toJdbcTypes() to .toTestTypes()
Use LocalDate for DATE in tests
Update equals methods to get rid of boxing/unboxing
Refactor AbstractTestQueries#testTimeLiterals
Use OffsetTime for TIME WITH TIME ZONE in tests
Use LocalTime for TIME in tests
Use LocalDateTime for TIMESTAMP in tests
Make test's helper method private and remove unnecessary throws
Fix current_time timezone offset
Add config and session property deprecated.legacy-timestamp
Add isLegacyTimestamp flag to ConnectorSession
Split timestamp tests for testing both old and new semantics
Add new TIME/TIMESTAMP parsing/printing to DateTimeUtils
Add new TIME/TIMESTAMP semantic variant to Expression parsing
Introduce new TIME/TIMESTAMP semantics to SQL types
Introduce new TIME/TIMESTAMP semantics SPI types
Fix current_time, localtime & localtimestamp semantics
Add new date time semantics to date time cast operators
Enable timestamp non-legacy tests
Fix at_timezone(TIME WITH TIME ZONE)
Split TestDateTimeOperators into variants based on isLegacyTimestamp
Introduce new TIMESTAMP semantics to to_iso8601 scalar
Always use fixed TIME as session base in TestDateTimeFunctions
Add tests covering Time types representation
Add basic TIMESTAMP hive compatibility testing scenarios
Add basic TIMESTAMP rewrites in hive
Support LazyBlocks as input in TimestampRewriter
Pass row count explicitly to MapBlock constructor
Add support for ARRAY type in TimestampRewriter
Add support for MAP type in TimestampRewriter
Add support for ROW type in TimestampRewriter
Use Asia/Kathmandu as Cassandra timezone in product-tests
Fix timestamp related Cassandra product-tests
Fix timestamp related Teradata Function product-tests
Use non-JVM timezone in TestDateTimeFunctionsBase
Change default TIME/TIMESTAMP semantics to ANSI SQL
Use name constant for time zone mask in DateTimeEncoding
Use aggregates from order by expressions in order by scope
Make FutureStateChange a top-level class
Refine synchronization in FutureStateChange
Guarantee that queries are expired
Use stream with ImmutableMap collector over plain for loop
Use Compartor in JmxMetadata
Use ObjectName#getCanonicalName as JMX table name
Make JmxTableHandle support multiple objectNames
Test that order of parameters in JMX table is ignored
Update JMX docs about wildcards
Remove SATURATED_FLOOR_CAST double->decimal
Remove SATURATED_FLOOR_CAST double->bigint
Remove SATURATED_FLOOR_CAST real->[bigint,integer]
Update the Presto Tableau Web Connector to jQuery 2.2.3 Also move the needed tableauwdc js file to the vendor directory
Make sure to close keySectionOutput
Make sure we close the output stream on close()
Add FLOAT coercions
Remove coercion from DECIMAL to REAL
Update presto-hadoop-apache2 library
Force tgt refresh every 1s in kerberos product tests
Decrease maven & tests heap size.
Added basic current_timezone() function
Fix current_timezone() documentation: varchar, time zone format
Fix current_timezone() documentation: capitalization
Update docker images version to 19
Remove AggressiveOpts JVM flag from product tests
Remove CMSClassUnloadingEnabled JVM flag for product tests
Remove no-op JVM flag from product tests execution
Remove remote debug JVM flag from product tests
Save the JVM error log from product tests
Archive product test results on S3
Fix flaky test TestPrestoDriver::testQueryTimeout()
Mention config property names when validating memory configuration
Update docs with new memory-related configs
Update tempto version
Support skip.header.line.count
Prevent read when skip.footer.line.count is used
Formatting changes for WindowFilterPushDown
Simplify logic to identify row_number function
Do not throw an exception when the limit is greater than allowed value
Extract Assignments from ProjectNode and ApplyNode
Use PlanBuilder for subquery planning
Add support for coercions in scalar subqueries
Support for subquery coercions in IN predicates
Additional tests that IN subquery is applied only once
Tests that ALL, ANY subquery is applied only once
Support for coercions in correlated expressions
Support for coercions to supertype for IN, ANY, ALL, CASE and IF expressions
Fix Parquet backward compatibility issues
Add release notes
Remove unused logger
Add builder for DistributedQueryRunner
Add builder for TpchQueryRunner
Increase http client timeouts
Move json fix functions to a separate class
Add nullable annotations for SessionContext
Extract properties parsing from HttpRequestSessionContext
Save types, serde and session as part of SqlTask
Add actions and dataUris to QueryResults
Add json-based data structures for v2 protocol
Extract getTaskResults() method in TaskResource
Implement server part of v2 protocol
Implement client part of v2 protocol
Add a flag to enable client v2 protocol on a server
Add StatementClientV2 to a factory
Add tests for TPCH distributed using v2 protocol
Convert TPCH distributed test to use v1 protocol
Pass protocol version from the command line
Deallocate prepared statement on close
Add benchmark for ST_Contains
Optimize ST_Contains
Add benchmark for a broadcast spatial join
Broadcast spatial join
Fix generating invalid query plans
Change the Tableau connector to pull the schema for the first selected catalog
Remove unneeded catalog and schema values
Set headers if schema or catalog are populated
Update the Presto Tableau Web Connector to jQuery 2.2.3 Also move the needed tableauwdc js file to the vendor directory
Report memory usage for PartitionOutputOperator
Fix class name in comment
Remove test suppression for PostgreSQL
Fix optimized parquet reader complex hive types processing
fix type mismatch in Parquet predicate pushdown
fix parquet predicate pushdown tests
Fix default traversal for SimpleGroupBy
Add missing default traversals
Add support for parameters in prepared statements
Add syntax support for EXECUTE with USING
Add execution support for execute with using
Implement PREPARE
Move getFormattedSql() to presto-main
Introduce CREATE ROLE and DROP ROLE statements
Move PrincipalType to presto-spi
Expose Create/Drop/List roles methods in SPI
Introduce <catalog>.information_schema.roles table
Remove unused InMemoryHiveMetastore
Assign admin role to subset of users in FileHiveMetastore
Speedup TestHiveFileBasedSecurity
Implement Create/Drop/List roles in Hive connector
Introduce GRANT/REVOKE roles statements
Add Grant/Revoke/List roles authorization to the SPI
Introduce APPLICABLE_ROLES view
Implement Grant/Revoke/ListApplicableRoles in Hive
Refactor GRANT/REVOKE in Hive
Introduce ConnectorIdentity
Implement SET ROLE
Store catalog selected roles in Identity
Introduce ENABLED_ROLES view
Implement SET ROLE in Hive Connector
Accept ROLE in GRANT/REVOKE Privileges statements
Add SHOW ROLES to the parser
Rewrite SHOW ROLES as a select query
Add access control checks for SHOW ROLES
Add docs for SHOW ROLES
Product tests for SHOW ROLES
Add SHOW CURRENT ROLES
Add SHOW ROLE GRANTS syntax
Implement SHOW ROLE GRANTS rewrite
Add docs for SHOW ROLE GRANTS
Access control for SHOW ROLE GRANTS and SHOW CURRENT ROLES
Remove redundant checkDatabasePermission methods
Rename getGrantOptionForPrivilege to hasGrantOptionForPrivilege
Remove hive privilege null check
Allow all for admin role
Introduce isTableOwner method for readability
Simplify checkTablePermission
Refactor canCreateView security checks
Consider enabled roles for permissions
Refactor HivePrivilegeInfo
Reorder methods in HivePrivilegeInfo
Move parsePrivilege to MetastoreUtil
Add grantor to HivePrivilegeInfo
Add grantor_type and grantee_type columns to table_privileges
More product tests for SET ROLE
Document role management
Catalog access control for roles
Implementing setMaxRows and setLargetMaxRows in JDBC Driver
Fixing comments from code review
Fixing comments from code review
Add local_exchange_concurrency property
Increase number of hash partitioners in local exchanges
Avoid variable boxing in InMemoryHashAggregationBuilder (#6730)
Merge branch 'ArrayLessThan' of https://github.com/pallavia7/presto into ArrayLessThan
Added equals comparision as well
Presto 5436: Add support for AWS KMS
Add documentation for S3 settings
Merge remote-tracking branch 'prestodb/master' into aws-kms-emp
Rename presto.s3.* to hive.s3.* in docs
Merge changes from upstream
Merge remote-tracking branch 'prestodb/master' into aws-kms-emp
Revert a merge artifact
Merge remote-tracking branch 'prestodb/master' into aws-kms-emp
Move S3 configuration docs to the hive section
Merge remote-tracking branch 'prestodb/master' into aws-kms-emp
Add support for custom credentials providers
Close operators and drivers in tests
Add Spiller interface
Implement BinaryFileSpiller
Add config and session option enabling spilling
Add tests for queries using binary spiller
Fix formatting in HashAggregationBenchmark
Rename isFull method in HashAggregationOperator
Implement spilling in aggregation using Spiller
Add benchmark for BinaryFileSpiller
Assert all types are orderable before spilling
Make Spiller Factory pluggable
Refactor HashAggregationOperator
Add `experimental.spiller-spill-path` property (#264)
Add `experimental.spiller-threads` property (#267)
Clean up MergeHashSort
Update BinaryFileSpiller
Prepare InMemoryHashAggregationBuilder for spilling implementation
Implement Spillable and Merging HashAggregationBuilders
Use spilling in HashAggregationOperator
Add TestLocalBinarySpilledQueries
Refactor BenchmarkSTContains
Optimize the ST_Envelope function
Fix planning failure in lambda when aggregation is present
Issue #6581 : Categorize IOException as HIVE_BAD_DATA
#2135 : Fix to add bufferIds for the tasks created during waitForFreeNode
fix json_array_get throws NPE Github issue: https://github.com/facebook/presto/issues/922
Introduce LateralJoinNode
Use LateralJoin for scalar subqueries
Check that ApplyNode is used only for non scalar subqueries
Test UNNEST and LATERAL with OUTER joins
Add support LATERAL (query) to parser
Add support for LATERAL to planner
Transform correlated single row query to project
Extract PlanNodeDecorrelator
Transform correlated no-aggregation query to join
Move ExpressionAnalyzer's Scope to Context
Use Scope to resolve lambda arguments in ExpressionAnalyzer
Support lambda captures using dereference expressions
Fix planning when lambda argument shadows relation column
Fix correctness for DIRECT_SWITCH in InCodeGenerator
Use SerdeProperties when adding Hive partition
Fix type check for ST_ExteriorRing
Fix calls to HostAndPort.getHostText
Added json_extract_multiple function to provide similar functionality to Hive's json_tuple function
Move HiveCoercionPolicy and coercers to dedicated package
Reuse logic between canCoerce and createCoercer in HiveCoercionPolicy
Refactor TestHiveCoercion for better extensibility
Share coercion code for PageSource and RecordReader in Hive connector
Extract common Hive coercers logic to AbstractCoercer
Implement coercion between decimal types in Hive connector
Implement coercion from decimal to float in hive connector
Implement coercion from decimal to double in hive connector
Implement coercion from float/double to decimal in hive connector
Enable FileSplits to be obtained directly from InputFormat
Fix potential deadlock in DB backed resource group manager
Add basic IF NOT EXISTS support for create table
Added create table if not exists test
Make notExists final
Introducing Hash UDF
Make ATQ#testWithHiding be more precise
Introduce Scope into semantic analyzer
Update correlation in Apply node
Refactor TestLogicalPlanner to test logical plan creation
Add test to check if correlation is resolved correctly
Make PlanMatcherPatter.toString() output be more readable
Do not read IN predicate symbols for correlated Apply
Prune not used correlation or ApplyNode
Add blackhole catalog to TestLocalQueries
Test IterativeOptimizer with table with plenty columns
Fix formatting
Use currentConstraint instead of originalConstraint
Remove extra DUMMY_TABLE_LAYOUT_HANDLE variable
Rename variable
Check if plan changed in PickTableLayout
Add correctness logic from AddExchanges to TableLayoutRewriter
Extend PickTableLayout to pick layouts before AddExchanges
Pass predicatePushdown flag to Tpch connector in RuleTester
Use RuleTester instance explicitly in PickTableLayout tests
Add a pick layout rule test where predicate is fully enforced
Remove old PickLayout optimizer
Fix race condition when listing columns in MySQL connector
Fix NaN handling in distinct from operator for double and real
Pass config and metadata of LocalQueryRunner to JoinCompiler
Extract generateInputReference from InputReferenceCompiler
Pass Metadata and FeaturesConfig to JoinCompiler constructor
Add positionIsNotDistinctFromRow to SimplePagesHashStrategy
Add varchar data to BenchmarkGroupByHash
Use typeEquals for Slice types in JoinCompiler
Make TestMemorySmoke inherit from AbstractTestQueryFramework
Add support for views in memory connector
Modify presto to use 64bit hashes returned from types.
fixup! Modify presto to use 64bit hashes returned from types.
Fix pushing non-deterministic conjunt through semi-join
Push SemiJoin predicate inferred from filter side to source side
Only pushdown deterministic predicate
Rewrite projection only if there is inPredicate mapping
Fix missed memory tracking at HashBuilderOperator
Improve Parquet decimal read support
Add CAST from BOOLEAN to REAL
Add CAST from JSON to REAL
Add 0.197 release notes
add predicates simplification to SimplifyExpressions
Append nulls for missing values in Parquet.
Add a struct test case with non null values followed by nulls.
Add another nested struct with non null values after nulls.
Extract conversion from JsonToken to Presto type into JsonUtil
Extract conversion from JsonToken to DECIMAL into JsonUtil
Add cast from JSON to TINYINT/SMALLINT
Optimize CAST from JSON to map
Clean up JSON cast related methods in TypeJsonUtils
Remove TypeJsonUtils
Add support for TRY to expression matcher
Do not throw when expression type is unexpected
Generalize ExpressionSymbolInliner to take arbitrary mapping function
Add InlineProjections rule
Categorize Errors in DateTimeFunctions
Improve error messages for ArraySliceFunction
Support for TIMESTAMP type in Parquet format
Removing dependency to jodd library in hive connector
Added integration test script for hive 0.14
Add examples for each regexp function. Issue #2241
Explain CreateTable, DropTable, DropView, and RenameTable
Wait with LookupSourceFactory destruction until all users finish
Fail LookupOuterOperator's future when getOuterPositionIterator() fails
fixup! Wait with LookupSourceFactory destruction until all users finish
fixup! Fail LookupOuterOperator's future when getOuterPositionIterator() fails
Presto 5436: Add support for AWS KMS
Remove unused import
Add documentation for S3 settings
Merge remote-tracking branch 'prestodb/master' into aws-kms-emp
Rename presto.s3.* to hive.s3.* in docs
Revert a merge artifact
Merge remote-tracking branch 'prestodb/master' into aws-kms-emp
Move S3 configuration docs to the hive section
Remove extra spaces after periods
Merge remote-tracking branch 'prestodb/master' into aws-kms-emp
Add join method as a field to JoinNode
Add join method as a field to SemiJoinNode
Move choosing semijoin method to its own optimizer
Move choosing method for join to its own optimizer
Make PredicatePushdown optimizer not create unnecessary symbols
Make HashGenerationOptimizer insensitive of hash symbols order
Generalize expression extraction with predicates
Add a synthetic ListLiteralType with casts
Extract function resolution code to separate method
Parametrize verifyNoOrderByReferencesToOutputColumns
Add support for GROUPING()
Add documentation for GROUPING()
Add a synthetic ListLiteralType with casts
Extract function resolution code to separate method
Generalize expression extraction with predicates
Parametrize verifyNoOrderByReferencesToOutputColumns
Add support for GROUPING()
Add documentation for GROUPING()
Add support for Parquet datasource stats
Remove unused field
Return proper layout predicate for cassandra
Check that connector table layout matches the contraint
Use layout predicate as table scan current constraint
Add support for types with integer parameters
Implement VARCHAR(length)
Add mini-language to calculate return type parameter
Add bindLiteralParameters method and 'parametersTypes' argument to specialize(...) function
Add builder for Signature and SqlScalarFunction
Consider common supertype in type matching during function resolution
Support multiple annotation based definitions of scalar function
Introduce DecimalType and SqlDecimal
Add suport for DECIMAL literals
Introduce inequality and between operators for DECIMAL type
Test max() and min() aggregation for DECIMAL
Add documentation for DECIMAL data type
Add decimal support in presto-hive for orc-hive, rc-binary, rc-text and parquet
Add decimal product tests in presto-hive
Add DECIMAL casting functions
Implement decimal operators
Add casting between decimal types
Implement coercion between decimals
Add decimal support in presto-orc
Extract common super type before binding literals
parseTypeSignature automatically detects expressions
Add decimal support in TPCH connector.
Compute variable bindings based on LONG constraints
Explict declaration of long type parameter constraints for decimal functions
Replace ParameterKind.TYPE_CALCULATION with VARIABLE
Fix LongDecimalType.compareTo
Pass BoundVariables instead of parameters list in SqlFunction#specialize
Allowing to use DECIMAL with one or zero parameters.
Add to_ieee754 function for REAL and DOUBLE
Log error when Driver is left with revocable memory reservation
Complete move of memory without delay
Fix freeing revocable memory after query moved to reserved pool
Add missing argument validation
Remove dispensable validation
Unify reservation validation in various contexts
Include actual reservation values when validation fails
Detect overflow in memory accounting
Rename finished to inputFinished
Require more data only when input work processor is not finished
Add aggregation spill test with merge limits set to 0
Support VARCHAR(x) columns in Hive Connector
Create bounded varchar type for varchar hive columns
Ensure max length of varchar values in Parquet readers
Ensure max length of varchar values in RCFile readers
Ensure max length of varchar values in ORC readers
Ensure max length of varchar values in generic reader
Refactor TestHiveFileFormats
Add additional varchar(x) product tests
Support Hive Varchar for CREATE TABLE and INSERT
Support Hive Varchar partition columns
Use createUnboundedVarcharType in Hive connector
Quarantine testPartitionSchemaNonCanonical test
#3252 Improve error message for out-of-bounds access to array.
Modified error message to subscript is negative. Fixed tests for array subscript operator.
Move JoinNode.filter pushdown handling to PushDownOptimizer
Allow no hash columns in HashBuilderOperator
Fix applyFilterFunction in case when there are no left channels
Disable OUTER JOIN(TRUE) -> INNER JOIN rewrite
Remove unneded special case for PredicatePushDown
Push OUTER JOIN condition to INNER side in PredicatePushDown
Add tests for OUTER join with empty INNER table
Use INNER join as result of TransformUncorrelatedScalarToJoin optimizer
Eric's fix
Do not execute OUTER join as NestedLoopsJoin
Add some more non-equi join tests
Execute OUTER join with TRUE predicate using SimpleJoinProbe
Add HMAC functions
Raise required Java version to 8u92
Advise to use -XX:+ExitOnOutOfMemoryError in docs
Add default step for date variant of sequence function
Add array_sort with lambda comparator
Implement MergeSortProcessor
Extract HttpClientHandler from TestExchangeOperator
Implement MergeOperator
Add ordering to RemoteSourceNode and ExchangeNode
Planner part of Merge
Implement local merge sort
Compile merge sort comparator
Add property that allows to disable sort redistribution
Process pending reads upon noMorePages event
Use binary heap in MergeSort algorithm
Expose time spent in SplitSource.getNextBatch as TimeStat in JMX
Fix hive.config.resources property behaviour
Refactor HiveHdfsConfiguration
Read HDFS configuration at startup
JDBC executeUpdate support
AC
Fix formatting
Use convenience utf8Slice(String)
Add necessary Slice truncation in number to varchar casts
Remove Cassandra cache configs
Consider boxing when checking whether value matches type
Consider boxing when checking whether value matches type
Remove extra output symbols calculation
Filter scan constraint to use only accessible columns
Derive properties only for output symbols for TableScan
Make sure currentConstraint uses available columns
WIP: expose #9800 bug
Filter scan constraint to use only accessible columns
Consider boxing when checking whether value matches type
Make DomainTranslator#toPredicate deterministic
Refactor SHOW PARTITIONS implementation - extract methods
Make SHOW PARTITIONS work when table scan is filtered out
Move hasAllNeededOutputs to TableLayoutResult
Refactor TableLayoutResult#hasAllOutputs
Add correctness logic from AddExchanges to TableLayoutRewriter
Pass predicatePushdown flag to Tpch connector in RuleTester
Execute PickTableLayout before AddExchanges
Enforce PickTableLayout is run before AddExchanges
Rename variable
Make predicate to always present in TpchRecordSet
Fix TPCH predicate pushdown when filtering column is pruned
Accept Tpch columns as List
Remove predicate pushdown switch in TPCH connector
Predicate Pushdown and Lazy Reads in ParquetPageSource
Reintroduce queryBoundary in Scope
Add getLocalParent and getOuterQueryParent methods to Scope
Use Optional<Scope> as context in StatementAnalyzer
Add scope checkStates to StatementAnalyzer
Make QuerySpecification output scope use context scope as parent
Add support for hierarchical scopes during planning
Distinguish between relation and hierarchy field index in ResolvedField
Assign proper scope to OrderBy AST node
Directly use hierarchyFieldIndex when rebinding field to symbol
Move and rename verifyAggregations method to AggregationAnalyzer
Add ScopeReferenceExtractor
Add support for orderByScope to AggregationAnalyzer
Support for SymbolReference in project method.
Rename scope computing methods
Coerce unresolved node in TranslationMap
Proper analysis and planning of complex ORDER BY expressions
Do not allow nondeterministic ORDER BY when SELECT DISTINCT is present
Expressions with lambda arguments are not group expressions
Defer host resolution for Cassandra contact points
Create warning system
Add warnings to client and server protocol
Add warnings to JDBC driver
Static import String.format
Remove unused function ExpressionAnalyzer.create
Enable ORC optimized writer
Remove JVM vendor check from RPM
Rename test class testing Avro schema evolution
Run Avro tests as part of the build
Add tests for various types of avro.schema.url
Support avro.schema.url being HDFS location
Add spilled data size to QueryStats
Add spilled data size to EXPLAIN ANALYZE
Add spilled data size to query summary debug
Optimize fetching columns for single table
Add support for binary literals
Fix LIMIT for partitioned row_number with order by
Fix limit push in WindowFilterPushDown optimizer
Fix failed test. Check Constraint to see if there is a limit clause
Add tests which will fail without this fix
Add back LimitNode in visitLimit if rewrittenSource is not TopNRowNumberNode
Fix cassandra timestamp type (from bigint to timestamp)
Introduce Signature object for functions
UDF supports as a internal plugin
Remove group field at Signature
Accept system properties in RuleTester
Reformat code of EqualityInference class
Add DynamicFilter
Add DynamicFilterAssignments to JoinNode
Implement dynamic filtering pushdown
Introduce DynamicFilterSummary
Add ApplyDynamicFilters
Add DynamicFilterResource
Add InMemoryDynamicFilterClient
Collect DynamicFilterSummary before HashBuilder
Register tasks in DynamicFilterService
Add DynamicFilterDescription
Pass Future with DynamicFilterDescription to the SplitManager
Add dynamic partition pruning to Hive connector
Implement stripe pruning based on the runtime filters
fixup! Implement dynamic filtering pushdown
Support AWS s3a schema
Set MALLOC_ARENA_MAX=1 for product tests docker Java containers
Add tpch.q17 test query to big_query tests group
Set MALLOC_ARENA_MAX=2 for product tests docker Java containers
Move the PrestoS3FileSystem config keys to S3ConfigurationUpdater
Update deprecated use of Throwables.propagate
Update use of deprecated AWS SDK methods
Enable global bucket access when no S3 region/endpoint is set
Add tests for BIGINT near 32-bit boundary in InCodeGenerator
Improve performance of InCodeGenerator
Add benchmark for JSON to array/map cast
Extract conversion from JsonToken to Presto type into JsonUtil
Extract conversion from JsonToken to DECIMAL into JsonUtil
Add cast from JSON to TINYINT/SMALLINT
Optimize CAST from JSON to array
Optimize CAST from JSON to map
Clean up JSON cast related methods in TypeJsonUtils
Remove TypeJsonUtils
Check if column is null when verifying partition
Fix dictionary fallback detection.
Fix explain of cross join
Convert results to common types before comparing
Remove no-op assignment
Speed up TestAnalyzer
Round decimals to expected precision in H2QueryRunner
Fix handling of DECIMAL literals with only integral or only fractional part
Use proper DOUBLE literals in tests
Enable treatment of fixed point literals as DECIMAL
fixup! Use proper DOUBLE literals in tests
fixup! Enable treatment of fixed point literals as DECIMAL
fixup! Use proper DOUBLE literals in tests
fixup! Enable treatment of fixed point literals as DECIMAL
fixup! Enable treatment of fixed point literals as DECIMAL
fixup! Enable treatment of fixed point literals as DECIMAL
fixup! Enable treatment of fixed point literals as DECIMAL
Add coercion for joing using
Add coercion for equi-join criteria
Log tests executed by AbstractTestQueryFramework
Do not run TestLocalBinarySpilledQueries on Travis
Support reading MongoDB documents as map type.
Extend metastore to get schema of non-metastore tables
Disallow ALTER TABLE operations when Avro schema is set
Disallow CTAS when Avro schema is set
Disable creating partitioned/bucketed tables when Avro schema set
Use getFields to get the schema of tables
Add documentation for Avro schema evolution in Hive connector
Update error messages in Avro-Kafka support with proper capitalization
Rename ExpressionRewriteRule to ExpressionRewriter
Migrate SimplifyExpressions to iterative optimizer
Add LambdaCaptureDesugaringRewriter test
Extract PushDownnegationsExpressionRewriter
Extract CommonPredicatesExpressionRewriter
Merge Desugaring and CanonicalizeExpressions iterative optimizers
Migrate DesugaringOptimizer to iterative optimizer
Make ExpressionRewriteRules static and public
Add preGroupedSymbols to AggregationNode
Identify streaming aggregations in EXPLAIN
Push up AssignUniqueId through remote exchange
Add plan checker for streaming aggregations
Update AddLocalExchanges to plan streaming aggregations
Add AggregationNode#isStreamable
Include join type when printing plan pattern
Add better support for ordering scheme in StreamPropertyDerivations
Add support for AssignUniqueId in StreamPropertyDerivations
Add ARBITRARY_DISTRIBUTION to SystemPartitioningHandle
Reduce number of unions in AbstractTestQueries#testAssignUniqueId
Add support for AssignUniqueId partitioning in PropertyDerivations
Add BasePlanTest#assertPlanWithSession that accepts planValidator
Add tests validating no remote exchange is added before aggregation
Explicitly prune subquery symbols for EXISTS
Make DecorrelatedNode#getCorrelatedPredicates public
Add support for exists expression to ExpressionTreeRewriter
Add support for exists in DefaultExpressionTraversalVisitor
Add mapping from LateralJoinNode.Type to JoinNode.Type
Make SymbolsExtractor#extractOutputSymbols accept Lookup
Refactor PlanNodeDecorrelator into recursive visitor
Add support for non-default aggregations, limit and OR in subqueries
Add basic TransformCorrelatedLateralJoinToJoin
Try to avoid count(*) when rewriting exists from apply to lateral node
Add tests for more complex subqueries
Do not throw when expression type is unexpected
Generalize ExpressionSymbolInliner to take arbitrary mapping function
Add InlineProjections rule
Generate digest for a query
Support digest in hive connector
Support digest in API and CLI
Add digest into query completion event
Add tests for digest generation
fixed #215 issue.
fix(loader): modify the method we check patch signature. Do not invoke openssl verify, only check the hash of publicKey's signature.
compat gradle plugin 3.0.0.
fix java heap out of memory when dex
1. add new interface getBaseContext for application
fix mapping bug
[bugfix] fix MissingFormatArgumentException when format string contain % in format string. fix #540
[tinker sample] copy all variants apk to bakApk folder
fix java heap out of memory when dex
1. add new interface getBaseContext for application
add sonic pdf
some fixes
Merge pull request #1 from zhongwuzw/master
Merge remote-tracking branch 'origin/dev'
增加忽略文件.gitignore
Modify the document error description word
Fix typo
[iOS] Fix Weak-Etag get value length error
[iOS]Fix crash in iOS11.4
[iOS] Fix Weak-Etag get value length error
[iOS]Fix crash in iOS11.4
Delegate renderer creation to protected methods so that a child can extend the functionality
Float To Double
Float To Double
added specific label position properties
specific x labels example
Fix IndexOutOfBoundsException thrown when drawing data set values (#2450)
Small code formatting fix
added specific label position properties
specific x labels example
specific labels on y axis
Added new coloring possibilities for LineChart. There are possibly more chartes where this functionality could be added. But currently is needed only in LineChart 3 modes : default, horizontal gradient, vertical gradient
enable highlight value(-only) display even if values are hidden
Merge pull request #1 from doodeec/master
fix clipping of highlight values
Merge pull request #2 from doodeec/master
drawing highlight circles
Merge pull request #3 from doodeec/master
drawing sequence clip circle fix
Merge pull request #4 from doodeec/master
coloring value circles
Merge pull request #5 from doodeec/master
coloring fix
Merge pull request #6 from doodeec/master
line coloring fixes - works with zoom
Merge pull request #7 from doodeec/master
Fixing overlapping label closes #1085
Bubble Min
Fix min reference
Merge pull request #2 from PhilJay/master
Enable reset for BarChart
Merge branch 'master' of https://github.com/checoalejandro/MPAndroidChart
Update README.md
Alternative fix for #181.  No functional changes just allows developers to override some drawing with more precision
Alternative fix for #181.  No functional changes just allows developers to override some drawing with more precision
Merge branch 'master' of https://github.com/robertschmid/MPAndroidChart
Initialize properly AnimatedZoomJob. (Fixes #3725)
Add path effect to all bar X axis renderer
Comment sample code for dash effect
- implement VisibleEntry enum for the YAxis class, to handle various cases for showing labels and grid lines
Fixed issue on ordering colors Line Charts (#55)
Issue #1383: added the ability to select multiple items contained on a single x-index value in a dataset.
Added guard condition to prevent ArrayIndexOutOfBoundsException when checking for a bubble/scatter chart special case.
Merge branch 'master' of https://github.com/PhilJay/MPAndroidChart
Merge branch 'master' of https://github.com/PhilJay/MPAndroidChart
Dismiss highlight selection when touching empty sections of bar chart.
fixes #1345: bug in drawCubic inside LineCharts
Merge branch 'master' of https://github.com/PhilJay/MPAndroidChart
Fix #1536, #1608 (IndexOutOfBoundsException in drawCubicFill())
fix typo error
made entry, dataset, chartdata & highlight serializable
extended serializable
fix issues 2952 : IndexOutOfBoundsException
This should fix Issue #2432. Utils.FLOAT_EPSILON is a value slightly greater than one, so judging by the comments, it was being used incorrectly.
fix pie slice shape error
Fix IndexOutOfBoundsException thrown when drawing data set values (#2450)
Fix for chart not being drawn if visible portion starts with a NaN
Merge remote-tracking branch 'upstream/master'
Fix for chart fill not being drawn if visible portion starts with a NaN
Merge branch 'master' of https://github.com/PhilJay/MPAndroidChart
Merge remote-tracking branch 'upstream'
Merge remote-tracking branch 'upstream/master'
Eliminate allocs, cache images/text (#1892)
Cache circles in LineChartRenderer instead of recreating them (#1897)
LineChartRenderer takes responsibility for caching circle bitmaps (#1897)
fix issues 2952 : IndexOutOfBoundsException
Fixing the following error "W/OpenGLRenderer: Path too large to be rendered into a texture" by drawing using the fill path to clip a fill in the canvas, instead of drawing the path.
Merge pull request #1 from scottkennedy/weakref-fixes
ensure the existence of a strong reference to mDrawBitmap in drawExtras
fix NPE for PieChartRenderer.drawHighlighted
Fixed bug in Horizontal Bar Chart example
X Axis Labels being cut off horizontally #1657 fix font size problem of label-x.
back to original project
Change to be able to take value 0 graph without taking the legend
Eliminate allocs, cache images/text (#1892)
Eliminating allocs, caching values #1892
Added MaterialYesNoPreference Fix MaterialEditTextPreference to pick up the dialogTitle property from preference xml
Example of MaterialYesNoPreference
Merge branch 'master' of https://github.com/afollestad/material-dialogs
Merge pull request #1 from afollestad/master
Merge remote-tracking branch 'upstream/master'
Attempting to fix conflict
Fixed conflict
Update libraries from project to fix buildTools erros.
Adding an icon tint possibility in Simple List Item
Unused import
Unused import
Update MaterialSimpleListItem.java
Resolved issue #1507
Resolved #1384, RTL checkbox prompt fix
Resolved issue #1507
Fix Issue #1066 Failed to resolve material-dialogs:core:unspecified
Update travis.yml to work with build tools 27
Fix gradlew spotlessApply
Merge branch 'master' into issue/1475
Added enhancement for #1032 To fix:  - design of checkbox if it was not right;   - the callback is called only if the checkbox is checked and if one button is clicked, so add the call for other cases: on click outside, if the checkbox is not checked, ect...;    - the callback function onSelection(dialog) if it was not right;
Commit missing file.
fixed font size and line spacing
fixed padding/margin mainFrame and buttonFrame + fix wrong button pressed background in API < 21
added missing drawable from previous commit
merge to upstreap + fix button height on API 21
Merge remote-tracking branch 'upstream/master'
Remove unused code
Annoate setProgress/setMaxProgress with UiThread
WIP
Created LottieTask
Switched to @Mock for listener
TEST: ignore LottieTaskTest
Ignore just removeListener
Separated success and failure handlers
More cleanup
Removed test
Cleaned up cache
Added failure listeners to PlayerViewModel
Merge remote-tracking branch 'origin/master' into gpeal--task
Updated dependencies
Cleaned up lots of code from IntelliJ inspections
Take 2
Properly register ColorFilter animations
Converted all json to use opt* instead of get*
Add support for images
Allow shapes with different point counts but warn
Moved points inside check
ping CI
Added log
Added more logs
Added more logs
Expose setScale on LottieAnimationView and LottieDrawable
Reimplemented LottieValueAnimator
Fixed tests
Added a bunch of tests
More cleanup
Updated Frame.json
[WIP] Animator overhaul
Updated docs
Cleaned up docs
Merge remote-tracking branch 'origin/master' into gpeal--value-animator
Bump robolectric
Properly fixed scaling
Ran tests
Fixed scale type on a test
Added another test
Extract factories for Animatable classes
Nits
More simplifications
Decouple more json parsing logic
Merge branch 'master' into felipe/more-json-decoupliing
Merge branch 'master' into felipe/more-json-decoupliing
Address comments
Merge branch 'felipe/more-json-decoupliing' of github.com:airbnb/lottie-android into felipe/more-json-decoupliing
Extract more factory classes
Work in progress
Add moved classes
merges with master
Fix usage of Factory methods
Update tests to JUnit 4
JsonReader
More fixes
Clean up
Removed logs
Fixed a bug that default shapes to closed
Fix path keyframe cp order
Upgrade to gradle 4
Add google maven
Fixed time stretch masks
Properly close paths
Clamp alpha between 0 and 255
Extract factories for Animatable classes
Nits
More simplifications
Decouple more json parsing logic
Merge branch 'master' into felipe/more-json-decoupliing
Merge branch 'master' into felipe/more-json-decoupliing
Address comments
Merge branch 'felipe/more-json-decoupliing' of github.com:airbnb/lottie-android into felipe/more-json-decoupliing
Work in progress
Add moved classes
Fix usage of Factory methods
Delete this file
Fixed tests
More cleanup
Cleaned up animated value vs animated fraction
Updated Frame.json
Treat intersect masks like add masks
Initial precomp support
Allow matted layers to establish their parent layer inside of a precomp
Fix: Strange lines on rounded rectangle shape #242; https://github.com/airbnb/lottie-android/issues/242 ; Updated rect formulas ;
Add bounds support
Works but is 1 frame behind
It works
Ran tests
Add padding to account for rounding errors
Reran tests
Minor mask cleanup
More fixes
Take into account start and end frames for min and max progress
Call notifyEnd after removing the frame callback
Fixed min/max progress
Make ImageAssetManager thread safe
Set progress for each test
Fix test
Update the drawable when the composition is reset to the same one
Updated test
Cleanup
More cleanup and added test
Fixed lint and added better error handling
Addressed comments
Merge remote-tracking branch 'origin/master' into gpeal--network2
Merge remote-tracking branch 'origin/master' into gpeal--network2
Add support for images
Added a system for updating properties dynamically
Test json
Fixed a bug that would draw solid layers with rotations as rects
Added test
Added support for miter limit
Updated AEP
Merge remote-tracking branch 'origin/master' into gpeal--miter-limit
Merge remote-tracking branch 'origin/master' into gpeal--miter-limit
Take into account start and end frames for min and max progress
Call notifyEnd after removing the frame callback
Synchronize task threading
Make LottieResult volatile
Synchronize add and remove listeners
Addressed comments
Extra safeguards for LottieTask
Prevent parent layers from overwriting child layer's alpha
Suppress false lint error for LottieValueAnimator#resume https://github.com/airbnb/lottie-android/issues/462
Initial support for linear gradients
Support direction in ellipse shapes
Added a test
Added support for gradient stroke
Add styleable attribute for whole animation color filter
Add XML color filter documentation to README
Merge branch 'master' into feature/xml-color-filter
Take into account start and end frames for min and max progress
Call notifyEnd after removing the frame callback
Reimplemented LottieValueAnimator
Fixed tests
Added a bunch of tests
More cleanup
Cleaned up animated value vs animated fraction
Updated Frame.json
Add an intersect mask warning at parse time
Use thread-safe set for listeners. Closes #639
Merge branch 'master' into fix-conccurent-modification
Allow returning null from value animator callbacks
Fixed min/max progress
Make ImageAssetManager thread safe
Set progress for each test
Fix test
Added a typography demo
Added a test
Updated demo
Readded fonts
Add more tests
Upgrade build tools to 27.0.3
Fix rendering graph in black #594
Fix instructions in black #594
Clear the composition when a new one is set
fix min & max frame not apply to loaded composition
Merge branch 'master' into FixMinAndMaxFrame
Added a bunch of test json
Fixed animatable path values
Add support for time remapping
[WIP] Animator overhaul
Updated docs
Merge remote-tracking branch 'origin/master' into gpeal--value-animator
Bump robolectric
Created an AnimatableTransform
Expose setScale on LottieAnimationView and LottieDrawable
CompositionLayer: Handle invalid Region.Op on Android Pie
Use Thread Pool executor for AsyncTasks
Remove null restriction on value callbacks
Gracefully degrade when null bitmaps are set
[WIP] Animator overhaul
Updated docs
Cleaned up docs
Merge remote-tracking branch 'origin/master' into gpeal--value-animator
Bump robolectric
Properly fixed scaling
Ran tests
Fixed scale type on a test
add endAnimation() method to lottie drawable
Move to using only ALL_SAVE_FLAG with Canvas.saveLayer API
merged from upstream
Merge branch 'master' of https://github.com/airbnb/lottie-android
Using new variant of Canvas.saveLayer API on Android M and above.
Reimplemented LottieValueAnimator
Fixed tests
Added a bunch of tests
More cleanup
Cleaned up animated value vs animated fraction
Updated Frame.json
LottieCompositionFactory cleanup
Fixed test
LottieDrawable: {play/reverse}Animation: Assert progress and update setSetTime properly
Font rendering works pretty well
Added a typography demo
Added a test
Updated demo
Readded fonts
Add more tests
Updated to v28
Updated dependencies
Automated migration
Fixes on top of auto converter
It builds
It builds 2
PlayerFramgent doesn't build
It builds
Cleanup
Update build tools
Fixed unit tests
Fixed build
Add basic polystar support
Reimplemented LottieValueAnimator
Fixed tests
Added a bunch of tests
More cleanup
Cleaned up animated value vs animated fraction
Updated Frame.json
Fix race condition with min/max frame
Fix multiple masks
Reduce the number of bitmaps from 1 to 0...
Updated dependencies
Cleaned up lots of code from IntelliJ inspections
Take 2
Render every frame rather than dropping frames to match the framerate
Gracefully degrade when null bitmaps are set
Updated PlayerFragment with total frame, current duration and total duration as request #721
Update padding sizes
Restored .idea/codeStyleSettings.xml as it deleted for some unknown reason
Updated PlayFragment.kt as per feedback
Added white space
Properly fixed scaling
Ran tests
Fixed scale type on a test
Added another test
Cleaned up lots of code from IntelliJ inspections
Take 2
Properly fixed scaling
Ran tests
Fixed scale type on a test
Added another test
Reimplemented LottieValueAnimator
Added a bunch of tests
Cleaned up animated value vs animated fraction
Updated Frame.json
Reimplemented LottieValueAnimator
Fixed tests
Added a bunch of tests
More cleanup
Updated Frame.json
Fixed min/max progress
Make ImageAssetManager thread safe
Set progress for each test
WIP
Created LottieTask
Fixups
Switched to @Mock for listener
TEST: ignore LottieTaskTest
Ignore just removeListener
Separated success and failure handlers
More cleanup
Removed test
Cleaned up cache
Added failure listeners to PlayerViewModel
Merge remote-tracking branch 'origin/master' into gpeal--task
Added start frame and end frame setters and play(startProgress, endProgress)
Removed Unknow TextureAttribute type
Fix #1775 ensure loading of sound on Android
Fix row() call not taking effect if not called after add() before layout()
fix AtlasTmxMapLoader tileset tile id offset
Normalized BMFont padding order in all cases to agree with the Angelfire specification.
Moving changes to branch.
Merge branch 'master' of https://github.com/bryanwagner/libgdx
attempted fix by making graphics cleanup on ui thread
Change how retina resolutions are handled
Fixes #4035 and missing "iPad 6,7"
And again, with unique names
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Gdx.net.openURI does not work when called from the default iOS browser on iPhone or Android phone #5036
Fix for #5036
solves issue #5036
Fix #5036
fixing https://github.com/libgdx/libgdx/issues/3521
add border color for transparency
currentTransparentColor -> transparentColor
currentTransparentColor -> transparentColor
Allow libgdx to function under 3.2 core profile on desktop (and presumably elsewhere as well). * In core profiles glGetString(GL_EXTENSIONS) is deprecated, so a new mechanism is used to test for extensions. * In core profiles VAOs are mandatory, so VertexBufferObject now tracks a VAO instead of binding all attributes on every call. This should be a slight performance improvement under GL30. * VertexArray uses a deprecated call to VertexAttribPointer() that references client memory. This is not allowed in core profiles. I found it simpler to use VertexBufferObject for GL30. VertexArray is only being created inside a particular Mesh constructor, which seems to be used mainly by the *Batch classes. I modified the calling classes to check for GL30 and ask for an appropriate VertexData. It might be good to be more aggressive here and just remove VertexArray altogether, but I wasn't sure what that would affect so I chose the conservative route. With these changes SpriteBatch and Mesh function properly on my machine. No shader changes were needed.
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Changes to FrameBuffer to make it easier to meaningfully subclass. In particular, I'd like to be able to define multiple draw buffers, and to bind the buffer for read/draw independently. This is more relevant in OpenGL 3.
Splitting out my changes to VertexBufferObject to create a parallel VertexData implementation, VertexBufferObjectWithVAO. This reduces the branching and keeps the VBO code pretty simple. Modify Mesh to create the new implementation when appropriate.
reverting FrameBuffer changes, these are experimental and separate.
Allow libgdx to function under 3.2 core profile on desktop (and presumably elsewhere as well). * In core profiles glGetString(GL_EXTENSIONS) is deprecated, so a new mechanism is used to test for extensions. * In core profiles VAOs are mandatory, so VertexBufferObject now tracks a VAO instead of binding all attributes on every call. This should be a slight performance improvement under GL30. * VertexArray uses a deprecated call to VertexAttribPointer() that references client memory. This is not allowed in core profiles. I found it simpler to use VertexBufferObject for GL30. VertexArray is only being created inside a particular Mesh constructor, which seems to be used mainly by the *Batch classes. I modified the calling classes to check for GL30 and ask for an appropriate VertexData. It might be good to be more aggressive here and just remove VertexArray altogether, but I wasn't sure what that would affect so I chose the conservative route. With these changes SpriteBatch and Mesh function properly on my machine. No shader changes were needed.
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Changes to FrameBuffer to make it easier to meaningfully subclass. In particular, I'd like to be able to define multiple draw buffers, and to bind the buffer for read/draw independently. This is more relevant in OpenGL 3.
Splitting out my changes to VertexBufferObject to create a parallel VertexData implementation, VertexBufferObjectWithVAO. This reduces the branching and keeps the VBO code pretty simple. Modify Mesh to create the new implementation when appropriate.
reverting FrameBuffer changes, these are experimental and separate.
restoring framebuffer
fixing an egregious bug with VAOs
reverting framebuffer changes - I'm still getting the hang of branches heh.
Merge remote-tracking branch 'upstream/master'
Remove Timer.checkStatics and set Timer.thread to null on pause
Make iPhone 6+ behave more sensibly.
Add setPosition to Music interface, and implement
updated version...
fixed ios native build, uses 8.1 sdk now
Color fix
Splitting out my changes to VertexBufferObject to create a parallel VertexData implementation, VertexBufferObjectWithVAO. This reduces the branching and keeps the VBO code pretty simple. Modify Mesh to create the new implementation when appropriate.
GWT: Fixed coordinates for touch and mouse events when CSS scaling is applied to the Canvas element.
Several Gdx.Net enhancements.
Small changes.
Removed the new HTTP methods.
Emulate BufferUtils.copy(Buffer, Buffer, numElements)
BASIC ios vibrate, boo apple
Add support for converting popular Android ARGB8888 format
Add variant of argb8888 method taking components
New PNG encoder that supports compression, more efficient vertical flipping, and minimal allocation when encoding multiple PNGs.
Fixed PNG encoder for all pixmap formats.
Fixes #2512
Better way of specifying initial buffer size.
Removed IOException, reset pixel buffer position.
Added renderObjects() to TiledMapRenderer
Fixes #2517
Add MeshBuilderTest; normalTransform should be Matrix3; use color to tint specified vertex colors.
Merge remote-tracking branch 'origin/master'
Fix #4001
Changes moe-gradle version 1.2.3 -> 1.2.5
Stop IDE's thinking android is required when it isn't. Resolves #1739
Fixed a resource leak in RemoteSender.
Changed static final Vectors in Vector2 and Vector3 to methods. This is better, because in the past you could change Vector2.Zero accidentally by forgetting to call cpy().
Added ConstVector2 and ConstVector3, which both throw exceptions in every one of their mutator methods. The Vector2 and Vector3 constants are now ConstVectors.
ConstVectors now throw GdxRuntimeExceptions instead of RuntimeExceptions.
Fix scrollpane area when using fading scroll bar on top of content
closes #3887 Double-click select causes StringIndexOutOfBoundsException
closes #3887 Double-click select causes StringIndexOutOfBoundsException in TextField.wordUnderCursor
Delete gradle-wrapper.properties
Handle input pointer id lookup fail not to be fatal on robovm
Fixes 5103. Items under a ScrollPane's fading scrollbar are not clickable even if the scrollbar is hidden (#5103)
#5127 Provide access to ALSource state on iOS
add support for emissive color and texture attributes
add missing import MaterialEmissiveTest
fix if only emissive texture is given
Fixed an issue that caused textfields to lose focus due to invisible windows when pressing tab. The findNextTextField method now searches up the parent hierarchy to determine if all parent actors and the actor itself are visible. If any of the parent actors or the actor itself are invisible, the findNextTextField method will ignore them.
Fixes #5191. Clear touch points on Android multi-touch ACTION_CANCEL event
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Prevent controller extension from swallowing keyboard events
Add focused to ButtonStyle
Remove whitespace on line wrap
Merge branch 'glyphLayoutTrimLines' of github.com:TCreutzenberg/libgdx into glyphLayoutTrimLines
Added jvm arg "startOnFirstThread" in the rust task for macOS
Reverse the requirements on fields in copyFields(), so superclass objects can be copied to subclass objects.
Update Intersector.java
Update Intersector.java
Update Intersector.java
Update Intersector.java
Add SplitPane.isCursorOverHandle()
Vector2.java
Removed unnecessary Align. in Align
Fix PropertiesUtils space handling during output
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
FileHandle#map compatibility for GWT
Removing uneeded imports * How did this even work
Added FileHandle#map(), can be used to memory map a file
GwtFileHandle#map() now throws unsupported
Slightly better exception message
Merge branch 'master' into filehandlemap
Merge remote-tracking branch 'upstream/master' into filehandlemap
Merge branch 'filehandlemap' of PokeMMO/libgdx into filehandlemap
Minor cleanups for map methods
Fixing writable file mapping. - RandomAccessFile allows us to actually obtain a rw FileChannel
Added contains to binary heap
Fixed spacing issue
GL20 texture filter types description
Add screen edges that override system gestures as iOS RoboVM configuration option
stop messing with my readme
Overload AssetManager#isLoaded and #finishLoadingAsset to take AssetDescriptor as parameter
Updated a couple of mismatched version numbers
Update CHANGES
Merge branch 'master' into patch-2
fixes libgdx/libgdx#5254 WAV file read from jar buffer underflow
Added .isEmpty() and .nonEmpty() methods to collections
Methods renamed, comments updated - .nonEmpty() is .now hasItems() - Changed comments for methods according to review request
Removed all .hasItems() from custom collections
Solves issue #5025
Fixes #5059. Sounds randomly not being played on Android SDKs higher than 4.4
Freetype - Add generator constructor which can specify which faceIndex to use
CHANGES file changes for faceIndex api change
gdx-controllers: allow specifing custom controllers
Update mappings for Xbox controller
Implemented pull request comments
Bit operators for comparison
Use StringBuilder instead of StringBuffer as it offers high performance in single thread context as it is generally the case.
Add focusWindow() to Lwjgl3Window
-The ParticleController stores a frame time in its deltaTime member but this value is hard-coded at 1/60 regardless of framerate. This change adds an overload to the ParticleController's update() method to take the delta time. This allows the particles to adjust their time deltas for faster or flower framerate. The change also allows callers to cause particle effects to be played back at faster or slower speeds. -This change also adds overloads for update() and updateAndDraw() of the ParticleSystem class, each of which takes a frame time and adds an overload for the ParticleEffect update() method. -RegularEmitter previously only used the floor of the number of milliseconds that had passed since  the last update when calculating percent of the lifetime lived for each particle. For playback of  particle effects that were being played at .1 times the speed of the default speed, .00016666 ms were elapsed between calls to update(), which rounds down to 1 ms rather than 1.666 ms. This meant that the particle effect being played at .1 speed was actually being animated for 16 times as long rather than 10 times as long as the same effect played back at 1x speed (because the floor of .001666 *1000 = 16 but floor of .00016666*1000 is 1.) -This change also updates the Flame tool to make it respect the delta multiplier
Forgot to add the FlameMain.java changes
Improved controllers detection to avoid unrelated devices being detected as game controllers
Fixed the missingGlyph of FreeTypeBitmapFontData doesn't initialized.
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
fixed try-finally swallowing Exception after end
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Changed Constructor of Ellipse(Circle)
Replace HashMap with ObjectMap
 Renamed TextAreaScrollTest, it actually tests the ScrollPane behavior when it wraps a TextArea. Added to GdxTests.
Merge branch 'master' into scrollPaneTextArea
GLTexture - gltexparameter i instead of f
Allow List#setItems() with the original items
Add option for extra vertex attributes in SpriteBatch and a helper class.
ExpandedSprite replaces ExpandableSprite.
Handle input pointer id lookup fail not to be fatal on robovm
Fixes 5103. Items under a ScrollPane's fading scrollbar are not clickable even if the scrollbar is hidden (#5103)
#5127 Provide access to ALSource state on iOS
add missing import MaterialEmissiveTest
fix if only emissive texture is given
Fixed an issue that caused textfields to lose focus due to invisible windows when pressing tab. The findNextTextField method now searches up the parent hierarchy to determine if all parent actors and the actor itself are visible. If any of the parent actors or the actor itself are invisible, the findNextTextField method will ignore them.
Fixes #5191. Clear touch points on Android multi-touch ACTION_CANCEL event
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Prevent controller extension from swallowing keyboard events
Add focused to ButtonStyle
Remove whitespace on line wrap
Merge branch 'glyphLayoutTrimLines' of github.com:TCreutzenberg/libgdx into glyphLayoutTrimLines
Added jvm arg "startOnFirstThread" in the rust task for macOS
Reverse the requirements on fields in copyFields(), so superclass objects can be copied to subclass objects.
Update Intersector.java
Update Intersector.java
Update Intersector.java
Update Intersector.java
Add SplitPane.isCursorOverHandle()
Vector2.java
Removed unnecessary Align. in Align
Fix PropertiesUtils space handling during output
Fix issue where Android wouldn't detect bluetooth
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
Removed unnecessary Align. in Align
FileHandle#map compatibility for GWT
Removing uneeded imports * How did this even work
Added FileHandle#map(), can be used to memory map a file
GwtFileHandle#map() now throws unsupported
Slightly better exception message
Merge branch 'master' into filehandlemap
Merge branch 'filehandlemap' of PokeMMO/libgdx into filehandlemap
Minor cleanups for map methods
Fixing writable file mapping. - RandomAccessFile allows us to actually obtain a rw FileChannel
Added contains to binary heap
Fixed spacing issue
GL20 texture filter types description
Add screen edges that override system gestures as iOS RoboVM configuration option
Overload AssetManager#isLoaded and #finishLoadingAsset to take AssetDescriptor as parameter
Updated a couple of mismatched version numbers
Update CHANGES
fixes libgdx/libgdx#5254 WAV file read from jar buffer underflow
Added .isEmpty() and .nonEmpty() methods to collections
Removed all .hasItems() from custom collections
Solves issue #5025
Fixes #5059. Sounds randomly not being played on Android SDKs higher than 4.4
Freetype - Add generator constructor which can specify which faceIndex to use
CHANGES file changes for faceIndex api change
gdx-controllers: allow specifing custom controllers
Update mappings for Xbox controller
Convenience methods for Align - test for horizontal/vertical alignment
Implemented pull request comments
Bit operators for comparison
Use StringBuilder instead of StringBuffer as it offers high performance in single thread context as it is generally the case.
Add focusWindow() to Lwjgl3Window
-The ParticleController stores a frame time in its deltaTime member but this value is hard-coded at 1/60 regardless of framerate. This change adds an overload to the ParticleController's update() method to take the delta time. This allows the particles to adjust their time deltas for faster or flower framerate. The change also allows callers to cause particle effects to be played back at faster or slower speeds. -This change also adds overloads for update() and updateAndDraw() of the ParticleSystem class, each of which takes a frame time and adds an overload for the ParticleEffect update() method. -RegularEmitter previously only used the floor of the number of milliseconds that had passed since  the last update when calculating percent of the lifetime lived for each particle. For playback of  particle effects that were being played at .1 times the speed of the default speed, .00016666 ms were elapsed between calls to update(), which rounds down to 1 ms rather than 1.666 ms. This meant that the particle effect being played at .1 speed was actually being animated for 16 times as long rather than 10 times as long as the same effect played back at 1x speed (because the floor of .001666 *1000 = 16 but floor of .00016666*1000 is 1.) -This change also updates the Flame tool to make it respect the delta multiplier
Forgot to add the FlameMain.java changes
wrap optimisation
Fixed the missingGlyph of FreeTypeBitmapFontData doesn't initialized.
Fix issue where Android wouldn't detect bluetooth
Put Batch calls in try-finally to allow recovery from thrown exceptions
fixed try-finally swallowing Exception after end
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Changed Constructor of Ellipse(Circle)
Replace HashMap with ObjectMap
 Renamed TextAreaScrollTest, it actually tests the ScrollPane behavior when it wraps a TextArea. Added to GdxTests.
Merge branch 'master' into scrollPaneTextArea
GLTexture - gltexparameter i instead of f
Handle input pointer id lookup fail not to be fatal on robovm
Fixes 5103. Items under a ScrollPane's fading scrollbar are not clickable even if the scrollbar is hidden (#5103)
#5127 Provide access to ALSource state on iOS
add support for emissive color and texture attributes
add missing import MaterialEmissiveTest
fix if only emissive texture is given
Fixed an issue that caused textfields to lose focus due to invisible windows when pressing tab. The findNextTextField method now searches up the parent hierarchy to determine if all parent actors and the actor itself are visible. If any of the parent actors or the actor itself are invisible, the findNextTextField method will ignore them.
Fixes #5191. Clear touch points on Android multi-touch ACTION_CANCEL event
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Prevent controller extension from swallowing keyboard events
Add focused to ButtonStyle
Remove whitespace on line wrap
Also remove whitespace at front of run - GlyphLayoutWrapTest
Remove possible whitespaces before adjusting xAdvances of wrapped line
Merge branch 'glyphLayoutTrimLines' of github.com:TCreutzenberg/libgdx into glyphLayoutTrimLines
Added jvm arg "startOnFirstThread" in the rust task for macOS
Reverse the requirements on fields in copyFields(), so superclass objects can be copied to subclass objects.
Update Intersector.java
Update Intersector.java
Update Intersector.java
Add SplitPane.isCursorOverHandle()
Vector2.java
Removed unnecessary Align. in Align
Fix PropertiesUtils space handling during output
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
Removed unnecessary Align. in Align
FileHandle#map compatibility for GWT
Removing uneeded imports * How did this even work
Added FileHandle#map(), can be used to memory map a file
GwtFileHandle#map() now throws unsupported
Slightly better exception message
Merge branch 'master' into filehandlemap
Merge remote-tracking branch 'upstream/master' into filehandlemap
Minor cleanups for map methods
Fixing writable file mapping. - RandomAccessFile allows us to actually obtain a rw FileChannel
Added contains to binary heap
GL20 texture filter types description
Add screen edges that override system gestures as iOS RoboVM configuration option
Overload AssetManager#isLoaded and #finishLoadingAsset to take AssetDescriptor as parameter
Updated a couple of mismatched version numbers
Update CHANGES
Merge branch 'master' into patch-2
fixes libgdx/libgdx#5254 WAV file read from jar buffer underflow
Methods renamed, comments updated - .nonEmpty() is .now hasItems() - Changed comments for methods according to review request
Removed all .hasItems() from custom collections
Solves issue #5025
Fixes #5059. Sounds randomly not being played on Android SDKs higher than 4.4
Freetype - Add generator constructor which can specify which faceIndex to use
CHANGES file changes for faceIndex api change
Update mappings for Xbox controller
Convenience methods for Align - test for horizontal/vertical alignment
Implemented pull request comments
Bit operators for comparison
Use StringBuilder instead of StringBuffer as it offers high performance in single thread context as it is generally the case.
-The ParticleController stores a frame time in its deltaTime member but this value is hard-coded at 1/60 regardless of framerate. This change adds an overload to the ParticleController's update() method to take the delta time. This allows the particles to adjust their time deltas for faster or flower framerate. The change also allows callers to cause particle effects to be played back at faster or slower speeds. -This change also adds overloads for update() and updateAndDraw() of the ParticleSystem class, each of which takes a frame time and adds an overload for the ParticleEffect update() method. -RegularEmitter previously only used the floor of the number of milliseconds that had passed since  the last update when calculating percent of the lifetime lived for each particle. For playback of  particle effects that were being played at .1 times the speed of the default speed, .00016666 ms were elapsed between calls to update(), which rounds down to 1 ms rather than 1.666 ms. This meant that the particle effect being played at .1 speed was actually being animated for 16 times as long rather than 10 times as long as the same effect played back at 1x speed (because the floor of .001666 *1000 = 16 but floor of .00016666*1000 is 1.) -This change also updates the Flame tool to make it respect the delta multiplier
Forgot to add the FlameMain.java changes
Improved controllers detection to avoid unrelated devices being detected as game controllers
wrap optimisation
Fixed the missingGlyph of FreeTypeBitmapFontData doesn't initialized.
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
fixed try-finally swallowing Exception after end
Fix issue where Android wouldn't detect bluetooth
Changed Constructor of Ellipse(Circle)
Replace HashMap with ObjectMap
 Renamed TextAreaScrollTest, it actually tests the ScrollPane behavior when it wraps a TextArea. Added to GdxTests.
Merge branch 'master' into scrollPaneTextArea
GLTexture - gltexparameter i instead of f
Handle input pointer id lookup fail not to be fatal on robovm
Fixes 5103. Items under a ScrollPane's fading scrollbar are not clickable even if the scrollbar is hidden (#5103)
add support for emissive color and texture attributes
add missing import MaterialEmissiveTest
fix if only emissive texture is given
Fixed an issue that caused textfields to lose focus due to invisible windows when pressing tab. The findNextTextField method now searches up the parent hierarchy to determine if all parent actors and the actor itself are visible. If any of the parent actors or the actor itself are invisible, the findNextTextField method will ignore them.
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Prevent controller extension from swallowing keyboard events
Add focused to ButtonStyle
Remove whitespace on line wrap
Also remove whitespace at front of run - GlyphLayoutWrapTest
Remove possible whitespaces before adjusting xAdvances of wrapped line
Merge branch 'glyphLayoutTrimLines' of github.com:TCreutzenberg/libgdx into glyphLayoutTrimLines
Reverse the requirements on fields in copyFields(), so superclass objects can be copied to subclass objects.
Added jvm arg "startOnFirstThread" in the rust task for macOS
Update Intersector.java
Update Intersector.java
Update Intersector.java
Vector2.java
Removed unnecessary Align. in Align
Fix PropertiesUtils space handling during output
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
Removed unnecessary Align. in Align
FileHandle#map compatibility for GWT
GwtFileHandle#map() now throws unsupported
Slightly better exception message
Merge branch 'master' into filehandlemap
Merge remote-tracking branch 'upstream/master' into filehandlemap
Merge branch 'filehandlemap' of PokeMMO/libgdx into filehandlemap
Minor cleanups for map methods
Fixing writable file mapping. - RandomAccessFile allows us to actually obtain a rw FileChannel
Added contains to binary heap
Fixed spacing issue
GL20 texture filter types description
Overload AssetManager#isLoaded and #finishLoadingAsset to take AssetDescriptor as parameter
Updated a couple of mismatched version numbers
Update CHANGES
Merge branch 'master' into patch-2
fixes libgdx/libgdx#5254 WAV file read from jar buffer underflow
Added .isEmpty() and .nonEmpty() methods to collections
Methods renamed, comments updated - .nonEmpty() is .now hasItems() - Changed comments for methods according to review request
Removed all .hasItems() from custom collections
Solves issue #5025
Freetype - Add generator constructor which can specify which faceIndex to use
gdx-controllers: allow specifing custom controllers
Update mappings for Xbox controller
Implemented pull request comments
Bit operators for comparison
Use StringBuilder instead of StringBuffer as it offers high performance in single thread context as it is generally the case.
Add focusWindow() to Lwjgl3Window
-The ParticleController stores a frame time in its deltaTime member but this value is hard-coded at 1/60 regardless of framerate. This change adds an overload to the ParticleController's update() method to take the delta time. This allows the particles to adjust their time deltas for faster or flower framerate. The change also allows callers to cause particle effects to be played back at faster or slower speeds. -This change also adds overloads for update() and updateAndDraw() of the ParticleSystem class, each of which takes a frame time and adds an overload for the ParticleEffect update() method. -RegularEmitter previously only used the floor of the number of milliseconds that had passed since  the last update when calculating percent of the lifetime lived for each particle. For playback of  particle effects that were being played at .1 times the speed of the default speed, .00016666 ms were elapsed between calls to update(), which rounds down to 1 ms rather than 1.666 ms. This meant that the particle effect being played at .1 speed was actually being animated for 16 times as long rather than 10 times as long as the same effect played back at 1x speed (because the floor of .001666 *1000 = 16 but floor of .00016666*1000 is 1.) -This change also updates the Flame tool to make it respect the delta multiplier
Forgot to add the FlameMain.java changes
Improved controllers detection to avoid unrelated devices being detected as game controllers
wrap optimisation
Fixed the missingGlyph of FreeTypeBitmapFontData doesn't initialized.
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
fixed try-finally swallowing Exception after end
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Changed Constructor of Ellipse(Circle)
Replace HashMap with ObjectMap
 Renamed TextAreaScrollTest, it actually tests the ScrollPane behavior when it wraps a TextArea. Added to GdxTests.
Merge branch 'master' into scrollPaneTextArea
GLTexture - gltexparameter i instead of f
Fix “incomplete draw buffer” error when creating FrameBufferCubemap on some systems (#4409)
Fix use of cube map alias in render attributes and test shader. Fix various bugs in FrameBufferCubemapTest.
g3d Model additional attributes
Better ignore un-needed files for iOS platform
Merge branch 'update_ios_gitignore'
Add kotlin source for kotlin project instead of java source files in gdx-setup
Fix ios-moe of cannot find class in DexList
Refactor specific resource for Java and Kotlin out
Fixed issue#3333 music and sound in classpath not load on Android.
continue https://github.com/libgdx/libgdx/pull/4636
update to bullet 2.87 https://github.com/bulletphysics/bullet3/releases/tag/2.87
fix unknown type name 'ptrdiff_t'; did you mean 'std::ptrdiff_t'
stop messing with my readme
Preserve individual OIS controllers listeners on lost window handle
jnigen can have methods with Classes and Throwables
Merge branch 'master' of https://github.com/libgdx/libgdx into jnigenclasses
Fix BitmapFont parsing
Update BitmapFont.java
Handle input pointer id lookup fail not to be fatal on robovm
Fixes 5103. Items under a ScrollPane's fading scrollbar are not clickable even if the scrollbar is hidden (#5103)
#5127 Provide access to ALSource state on iOS
add support for emissive color and texture attributes
fix if only emissive texture is given
Fixed an issue that caused textfields to lose focus due to invisible windows when pressing tab. The findNextTextField method now searches up the parent hierarchy to determine if all parent actors and the actor itself are visible. If any of the parent actors or the actor itself are invisible, the findNextTextField method will ignore them.
Fixes #5191. Clear touch points on Android multi-touch ACTION_CANCEL event
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Prevent controller extension from swallowing keyboard events
Add focused to ButtonStyle
Remove whitespace on line wrap
Also remove whitespace at front of run - GlyphLayoutWrapTest
Remove possible whitespaces before adjusting xAdvances of wrapped line
Merge branch 'glyphLayoutTrimLines' of github.com:TCreutzenberg/libgdx into glyphLayoutTrimLines
Added jvm arg "startOnFirstThread" in the rust task for macOS
Reverse the requirements on fields in copyFields(), so superclass objects can be copied to subclass objects.
Update Intersector.java
Update Intersector.java
Update Intersector.java
Update Intersector.java
Add SplitPane.isCursorOverHandle()
Vector2.java
Removed unnecessary Align. in Align
Fix PropertiesUtils space handling during output
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
Removed unnecessary Align. in Align
FileHandle#map compatibility for GWT
Added FileHandle#map(), can be used to memory map a file
GwtFileHandle#map() now throws unsupported
Slightly better exception message
Merge branch 'master' into filehandlemap
Merge remote-tracking branch 'upstream/master' into filehandlemap
Merge branch 'filehandlemap' of PokeMMO/libgdx into filehandlemap
Minor cleanups for map methods
Fixing writable file mapping. - RandomAccessFile allows us to actually obtain a rw FileChannel
Added contains to binary heap
Fixed spacing issue
GL20 texture filter types description
Add screen edges that override system gestures as iOS RoboVM configuration option
Overload AssetManager#isLoaded and #finishLoadingAsset to take AssetDescriptor as parameter
Updated a couple of mismatched version numbers
Update CHANGES
Added .isEmpty() and .nonEmpty() methods to collections
Methods renamed, comments updated - .nonEmpty() is .now hasItems() - Changed comments for methods according to review request
Removed all .hasItems() from custom collections
Solves issue #5025
Fixes #5059. Sounds randomly not being played on Android SDKs higher than 4.4
Freetype - Add generator constructor which can specify which faceIndex to use
CHANGES file changes for faceIndex api change
gdx-controllers: allow specifing custom controllers
Update mappings for Xbox controller
Implemented pull request comments
Bit operators for comparison
Use StringBuilder instead of StringBuffer as it offers high performance in single thread context as it is generally the case.
Add focusWindow() to Lwjgl3Window
-The ParticleController stores a frame time in its deltaTime member but this value is hard-coded at 1/60 regardless of framerate. This change adds an overload to the ParticleController's update() method to take the delta time. This allows the particles to adjust their time deltas for faster or flower framerate. The change also allows callers to cause particle effects to be played back at faster or slower speeds. -This change also adds overloads for update() and updateAndDraw() of the ParticleSystem class, each of which takes a frame time and adds an overload for the ParticleEffect update() method. -RegularEmitter previously only used the floor of the number of milliseconds that had passed since  the last update when calculating percent of the lifetime lived for each particle. For playback of  particle effects that were being played at .1 times the speed of the default speed, .00016666 ms were elapsed between calls to update(), which rounds down to 1 ms rather than 1.666 ms. This meant that the particle effect being played at .1 speed was actually being animated for 16 times as long rather than 10 times as long as the same effect played back at 1x speed (because the floor of .001666 *1000 = 16 but floor of .00016666*1000 is 1.) -This change also updates the Flame tool to make it respect the delta multiplier
Forgot to add the FlameMain.java changes
Improved controllers detection to avoid unrelated devices being detected as game controllers
wrap optimisation
Fixed the missingGlyph of FreeTypeBitmapFontData doesn't initialized.
Fix issue where Android wouldn't detect bluetooth
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
fixed try-finally swallowing Exception after end
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Changed Constructor of Ellipse(Circle)
Replace HashMap with ObjectMap
 Renamed TextAreaScrollTest, it actually tests the ScrollPane behavior when it wraps a TextArea. Added to GdxTests.
Merge branch 'master' into scrollPaneTextArea
GLTexture - gltexparameter i instead of f
Fixed a typo (knob height used instead of width)
upstream changes
upstream changes
Code formatting (curly braces) and extra constructor.
Fix #4330
stop messing with my readme
Fixes 5103. Items under a ScrollPane's fading scrollbar are not clickable even if the scrollbar is hidden (#5103)
#5127 Provide access to ALSource state on iOS
add support for emissive color and texture attributes
add missing import MaterialEmissiveTest
fix if only emissive texture is given
Fixes #5191. Clear touch points on Android multi-touch ACTION_CANCEL event
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Prevent controller extension from swallowing keyboard events
Add focused to ButtonStyle
Remove whitespace on line wrap
Also remove whitespace at front of run - GlyphLayoutWrapTest
Remove possible whitespaces before adjusting xAdvances of wrapped line
Merge branch 'glyphLayoutTrimLines' of github.com:TCreutzenberg/libgdx into glyphLayoutTrimLines
Added jvm arg "startOnFirstThread" in the rust task for macOS
Reverse the requirements on fields in copyFields(), so superclass objects can be copied to subclass objects.
Update Intersector.java
Update Intersector.java
Update Intersector.java
Update Intersector.java
Add SplitPane.isCursorOverHandle()
Vector2.java
Removed unnecessary Align. in Align
Fix PropertiesUtils space handling during output
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
Removed unnecessary Align. in Align
FileHandle#map compatibility for GWT
Removing uneeded imports * How did this even work
Added FileHandle#map(), can be used to memory map a file
GwtFileHandle#map() now throws unsupported
Slightly better exception message
Merge branch 'master' into filehandlemap
Merge remote-tracking branch 'upstream/master' into filehandlemap
Merge branch 'filehandlemap' of PokeMMO/libgdx into filehandlemap
Minor cleanups for map methods
Fixing writable file mapping. - RandomAccessFile allows us to actually obtain a rw FileChannel
Added contains to binary heap
Fixed spacing issue
GL20 texture filter types description
Add screen edges that override system gestures as iOS RoboVM configuration option
stop messing with my readme
Overload AssetManager#isLoaded and #finishLoadingAsset to take AssetDescriptor as parameter
Updated a couple of mismatched version numbers
Update CHANGES
Merge branch 'master' into patch-2
fixes libgdx/libgdx#5254 WAV file read from jar buffer underflow
Added .isEmpty() and .nonEmpty() methods to collections
Methods renamed, comments updated - .nonEmpty() is .now hasItems() - Changed comments for methods according to review request
Removed all .hasItems() from custom collections
Solves issue #5025
Fixes #5059. Sounds randomly not being played on Android SDKs higher than 4.4
Freetype - Add generator constructor which can specify which faceIndex to use
CHANGES file changes for faceIndex api change
gdx-controllers: allow specifing custom controllers
Update mappings for Xbox controller
Implemented pull request comments
Bit operators for comparison
Use StringBuilder instead of StringBuffer as it offers high performance in single thread context as it is generally the case.
Add focusWindow() to Lwjgl3Window
-The ParticleController stores a frame time in its deltaTime member but this value is hard-coded at 1/60 regardless of framerate. This change adds an overload to the ParticleController's update() method to take the delta time. This allows the particles to adjust their time deltas for faster or flower framerate. The change also allows callers to cause particle effects to be played back at faster or slower speeds. -This change also adds overloads for update() and updateAndDraw() of the ParticleSystem class, each of which takes a frame time and adds an overload for the ParticleEffect update() method. -RegularEmitter previously only used the floor of the number of milliseconds that had passed since  the last update when calculating percent of the lifetime lived for each particle. For playback of  particle effects that were being played at .1 times the speed of the default speed, .00016666 ms were elapsed between calls to update(), which rounds down to 1 ms rather than 1.666 ms. This meant that the particle effect being played at .1 speed was actually being animated for 16 times as long rather than 10 times as long as the same effect played back at 1x speed (because the floor of .001666 *1000 = 16 but floor of .00016666*1000 is 1.) -This change also updates the Flame tool to make it respect the delta multiplier
Forgot to add the FlameMain.java changes
Improved controllers detection to avoid unrelated devices being detected as game controllers
Fixed the missingGlyph of FreeTypeBitmapFontData doesn't initialized.
Fix issue where Android wouldn't detect bluetooth
Update to latest (#1)
fixed try-finally swallowing Exception after end
Fix issue where Android wouldn't detect bluetooth
Replace HashMap with ObjectMap
 Renamed TextAreaScrollTest, it actually tests the ScrollPane behavior when it wraps a TextArea. Added to GdxTests.
Merge branch 'master' into scrollPaneTextArea
GLTexture - gltexparameter i instead of f
Attempt for addressing issue #4808
Made BoundingBox compatible with 2D
Replaced length comparison with a isZero call
Fixed the dim.isZero check
Allows a zero-volume BB to be considered valid
Updated the comment to reflect the changes
Handle input pointer id lookup fail not to be fatal on robovm
Fixes 5103. Items under a ScrollPane's fading scrollbar are not clickable even if the scrollbar is hidden (#5103)
#5127 Provide access to ALSource state on iOS
add missing import MaterialEmissiveTest
fix if only emissive texture is given
Fixed an issue that caused textfields to lose focus due to invisible windows when pressing tab. The findNextTextField method now searches up the parent hierarchy to determine if all parent actors and the actor itself are visible. If any of the parent actors or the actor itself are invisible, the findNextTextField method will ignore them.
Fixes #5191. Clear touch points on Android multi-touch ACTION_CANCEL event
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Prevent controller extension from swallowing keyboard events
Add focused to ButtonStyle
Remove whitespace on line wrap
Also remove whitespace at front of run - GlyphLayoutWrapTest
Remove possible whitespaces before adjusting xAdvances of wrapped line
Merge branch 'glyphLayoutTrimLines' of github.com:TCreutzenberg/libgdx into glyphLayoutTrimLines
Added jvm arg "startOnFirstThread" in the rust task for macOS
Reverse the requirements on fields in copyFields(), so superclass objects can be copied to subclass objects.
Update Intersector.java
Update Intersector.java
Add SplitPane.isCursorOverHandle()
Vector2.java
Removed unnecessary Align. in Align
Fix PropertiesUtils space handling during output
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
Removed unnecessary Align. in Align
FileHandle#map compatibility for GWT
Removing uneeded imports * How did this even work
Added FileHandle#map(), can be used to memory map a file
GwtFileHandle#map() now throws unsupported
Slightly better exception message
Merge branch 'master' into filehandlemap
Merge branch 'filehandlemap' of PokeMMO/libgdx into filehandlemap
Minor cleanups for map methods
Fixing writable file mapping. - RandomAccessFile allows us to actually obtain a rw FileChannel
Added contains to binary heap
Fixed spacing issue
GL20 texture filter types description
Add screen edges that override system gestures as iOS RoboVM configuration option
Overload AssetManager#isLoaded and #finishLoadingAsset to take AssetDescriptor as parameter
Updated a couple of mismatched version numbers
Merge branch 'master' into patch-2
fixes libgdx/libgdx#5254 WAV file read from jar buffer underflow
Added .isEmpty() and .nonEmpty() methods to collections
Methods renamed, comments updated - .nonEmpty() is .now hasItems() - Changed comments for methods according to review request
Removed all .hasItems() from custom collections
Solves issue #5025
Fixes #5059. Sounds randomly not being played on Android SDKs higher than 4.4
Freetype - Add generator constructor which can specify which faceIndex to use
CHANGES file changes for faceIndex api change
gdx-controllers: allow specifing custom controllers
Update mappings for Xbox controller
Convenience methods for Align - test for horizontal/vertical alignment
Implemented pull request comments
Bit operators for comparison
Use StringBuilder instead of StringBuffer as it offers high performance in single thread context as it is generally the case.
Add focusWindow() to Lwjgl3Window
-The ParticleController stores a frame time in its deltaTime member but this value is hard-coded at 1/60 regardless of framerate. This change adds an overload to the ParticleController's update() method to take the delta time. This allows the particles to adjust their time deltas for faster or flower framerate. The change also allows callers to cause particle effects to be played back at faster or slower speeds. -This change also adds overloads for update() and updateAndDraw() of the ParticleSystem class, each of which takes a frame time and adds an overload for the ParticleEffect update() method. -RegularEmitter previously only used the floor of the number of milliseconds that had passed since  the last update when calculating percent of the lifetime lived for each particle. For playback of  particle effects that were being played at .1 times the speed of the default speed, .00016666 ms were elapsed between calls to update(), which rounds down to 1 ms rather than 1.666 ms. This meant that the particle effect being played at .1 speed was actually being animated for 16 times as long rather than 10 times as long as the same effect played back at 1x speed (because the floor of .001666 *1000 = 16 but floor of .00016666*1000 is 1.) -This change also updates the Flame tool to make it respect the delta multiplier
Forgot to add the FlameMain.java changes
Improved controllers detection to avoid unrelated devices being detected as game controllers
Fixed the missingGlyph of FreeTypeBitmapFontData doesn't initialized.
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
fixed try-finally swallowing Exception after end
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Changed Constructor of Ellipse(Circle)
 Renamed TextAreaScrollTest, it actually tests the ScrollPane behavior when it wraps a TextArea. Added to GdxTests.
Merge branch 'master' into scrollPaneTextArea
Change how retina resolutions are handled
Update Glyph.java
Normalized BMFont padding order in all cases to agree with the Angelfire specification.
Moving changes to branch.
Merge branch 'master' of https://github.com/bryanwagner/libgdx
Handle input pointer id lookup fail not to be fatal on robovm
Fixes 5103. Items under a ScrollPane's fading scrollbar are not clickable even if the scrollbar is hidden (#5103)
#5127 Provide access to ALSource state on iOS
add support for emissive color and texture attributes
add missing import MaterialEmissiveTest
fix if only emissive texture is given
Fixed an issue that caused textfields to lose focus due to invisible windows when pressing tab. The findNextTextField method now searches up the parent hierarchy to determine if all parent actors and the actor itself are visible. If any of the parent actors or the actor itself are invisible, the findNextTextField method will ignore them.
Fixes #5191. Clear touch points on Android multi-touch ACTION_CANCEL event
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Add focused to ButtonStyle
Remove whitespace on line wrap
Also remove whitespace at front of run - GlyphLayoutWrapTest
Remove possible whitespaces before adjusting xAdvances of wrapped line
Merge branch 'glyphLayoutTrimLines' of github.com:TCreutzenberg/libgdx into glyphLayoutTrimLines
Added jvm arg "startOnFirstThread" in the rust task for macOS
Reverse the requirements on fields in copyFields(), so superclass objects can be copied to subclass objects.
Update Intersector.java
Update Intersector.java
Update Intersector.java
Update Intersector.java
Add SplitPane.isCursorOverHandle()
Vector2.java
Removed unnecessary Align. in Align
Fix PropertiesUtils space handling during output
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
Removed unnecessary Align. in Align
FileHandle#map compatibility for GWT
Removing uneeded imports * How did this even work
Added FileHandle#map(), can be used to memory map a file
GwtFileHandle#map() now throws unsupported
Slightly better exception message
Merge branch 'master' into filehandlemap
Merge remote-tracking branch 'upstream/master' into filehandlemap
Merge branch 'filehandlemap' of PokeMMO/libgdx into filehandlemap
Minor cleanups for map methods
Fixing writable file mapping. - RandomAccessFile allows us to actually obtain a rw FileChannel
Added contains to binary heap
Fixed spacing issue
GL20 texture filter types description
stop messing with my readme
Overload AssetManager#isLoaded and #finishLoadingAsset to take AssetDescriptor as parameter
Updated a couple of mismatched version numbers
Update CHANGES
Merge branch 'master' into patch-2
fixes libgdx/libgdx#5254 WAV file read from jar buffer underflow
Added .isEmpty() and .nonEmpty() methods to collections
Methods renamed, comments updated - .nonEmpty() is .now hasItems() - Changed comments for methods according to review request
Removed all .hasItems() from custom collections
Solves issue #5025
Fixes #5059. Sounds randomly not being played on Android SDKs higher than 4.4
Freetype - Add generator constructor which can specify which faceIndex to use
CHANGES file changes for faceIndex api change
gdx-controllers: allow specifing custom controllers
Update mappings for Xbox controller
Convenience methods for Align - test for horizontal/vertical alignment
Implemented pull request comments
Bit operators for comparison
Use StringBuilder instead of StringBuffer as it offers high performance in single thread context as it is generally the case.
Forgot to add the FlameMain.java changes
Improved controllers detection to avoid unrelated devices being detected as game controllers
wrap optimisation
Fixed the missingGlyph of FreeTypeBitmapFontData doesn't initialized.
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
fixed try-finally swallowing Exception after end
Converted CR/LF to LF
Changed Constructor of Ellipse(Circle)
Replace HashMap with ObjectMap
 Renamed TextAreaScrollTest, it actually tests the ScrollPane behavior when it wraps a TextArea. Added to GdxTests.
Merge branch 'master' into scrollPaneTextArea
GLTexture - gltexparameter i instead of f
First implementation of repeatable polygon sprite
added some comments, and removed constructor
removed gridmap
null check for empty grid regions
added  elements to the GWT module
Issue 3698: Fixed wrong Y property in case of Tile Object in TMX map loader for Tiled 0.14.2
Merge branch 'master' into bugfix/3698-Tile-Object-Y-Property
Fixed #4192 and #4425 . Labels with color markup and wrap
Merge remote-tracking branch 'refs/remotes/libgdx/master'
Fixes Labels with color markup and wrap (#4192)
Merge remote-tracking branch 'refs/remotes/origin/master' into libgdx/master
Revert "Merge remote-tracking branch 'refs/remotes/origin/master' into libgdx/master"
Merge remote-tracking branch 'refs/remotes/origin/master' into libgdx/master
Mesh needs to check index array, resolves #4697
Add getTextureRegions method to PixmapPacker, and modify FreeTypeFontGenerator to use it.
Undo the optimization of imports that just rearranged them.
Update CHANGES file.
Add getTextureRegions method to PixmapPacker, and modify FreeTypeFontGenerator to use it.
Undo the optimization of imports that just rearranged them.
Update CHANGES file.
Add getTextureRegions method to PixmapPacker, and modify FreeTypeFontGenerator to use it.
Undo the optimization of imports that just rearranged them.
Update CHANGES file.
Add getTextureRegions method to PixmapPacker, and modify FreeTypeFontGenerator to use it.
Undo the optimization of imports that just rearranged them.
Update CHANGES file.
Make the new API PixmapPacker.updateTextureRegions
Merge branch 'libgdx-issue2980' of github.com:RobRendell/libgdx into libgdx-issue2980
implementation of texture atlas and batch which use 2D Array texture
java 6
fix code style, remove java 1.7+ API usage
Merge commit '894f4917db5337defdf0d57625dfe99c85a5724c' into texture-array-support
add missing license headers
necessary changes for running the test
add test which uses big multi page atlas and texture array
Fixes Label not using BitmapFont scale (caused by #4233)
fix libgdx/libgdx#4706
Move Box2d to an extension
improve gitignore template fix libgdx/libgdx#4560
format source with eclipse formatter
Merge remote-tracking branch 'official/master' into fix/music-loop-position
Image widget was affecting subsequent draws with its color
stop messing with my readme
HTML Launcher Template: provide example code for resizable HTML app #4762
Clean up performance in VBOWithVAO and supply performance test
Handle input pointer id lookup fail not to be fatal on robovm
Fixes 5103. Items under a ScrollPane's fading scrollbar are not clickable even if the scrollbar is hidden (#5103)
#5127 Provide access to ALSource state on iOS
add support for emissive color and texture attributes
add missing import MaterialEmissiveTest
fix if only emissive texture is given
Fixes #5191. Clear touch points on Android multi-touch ACTION_CANCEL event
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Prevent controller extension from swallowing keyboard events
Add focused to ButtonStyle
Remove whitespace on line wrap
Also remove whitespace at front of run - GlyphLayoutWrapTest
Remove possible whitespaces before adjusting xAdvances of wrapped line
Reverse the requirements on fields in copyFields(), so superclass objects can be copied to subclass objects.
Update Intersector.java
Update Intersector.java
Update Intersector.java
Update Intersector.java
Vector2.java
Removed unnecessary Align. in Align
Fix PropertiesUtils space handling during output
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Put Batch calls in try-finally to allow recovery from thrown exceptions
Removed unnecessary Align. in Align
FileHandle#map compatibility for GWT
Removing uneeded imports * How did this even work
GwtFileHandle#map() now throws unsupported
Slightly better exception message
Merge branch 'master' into filehandlemap
Merge remote-tracking branch 'upstream/master' into filehandlemap
Merge branch 'filehandlemap' of PokeMMO/libgdx into filehandlemap
Minor cleanups for map methods
Fixing writable file mapping. - RandomAccessFile allows us to actually obtain a rw FileChannel
Added contains to binary heap
Fixed spacing issue
GL20 texture filter types description
Overload AssetManager#isLoaded and #finishLoadingAsset to take AssetDescriptor as parameter
Updated a couple of mismatched version numbers
Update CHANGES
Merge branch 'master' into patch-2
fixes libgdx/libgdx#5254 WAV file read from jar buffer underflow
Added .isEmpty() and .nonEmpty() methods to collections
Methods renamed, comments updated - .nonEmpty() is .now hasItems() - Changed comments for methods according to review request
Removed all .hasItems() from custom collections
Solves issue #5025
Fixes #5059. Sounds randomly not being played on Android SDKs higher than 4.4
Freetype - Add generator constructor which can specify which faceIndex to use
CHANGES file changes for faceIndex api change
Update mappings for Xbox controller
Convenience methods for Align - test for horizontal/vertical alignment
Implemented pull request comments
Bit operators for comparison
Use StringBuilder instead of StringBuffer as it offers high performance in single thread context as it is generally the case.
-The ParticleController stores a frame time in its deltaTime member but this value is hard-coded at 1/60 regardless of framerate. This change adds an overload to the ParticleController's update() method to take the delta time. This allows the particles to adjust their time deltas for faster or flower framerate. The change also allows callers to cause particle effects to be played back at faster or slower speeds. -This change also adds overloads for update() and updateAndDraw() of the ParticleSystem class, each of which takes a frame time and adds an overload for the ParticleEffect update() method. -RegularEmitter previously only used the floor of the number of milliseconds that had passed since  the last update when calculating percent of the lifetime lived for each particle. For playback of  particle effects that were being played at .1 times the speed of the default speed, .00016666 ms were elapsed between calls to update(), which rounds down to 1 ms rather than 1.666 ms. This meant that the particle effect being played at .1 speed was actually being animated for 16 times as long rather than 10 times as long as the same effect played back at 1x speed (because the floor of .001666 *1000 = 16 but floor of .00016666*1000 is 1.) -This change also updates the Flame tool to make it respect the delta multiplier
Forgot to add the FlameMain.java changes
Improved controllers detection to avoid unrelated devices being detected as game controllers
Fixed the missingGlyph of FreeTypeBitmapFontData doesn't initialized.
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
Changed Constructor of Ellipse(Circle)
Replace HashMap with ObjectMap
 Renamed TextAreaScrollTest, it actually tests the ScrollPane behavior when it wraps a TextArea. Added to GdxTests.
Merge branch 'master' into scrollPaneTextArea
GLTexture - gltexparameter i instead of f
Fix #4431
Refactor Clipboard for Android, resolves #3974
Fix #4446 (ProgressBar knobAfter)
Update Table.java to correctly use Value.get()
Fixes ScrollPane and non continuous rendefing conflicts, see #2582 .
Avoid type-unaware Animation
Added backing type test to AnimationTest
Generic 2D Animation
Add missing iOS devices (v2, minimum change)
Handle input pointer id lookup fail not to be fatal on robovm
Fixes 5103. Items under a ScrollPane's fading scrollbar are not clickable even if the scrollbar is hidden (#5103)
#5127 Provide access to ALSource state on iOS
add support for emissive color and texture attributes
add missing import MaterialEmissiveTest
fix if only emissive texture is given
Fixed an issue that caused textfields to lose focus due to invisible windows when pressing tab. The findNextTextField method now searches up the parent hierarchy to determine if all parent actors and the actor itself are visible. If any of the parent actors or the actor itself are invisible, the findNextTextField method will ignore them.
Fixes #5191. Clear touch points on Android multi-touch ACTION_CANCEL event
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Add focused to ButtonStyle
Also remove whitespace at front of run - GlyphLayoutWrapTest
Remove possible whitespaces before adjusting xAdvances of wrapped line
Merge branch 'glyphLayoutTrimLines' of github.com:TCreutzenberg/libgdx into glyphLayoutTrimLines
Added jvm arg "startOnFirstThread" in the rust task for macOS
Reverse the requirements on fields in copyFields(), so superclass objects can be copied to subclass objects.
Update Intersector.java
Update Intersector.java
Update Intersector.java
Update Intersector.java
Vector2.java
Removed unnecessary Align. in Align
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
Removed unnecessary Align. in Align
Removing uneeded imports * How did this even work
Added FileHandle#map(), can be used to memory map a file
GwtFileHandle#map() now throws unsupported
Slightly better exception message
Merge branch 'master' into filehandlemap
Merge remote-tracking branch 'upstream/master' into filehandlemap
Merge branch 'filehandlemap' of PokeMMO/libgdx into filehandlemap
Minor cleanups for map methods
Fixing writable file mapping. - RandomAccessFile allows us to actually obtain a rw FileChannel
Added contains to binary heap
Fixed spacing issue
GL20 texture filter types description
Overload AssetManager#isLoaded and #finishLoadingAsset to take AssetDescriptor as parameter
Updated a couple of mismatched version numbers
Update CHANGES
Added .isEmpty() and .nonEmpty() methods to collections
Removed all .hasItems() from custom collections
Solves issue #5025
Fixes #5059. Sounds randomly not being played on Android SDKs higher than 4.4
Freetype - Add generator constructor which can specify which faceIndex to use
CHANGES file changes for faceIndex api change
gdx-controllers: allow specifing custom controllers
Update mappings for Xbox controller
Convenience methods for Align - test for horizontal/vertical alignment
Implemented pull request comments
Bit operators for comparison
Add focusWindow() to Lwjgl3Window
-The ParticleController stores a frame time in its deltaTime member but this value is hard-coded at 1/60 regardless of framerate. This change adds an overload to the ParticleController's update() method to take the delta time. This allows the particles to adjust their time deltas for faster or flower framerate. The change also allows callers to cause particle effects to be played back at faster or slower speeds. -This change also adds overloads for update() and updateAndDraw() of the ParticleSystem class, each of which takes a frame time and adds an overload for the ParticleEffect update() method. -RegularEmitter previously only used the floor of the number of milliseconds that had passed since  the last update when calculating percent of the lifetime lived for each particle. For playback of  particle effects that were being played at .1 times the speed of the default speed, .00016666 ms were elapsed between calls to update(), which rounds down to 1 ms rather than 1.666 ms. This meant that the particle effect being played at .1 speed was actually being animated for 16 times as long rather than 10 times as long as the same effect played back at 1x speed (because the floor of .001666 *1000 = 16 but floor of .00016666*1000 is 1.) -This change also updates the Flame tool to make it respect the delta multiplier
Forgot to add the FlameMain.java changes
Improved controllers detection to avoid unrelated devices being detected as game controllers
wrap optimisation
Fixed the missingGlyph of FreeTypeBitmapFontData doesn't initialized.
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
fixed try-finally swallowing Exception after end
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Changed Constructor of Ellipse(Circle)
 Renamed TextAreaScrollTest, it actually tests the ScrollPane behavior when it wraps a TextArea. Added to GdxTests.
GLTexture - gltexparameter i instead of f
Fixed #4192 and #4425 . Labels with color markup and wrap
Merge remote-tracking branch 'refs/remotes/libgdx/master'
Fixes Labels with color markup and wrap (#4192)
Merge remote-tracking branch 'refs/remotes/origin/master' into libgdx/master
Revert "Merge remote-tracking branch 'refs/remotes/origin/master' into libgdx/master"
Merge remote-tracking branch 'refs/remotes/origin/master' into libgdx/master
Update Sound Manager 2
Allow ImageTextButton to have image and label on separate rows
stop messing with my readme
Fixed windowed to fullscreen video mode changes. (#4141, #4143)
Added option to install GL debug message callback.
Fixes Label not using BitmapFont scale (caused by #4233)
Refactor GLProfiler for use in OOP to suit better with Lwjgl3. Add setGL20 and setGL30 methods to the Graphics interface. Fix GLES 3.0 support methods on ios
Merge branch 'master' of github.com:libgdx/libgdx
Add handling of <objectgroup> in <tiles> in the com.badlogic.gdx.maps.tiled package
fix the Y coordinate being flipped wrongly in tile's objectgroup
add a note in CHANGES
Handle input pointer id lookup fail not to be fatal on robovm
Fixes 5103. Items under a ScrollPane's fading scrollbar are not clickable even if the scrollbar is hidden (#5103)
#5127 Provide access to ALSource state on iOS
add missing import MaterialEmissiveTest
fix if only emissive texture is given
Fixed an issue that caused textfields to lose focus due to invisible windows when pressing tab. The findNextTextField method now searches up the parent hierarchy to determine if all parent actors and the actor itself are visible. If any of the parent actors or the actor itself are invisible, the findNextTextField method will ignore them.
Fixes #5191. Clear touch points on Android multi-touch ACTION_CANCEL event
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Prevent controller extension from swallowing keyboard events
Add focused to ButtonStyle
Remove whitespace on line wrap
Also remove whitespace at front of run - GlyphLayoutWrapTest
Remove possible whitespaces before adjusting xAdvances of wrapped line
Merge branch 'glyphLayoutTrimLines' of github.com:TCreutzenberg/libgdx into glyphLayoutTrimLines
Reverse the requirements on fields in copyFields(), so superclass objects can be copied to subclass objects.
Update Intersector.java
Update Intersector.java
Update Intersector.java
Add SplitPane.isCursorOverHandle()
Vector2.java
Removed unnecessary Align. in Align
Fix PropertiesUtils space handling during output
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
Removed unnecessary Align. in Align
FileHandle#map compatibility for GWT
Added FileHandle#map(), can be used to memory map a file
GwtFileHandle#map() now throws unsupported
Merge branch 'master' into filehandlemap
Merge remote-tracking branch 'upstream/master' into filehandlemap
Merge branch 'filehandlemap' of PokeMMO/libgdx into filehandlemap
Minor cleanups for map methods
Fixing writable file mapping. - RandomAccessFile allows us to actually obtain a rw FileChannel
Added contains to binary heap
Fixed spacing issue
GL20 texture filter types description
Add screen edges that override system gestures as iOS RoboVM configuration option
Overload AssetManager#isLoaded and #finishLoadingAsset to take AssetDescriptor as parameter
Updated a couple of mismatched version numbers
Update CHANGES
Merge branch 'master' into patch-2
fixes libgdx/libgdx#5254 WAV file read from jar buffer underflow
Methods renamed, comments updated - .nonEmpty() is .now hasItems() - Changed comments for methods according to review request
Removed all .hasItems() from custom collections
Fixes #5059. Sounds randomly not being played on Android SDKs higher than 4.4
Freetype - Add generator constructor which can specify which faceIndex to use
CHANGES file changes for faceIndex api change
gdx-controllers: allow specifing custom controllers
Update mappings for Xbox controller
Convenience methods for Align - test for horizontal/vertical alignment
Implemented pull request comments
Bit operators for comparison
Use StringBuilder instead of StringBuffer as it offers high performance in single thread context as it is generally the case.
Add focusWindow() to Lwjgl3Window
-The ParticleController stores a frame time in its deltaTime member but this value is hard-coded at 1/60 regardless of framerate. This change adds an overload to the ParticleController's update() method to take the delta time. This allows the particles to adjust their time deltas for faster or flower framerate. The change also allows callers to cause particle effects to be played back at faster or slower speeds. -This change also adds overloads for update() and updateAndDraw() of the ParticleSystem class, each of which takes a frame time and adds an overload for the ParticleEffect update() method. -RegularEmitter previously only used the floor of the number of milliseconds that had passed since  the last update when calculating percent of the lifetime lived for each particle. For playback of  particle effects that were being played at .1 times the speed of the default speed, .00016666 ms were elapsed between calls to update(), which rounds down to 1 ms rather than 1.666 ms. This meant that the particle effect being played at .1 speed was actually being animated for 16 times as long rather than 10 times as long as the same effect played back at 1x speed (because the floor of .001666 *1000 = 16 but floor of .00016666*1000 is 1.) -This change also updates the Flame tool to make it respect the delta multiplier
Forgot to add the FlameMain.java changes
Improved controllers detection to avoid unrelated devices being detected as game controllers
wrap optimisation
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
fixed try-finally swallowing Exception after end
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Changed Constructor of Ellipse(Circle)
 Renamed TextAreaScrollTest, it actually tests the ScrollPane behavior when it wraps a TextArea. Added to GdxTests.
Merge branch 'master' into scrollPaneTextArea
GLTexture - gltexparameter i instead of f
Fixed glViewport not updated on resize (#4142)
Fixed windowed to fullscreen video mode changes. (#4141, #4143)
Added option to install GL debug message callback.
Fix #4281
Update .gitignore fix #4016
Update LWJGL3 to snapshot version #87
Fix #4123
Fix #4264
Added setVolume(volume) to Sound
fix #5316 lwjgl music crash seeking to end
Add pixmap.getPixels() method, clean tests
Fix #4934: Add TexturePacker interpolation option to settings
Document texturepacker settings change in CHANGES
Merge branch 'master' into master
Merge branch 'master' into master
Add 32bit ARM armel & armhf GNU/Linux support
Add JDK 8 ABI detection to ARM GNU/Linux jnigen shared library loading.
Merge remote-tracking branch 'libgdx/master' into HEAD
fix #5319 click on empty line in text area
Properly add what PR#3903 tried fixing, also see #3997. Added test
Fixes #4164, adds FilterableVehicleRaycaster
LwjglCanvas disposes listener before OpenGL context get killed; fixes libgdx/libgdx#4203
stop messing with my readme
Added .isEmpty() and .nonEmpty() methods to collections
Methods renamed, comments updated - .nonEmpty() is .now hasItems() - Changed comments for methods according to review request
Removed all .hasItems() from custom collections
added isEmpty method for Array
Handle input pointer id lookup fail not to be fatal on robovm
Fixes 5103. Items under a ScrollPane's fading scrollbar are not clickable even if the scrollbar is hidden (#5103)
#5127 Provide access to ALSource state on iOS
add support for emissive color and texture attributes
add missing import MaterialEmissiveTest
fix if only emissive texture is given
Fixes #5191. Clear touch points on Android multi-touch ACTION_CANCEL event
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Add focused to ButtonStyle
Remove whitespace on line wrap
Also remove whitespace at front of run - GlyphLayoutWrapTest
Remove possible whitespaces before adjusting xAdvances of wrapped line
Merge branch 'glyphLayoutTrimLines' of github.com:TCreutzenberg/libgdx into glyphLayoutTrimLines
Reverse the requirements on fields in copyFields(), so superclass objects can be copied to subclass objects.
Update Intersector.java
Update Intersector.java
Update Intersector.java
Add SplitPane.isCursorOverHandle()
Vector2.java
Removed unnecessary Align. in Align
Fix PropertiesUtils space handling during output
Fix issue where Android wouldn't detect bluetooth
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
Removed unnecessary Align. in Align
FileHandle#map compatibility for GWT
Removing uneeded imports * How did this even work
GwtFileHandle#map() now throws unsupported
Slightly better exception message
Merge branch 'master' into filehandlemap
Merge remote-tracking branch 'upstream/master' into filehandlemap
Minor cleanups for map methods
Fixing writable file mapping. - RandomAccessFile allows us to actually obtain a rw FileChannel
Added contains to binary heap
Fixed spacing issue
GL20 texture filter types description
Add screen edges that override system gestures as iOS RoboVM configuration option
stop messing with my readme
Overload AssetManager#isLoaded and #finishLoadingAsset to take AssetDescriptor as parameter
Updated a couple of mismatched version numbers
Update CHANGES
Merge branch 'master' into patch-2
fixes libgdx/libgdx#5254 WAV file read from jar buffer underflow
Added .isEmpty() and .nonEmpty() methods to collections
Methods renamed, comments updated - .nonEmpty() is .now hasItems() - Changed comments for methods according to review request
Removed all .hasItems() from custom collections
Solves issue #5025
Fixes #5059. Sounds randomly not being played on Android SDKs higher than 4.4
Freetype - Add generator constructor which can specify which faceIndex to use
CHANGES file changes for faceIndex api change
Update mappings for Xbox controller
Convenience methods for Align - test for horizontal/vertical alignment
Implemented pull request comments
Add focusWindow() to Lwjgl3Window
-The ParticleController stores a frame time in its deltaTime member but this value is hard-coded at 1/60 regardless of framerate. This change adds an overload to the ParticleController's update() method to take the delta time. This allows the particles to adjust their time deltas for faster or flower framerate. The change also allows callers to cause particle effects to be played back at faster or slower speeds. -This change also adds overloads for update() and updateAndDraw() of the ParticleSystem class, each of which takes a frame time and adds an overload for the ParticleEffect update() method. -RegularEmitter previously only used the floor of the number of milliseconds that had passed since  the last update when calculating percent of the lifetime lived for each particle. For playback of  particle effects that were being played at .1 times the speed of the default speed, .00016666 ms were elapsed between calls to update(), which rounds down to 1 ms rather than 1.666 ms. This meant that the particle effect being played at .1 speed was actually being animated for 16 times as long rather than 10 times as long as the same effect played back at 1x speed (because the floor of .001666 *1000 = 16 but floor of .00016666*1000 is 1.) -This change also updates the Flame tool to make it respect the delta multiplier
Forgot to add the FlameMain.java changes
Improved controllers detection to avoid unrelated devices being detected as game controllers
wrap optimisation
Fixed the missingGlyph of FreeTypeBitmapFontData doesn't initialized.
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
fixed try-finally swallowing Exception after end
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Changed Constructor of Ellipse(Circle)
 Renamed TextAreaScrollTest, it actually tests the ScrollPane behavior when it wraps a TextArea. Added to GdxTests.
Merge branch 'master' into scrollPaneTextArea
GLTexture - gltexparameter i instead of f
Fixes 5103. Items under a ScrollPane's fading scrollbar are not clickable even if the scrollbar is hidden (#5103)
#5127 Provide access to ALSource state on iOS
add support for emissive color and texture attributes
fix if only emissive texture is given
Fixed an issue that caused textfields to lose focus due to invisible windows when pressing tab. The findNextTextField method now searches up the parent hierarchy to determine if all parent actors and the actor itself are visible. If any of the parent actors or the actor itself are invisible, the findNextTextField method will ignore them.
Fixes #5191. Clear touch points on Android multi-touch ACTION_CANCEL event
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Prevent controller extension from swallowing keyboard events
Add focused to ButtonStyle
Remove whitespace on line wrap
Also remove whitespace at front of run - GlyphLayoutWrapTest
Remove possible whitespaces before adjusting xAdvances of wrapped line
Merge branch 'glyphLayoutTrimLines' of github.com:TCreutzenberg/libgdx into glyphLayoutTrimLines
Added jvm arg "startOnFirstThread" in the rust task for macOS
Reverse the requirements on fields in copyFields(), so superclass objects can be copied to subclass objects.
Update Intersector.java
Update Intersector.java
Update Intersector.java
Update Intersector.java
Add SplitPane.isCursorOverHandle()
Vector2.java
Fix PropertiesUtils space handling during output
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
Removed unnecessary Align. in Align
Removing uneeded imports * How did this even work
Added FileHandle#map(), can be used to memory map a file
GwtFileHandle#map() now throws unsupported
Slightly better exception message
Merge branch 'master' into filehandlemap
Merge branch 'filehandlemap' of PokeMMO/libgdx into filehandlemap
Minor cleanups for map methods
Added contains to binary heap
Fixed spacing issue
GL20 texture filter types description
Add screen edges that override system gestures as iOS RoboVM configuration option
stop messing with my readme
Overload AssetManager#isLoaded and #finishLoadingAsset to take AssetDescriptor as parameter
Updated a couple of mismatched version numbers
Update CHANGES
Merge branch 'master' into patch-2
fixes libgdx/libgdx#5254 WAV file read from jar buffer underflow
Added .isEmpty() and .nonEmpty() methods to collections
Removed all .hasItems() from custom collections
Fixes #5059. Sounds randomly not being played on Android SDKs higher than 4.4
Freetype - Add generator constructor which can specify which faceIndex to use
CHANGES file changes for faceIndex api change
Convenience methods for Align - test for horizontal/vertical alignment
Implemented pull request comments
Bit operators for comparison
Use StringBuilder instead of StringBuffer as it offers high performance in single thread context as it is generally the case.
Add focusWindow() to Lwjgl3Window
-The ParticleController stores a frame time in its deltaTime member but this value is hard-coded at 1/60 regardless of framerate. This change adds an overload to the ParticleController's update() method to take the delta time. This allows the particles to adjust their time deltas for faster or flower framerate. The change also allows callers to cause particle effects to be played back at faster or slower speeds. -This change also adds overloads for update() and updateAndDraw() of the ParticleSystem class, each of which takes a frame time and adds an overload for the ParticleEffect update() method. -RegularEmitter previously only used the floor of the number of milliseconds that had passed since  the last update when calculating percent of the lifetime lived for each particle. For playback of  particle effects that were being played at .1 times the speed of the default speed, .00016666 ms were elapsed between calls to update(), which rounds down to 1 ms rather than 1.666 ms. This meant that the particle effect being played at .1 speed was actually being animated for 16 times as long rather than 10 times as long as the same effect played back at 1x speed (because the floor of .001666 *1000 = 16 but floor of .00016666*1000 is 1.) -This change also updates the Flame tool to make it respect the delta multiplier
Improved controllers detection to avoid unrelated devices being detected as game controllers
wrap optimisation
Fixed the missingGlyph of FreeTypeBitmapFontData doesn't initialized.
Fix issue where Android wouldn't detect bluetooth
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
fixed try-finally swallowing Exception after end
Converted CR/LF to LF
Changed Constructor of Ellipse(Circle)
 Renamed TextAreaScrollTest, it actually tests the ScrollPane behavior when it wraps a TextArea. Added to GdxTests.
Merge branch 'master' into scrollPaneTextArea
GLTexture - gltexparameter i instead of f
stop messing with my readme
Handle input pointer id lookup fail not to be fatal on robovm
Fixes 5103. Items under a ScrollPane's fading scrollbar are not clickable even if the scrollbar is hidden (#5103)
#5127 Provide access to ALSource state on iOS
add support for emissive color and texture attributes
add missing import MaterialEmissiveTest
fix if only emissive texture is given
Fixed an issue that caused textfields to lose focus due to invisible windows when pressing tab. The findNextTextField method now searches up the parent hierarchy to determine if all parent actors and the actor itself are visible. If any of the parent actors or the actor itself are invisible, the findNextTextField method will ignore them.
Fixes #5191. Clear touch points on Android multi-touch ACTION_CANCEL event
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Prevent controller extension from swallowing keyboard events
Add focused to ButtonStyle
Remove whitespace on line wrap
Also remove whitespace at front of run - GlyphLayoutWrapTest
Remove possible whitespaces before adjusting xAdvances of wrapped line
Merge branch 'glyphLayoutTrimLines' of github.com:TCreutzenberg/libgdx into glyphLayoutTrimLines
Added jvm arg "startOnFirstThread" in the rust task for macOS
Reverse the requirements on fields in copyFields(), so superclass objects can be copied to subclass objects.
Update Intersector.java
Update Intersector.java
Update Intersector.java
Update Intersector.java
Add SplitPane.isCursorOverHandle()
Vector2.java
Removed unnecessary Align. in Align
Fix PropertiesUtils space handling during output
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
Removed unnecessary Align. in Align
FileHandle#map compatibility for GWT
Removing uneeded imports * How did this even work
Added FileHandle#map(), can be used to memory map a file
Slightly better exception message
Merge branch 'master' into filehandlemap
Merge branch 'filehandlemap' of PokeMMO/libgdx into filehandlemap
Minor cleanups for map methods
Fixing writable file mapping. - RandomAccessFile allows us to actually obtain a rw FileChannel
Added contains to binary heap
Fixed spacing issue
GL20 texture filter types description
Add screen edges that override system gestures as iOS RoboVM configuration option
Overload AssetManager#isLoaded and #finishLoadingAsset to take AssetDescriptor as parameter
Updated a couple of mismatched version numbers
Update CHANGES
Merge branch 'master' into patch-2
fixes libgdx/libgdx#5254 WAV file read from jar buffer underflow
Added .isEmpty() and .nonEmpty() methods to collections
Methods renamed, comments updated - .nonEmpty() is .now hasItems() - Changed comments for methods according to review request
Removed all .hasItems() from custom collections
Fixes #5059. Sounds randomly not being played on Android SDKs higher than 4.4
Freetype - Add generator constructor which can specify which faceIndex to use
CHANGES file changes for faceIndex api change
gdx-controllers: allow specifing custom controllers
Update mappings for Xbox controller
Convenience methods for Align - test for horizontal/vertical alignment
Implemented pull request comments
Bit operators for comparison
Use StringBuilder instead of StringBuffer as it offers high performance in single thread context as it is generally the case.
Add focusWindow() to Lwjgl3Window
-The ParticleController stores a frame time in its deltaTime member but this value is hard-coded at 1/60 regardless of framerate. This change adds an overload to the ParticleController's update() method to take the delta time. This allows the particles to adjust their time deltas for faster or flower framerate. The change also allows callers to cause particle effects to be played back at faster or slower speeds. -This change also adds overloads for update() and updateAndDraw() of the ParticleSystem class, each of which takes a frame time and adds an overload for the ParticleEffect update() method. -RegularEmitter previously only used the floor of the number of milliseconds that had passed since  the last update when calculating percent of the lifetime lived for each particle. For playback of  particle effects that were being played at .1 times the speed of the default speed, .00016666 ms were elapsed between calls to update(), which rounds down to 1 ms rather than 1.666 ms. This meant that the particle effect being played at .1 speed was actually being animated for 16 times as long rather than 10 times as long as the same effect played back at 1x speed (because the floor of .001666 *1000 = 16 but floor of .00016666*1000 is 1.) -This change also updates the Flame tool to make it respect the delta multiplier
Forgot to add the FlameMain.java changes
wrap optimisation
Fixed the missingGlyph of FreeTypeBitmapFontData doesn't initialized.
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
fixed try-finally swallowing Exception after end
Converted CR/LF to LF
 Renamed TextAreaScrollTest, it actually tests the ScrollPane behavior when it wraps a TextArea. Added to GdxTests.
Merge branch 'master' into scrollPaneTextArea
GLTexture - gltexparameter i instead of f
TextField uses timer task to perform cursor blinking
Handle input pointer id lookup fail not to be fatal on robovm
Fixes 5103. Items under a ScrollPane's fading scrollbar are not clickable even if the scrollbar is hidden (#5103)
#5127 Provide access to ALSource state on iOS
add support for emissive color and texture attributes
add missing import MaterialEmissiveTest
fix if only emissive texture is given
Fixed an issue that caused textfields to lose focus due to invisible windows when pressing tab. The findNextTextField method now searches up the parent hierarchy to determine if all parent actors and the actor itself are visible. If any of the parent actors or the actor itself are invisible, the findNextTextField method will ignore them.
Fixes #5191. Clear touch points on Android multi-touch ACTION_CANCEL event
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Prevent controller extension from swallowing keyboard events
Add focused to ButtonStyle
Remove whitespace on line wrap
Also remove whitespace at front of run - GlyphLayoutWrapTest
Remove possible whitespaces before adjusting xAdvances of wrapped line
Merge branch 'glyphLayoutTrimLines' of github.com:TCreutzenberg/libgdx into glyphLayoutTrimLines
Added jvm arg "startOnFirstThread" in the rust task for macOS
Reverse the requirements on fields in copyFields(), so superclass objects can be copied to subclass objects.
Update Intersector.java
Update Intersector.java
Update Intersector.java
Update Intersector.java
Add SplitPane.isCursorOverHandle()
Removed unnecessary Align. in Align
Fix PropertiesUtils space handling during output
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Put Batch calls in try-finally to allow recovery from thrown exceptions
Removed unnecessary Align. in Align
FileHandle#map compatibility for GWT
Removing uneeded imports * How did this even work
Added FileHandle#map(), can be used to memory map a file
GwtFileHandle#map() now throws unsupported
Slightly better exception message
Merge remote-tracking branch 'upstream/master' into filehandlemap
Merge branch 'filehandlemap' of PokeMMO/libgdx into filehandlemap
Minor cleanups for map methods
Fixing writable file mapping. - RandomAccessFile allows us to actually obtain a rw FileChannel
Added contains to binary heap
Fixed spacing issue
Add screen edges that override system gestures as iOS RoboVM configuration option
Overload AssetManager#isLoaded and #finishLoadingAsset to take AssetDescriptor as parameter
Updated a couple of mismatched version numbers
Update CHANGES
Merge branch 'master' into patch-2
fixes libgdx/libgdx#5254 WAV file read from jar buffer underflow
Added .isEmpty() and .nonEmpty() methods to collections
Removed all .hasItems() from custom collections
Solves issue #5025
Fixes #5059. Sounds randomly not being played on Android SDKs higher than 4.4
Freetype - Add generator constructor which can specify which faceIndex to use
CHANGES file changes for faceIndex api change
gdx-controllers: allow specifing custom controllers
Update mappings for Xbox controller
Convenience methods for Align - test for horizontal/vertical alignment
Implemented pull request comments
Use StringBuilder instead of StringBuffer as it offers high performance in single thread context as it is generally the case.
Add focusWindow() to Lwjgl3Window
Forgot to add the FlameMain.java changes
Improved controllers detection to avoid unrelated devices being detected as game controllers
Fixed the missingGlyph of FreeTypeBitmapFontData doesn't initialized.
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
fixed try-finally swallowing Exception after end
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Changed Constructor of Ellipse(Circle)
Replace HashMap with ObjectMap
 Renamed TextAreaScrollTest, it actually tests the ScrollPane behavior when it wraps a TextArea. Added to GdxTests.
Merge branch 'master' into scrollPaneTextArea
GLTexture - gltexparameter i instead of f
SplitViewport added.
Fixed the behavior of overscaling viewports.
- Add option to scale Ninepatch
Android:Initial 4.4+ sdcard patch Addresses #2426
Android: Finished KitKat sdcard patch
Android: Changes to sdcard patch as discussed
Android: Allow sdcard to be mounted after app init
Handle input pointer id lookup fail not to be fatal on robovm
Fixes 5103. Items under a ScrollPane's fading scrollbar are not clickable even if the scrollbar is hidden (#5103)
#5127 Provide access to ALSource state on iOS
add support for emissive color and texture attributes
add missing import MaterialEmissiveTest
fix if only emissive texture is given
Fixes #5191. Clear touch points on Android multi-touch ACTION_CANCEL event
FreeType - Use zero copy memory mapping when possible
FreeType - Fixing missing unsafe check for Face buffers when failure to create face
Prevent controller extension from swallowing keyboard events
Add focused to ButtonStyle
Remove whitespace on line wrap
Also remove whitespace at front of run - GlyphLayoutWrapTest
Remove possible whitespaces before adjusting xAdvances of wrapped line
Merge branch 'glyphLayoutTrimLines' of github.com:TCreutzenberg/libgdx into glyphLayoutTrimLines
Added jvm arg "startOnFirstThread" in the rust task for macOS
Reverse the requirements on fields in copyFields(), so superclass objects can be copied to subclass objects.
Update Intersector.java
Update Intersector.java
Update Intersector.java
Update Intersector.java
Add SplitPane.isCursorOverHandle()
Vector2.java
Removed unnecessary Align. in Align
Fix PropertiesUtils space handling during output
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
Removed unnecessary Align. in Align
FileHandle#map compatibility for GWT
Removing uneeded imports * How did this even work
Added FileHandle#map(), can be used to memory map a file
GwtFileHandle#map() now throws unsupported
Merge branch 'master' into filehandlemap
Minor cleanups for map methods
Fixing writable file mapping. - RandomAccessFile allows us to actually obtain a rw FileChannel
Added contains to binary heap
Fixed spacing issue
GL20 texture filter types description
Add screen edges that override system gestures as iOS RoboVM configuration option
stop messing with my readme
Overload AssetManager#isLoaded and #finishLoadingAsset to take AssetDescriptor as parameter
Updated a couple of mismatched version numbers
Update CHANGES
Merge branch 'master' into patch-2
fixes libgdx/libgdx#5254 WAV file read from jar buffer underflow
Added .isEmpty() and .nonEmpty() methods to collections
Methods renamed, comments updated - .nonEmpty() is .now hasItems() - Changed comments for methods according to review request
Removed all .hasItems() from custom collections
Solves issue #5025
Fixes #5059. Sounds randomly not being played on Android SDKs higher than 4.4
Freetype - Add generator constructor which can specify which faceIndex to use
CHANGES file changes for faceIndex api change
gdx-controllers: allow specifing custom controllers
Update mappings for Xbox controller
Convenience methods for Align - test for horizontal/vertical alignment
Implemented pull request comments
Bit operators for comparison
Use StringBuilder instead of StringBuffer as it offers high performance in single thread context as it is generally the case.
Add focusWindow() to Lwjgl3Window
-The ParticleController stores a frame time in its deltaTime member but this value is hard-coded at 1/60 regardless of framerate. This change adds an overload to the ParticleController's update() method to take the delta time. This allows the particles to adjust their time deltas for faster or flower framerate. The change also allows callers to cause particle effects to be played back at faster or slower speeds. -This change also adds overloads for update() and updateAndDraw() of the ParticleSystem class, each of which takes a frame time and adds an overload for the ParticleEffect update() method. -RegularEmitter previously only used the floor of the number of milliseconds that had passed since  the last update when calculating percent of the lifetime lived for each particle. For playback of  particle effects that were being played at .1 times the speed of the default speed, .00016666 ms were elapsed between calls to update(), which rounds down to 1 ms rather than 1.666 ms. This meant that the particle effect being played at .1 speed was actually being animated for 16 times as long rather than 10 times as long as the same effect played back at 1x speed (because the floor of .001666 *1000 = 16 but floor of .00016666*1000 is 1.) -This change also updates the Flame tool to make it respect the delta multiplier
Forgot to add the FlameMain.java changes
Improved controllers detection to avoid unrelated devices being detected as game controllers
Fixed the missingGlyph of FreeTypeBitmapFontData doesn't initialized.
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Update to latest (#1)
Put Batch calls in try-finally to allow recovery from thrown exceptions
fixed try-finally swallowing Exception after end
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
Replace HashMap with ObjectMap
 Renamed TextAreaScrollTest, it actually tests the ScrollPane behavior when it wraps a TextArea. Added to GdxTests.
Merge branch 'master' into scrollPaneTextArea
GLTexture - gltexparameter i instead of f
Fix issue where Android wouldn't detect bluetooth
Converted CR/LF to LF
added particle emitter sprite change test
update particle region
load basic properties for object layers
Updated to compile and run under Android Studio 2.2
Allow gdx-test to run on Android 2.2 (API 8) again
Fixed https://github.com/hdodenhof/CircleImageView/issues/81
Extend AppCompatImageView, as recommended by Google, in order to allow the use of vectorDrawables.
Support for ScaleType.CENTER_INSIDE
Add support for selector
Fixed https://github.com/hdodenhof/CircleImageView/issues/81
Add support for disabling circular transformation entirely
Added selector if ImageView is clickable
Added clickable ImageView example
Updated README
Updated README
merged latest version v1.2.1 8af308b6e19e907f8501bf308e62a652d12f551c
merged latest version v1.2.1 8af308b6e19e907f8501bf308e62a652d12f551c
Add support for hit state
Extend AppCompatImageView, as recommended by Google, in order to allow the use of vectorDrawables.
Extend AppCompatImageView, as recommended by Google, in order to allow the use of vectorDrawables.
add shadow property
Support for ScaleType.CENTER_INSIDE
fix bug
Support for fill/background color
Update readme
Proper scaling if using match_parent
Workaround for Gingerbread flicker when scrolling into right or bottom edges while zoomed in
Oops! Was testing. Fixed now
Allow pager to scroll when no image has been loaded into PhotoView
Fixed wrong placement of if statement
Faster ViewPager swiping; Improved logging; Fix: loading huge images; fix memory leak
added menu option "debug enabled" to sample/PhotoViewSampleApp
Added MediaDB-ViewPager demo that demonstrates fast swiping
Made some debug-properties public to allow APhotoManager app to change these in the settings dialog and to allow filtering crash reports
fixed version mismatch travis <-> gradle
debug defaults minimal debugs
removed code for fast-swiping, HugeImageLoader from lib to demo. Created Attacher facory PhotoView#onCreatePhotoViewAttacher(...)
Added central debug menu handling for all samples. Split ViewPagerActivityFromMediaDB into a base version and a version with enhanced PhotoViewEx
gradle-213 has problems to build. changed to gradle-214 to solve travis build error
deactivated maven-plugin which is not compatible with gradle-214
downgrade gradle-2.14 to gradle-2.10 because jitpackio doe not support it
Fix for regression on issue #72.
Rename image scale levels, add absolute minimum scale level
Keep target API consistent with master branch
Workaround for Gingerbread flicker when scrolling into right or bottom edges while zoomed in
Oops! Was testing. Fixed now
[PhotoView]: #409 fix setSystemuiVisibility bug
Faster ViewPager swiping; Improved logging; Fix: loading huge images; fix memory leak
added menu option "debug enabled" to sample/PhotoViewSampleApp
Added MediaDB-ViewPager demo that demonstrates fast swiping
Made some debug-properties public to allow APhotoManager app to change these in the settings dialog and to allow filtering crash reports
fixed version mismatch travis <-> gradle
debug defaults minimal debugs
removed code for fast-swiping, HugeImageLoader from lib to demo. Created Attacher facory PhotoView#onCreatePhotoViewAttacher(...)
Added central debug menu handling for all samples. Split ViewPagerActivityFromMediaDB into a base version and a version with enhanced PhotoViewEx
gradle-213 has problems to build. changed to gradle-214 to solve travis build error
deactivated maven-plugin which is not compatible with gradle-214
downgrade gradle-2.14 to gradle-2.10 because jitpackio doe not support it
reverted changes for gradle-wrapper
#216 Removed application tag from library as it is unnecessary. Additionally, set flags can conflict with projects requiring overrides to be specified.
Fixes #58
fix for #75
Faster ViewPager swiping; Improved logging; Fix: loading huge images; fix memory leak
Added MediaDB-ViewPager demo that demonstrates fast swiping
fixed version mismatch travis <-> gradle
debug defaults minimal debugs
removed code for fast-swiping, HugeImageLoader from lib to demo. Created Attacher facory PhotoView#onCreatePhotoViewAttacher(...)
Added central debug menu handling for all samples. Split ViewPagerActivityFromMediaDB into a base version and a version with enhanced PhotoViewEx
deactivated maven-plugin which is not compatible with gradle-214
reverted changes for gradle-wrapper
Workaround for Gingerbread flicker when scrolling into right or bottom edges while zoomed in
Oops! Was testing. Fixed now
Fix the typos reported by Issue#323
bug fixed for issue 1281 (android oom).
建议增加选择是否使用BigInteger的功能 #462
#462 建议增加选择是否使用BigInteger的功能
Merge branch '#462' of https://github.com/lifanhong/fastjson into #462
fixed typo
Update MapSerializer.java
fix bug #80
Map should fill null values only when set WriteMapNullValue
fix issue #74
fix issue #76 但是感觉不够完整， 需要再做修正
fix bug #83.
modify doT.js to doT.min.js
fix bug
prevent from thread leak when db service is not available
fixed bug:mysql，delete from tableName where id =1，如果把where关键字写错了，如写成delete from tableName wher id =1，会导致整个表的数据被删除。update语句也有同样问题
fix #2374
fixed for oracle xmltype : extract(xmltype_fld1,'//base').getClobVal()  issue #1481
close #233
Fixed issue #34 - Fixed typo in javadoc for after(final EventProcessor... processors)
fix #105: restore headlines of repository view
fixed a bug where markdown would be improperly rendered if there were UTF-8 chars
Add following/unfollowing users
Merge branch 'master' of https://github.com/github/android
added disabling follow menu item until following status is updated
Merge branch 'master' of https://github.com/github/android
Fixed TAG for CheckFollowingUserTask
Markdown files render in commit view
Open Github from link
Merge branch 'wbmrcb-open-from-link' into development
init Japanese (ja-JP) locale.
Load PDFs in WebView through Google Docs
FileGetter class implemented
Open PDF/ZIP files in external viewer
Added long click support to news feed (issue #279)
Open Github from link
Gradle
Gradle
Gradle --Removed unecessary
Removing unwanted
Fixed files structure and removed thing
Fixed Travis CI
Testing new Travis CI fix
gradlew permission fixed
More test fixes
More test fixes
Fixed pom.xml and integration tests
Start using Picasso for avatar loading
Improve Picasso usage by unifying URLs
Fix crash if the avatar is missing
Delete the old cache every time the constructor is called
Use OkHttp to download images
Don't load avatars in the search view as they are not working anyway
Properly load Gravatar images
Load all avatars with Picasso and remove all the old methods
Fix tests
Remove debugging code
Add possibility to fork a repository, refs #106
Fix for #495 Search Results doubled.
organize imports for SearchIssueListFragment
Add following/unfollowing users
Merge branch 'master' of https://github.com/github/android
updated FollowUserTask to show progress dialog
added disabling follow menu item until following status is updated
Merge branch 'master' of https://github.com/github/android
Fixed TAG for CheckFollowingUserTask
Uncapitalize relative time span strings with prefix
Add following/unfollowing users
Merge branch 'master' of https://github.com/github/android
updated FollowUserTask to show progress dialog
added disabling follow menu item until following status is updated
Merge branch 'master' of https://github.com/github/android
Fixed TAG for CheckFollowingUserTask
added markdown processing, refs issue #306
updated markdown extensions
Open Github from link
Fix #508 #427
Added activeThreadCount to Service and Spark classes
allow overwriting headers #413
fixed test
Fix for #251 use Assert.notNull
Fix for #517
refactoring
more refactoring
Do not reset filterMatch in after filters fixed #332
disable http request wrapper byte cache for multipart/form-data uploads
Fixed: plus signs in path params are parsed are they are
Names fix
No need to encode as we don't test jetty's URIUtil
Fixing #941 - Jetty specific import in spark.Request
Each service has own static file location
Guess MIME-type based on extension
Fix NPE for getFilename and set headers before gzip
Add mime-type support
Merge branch 'mimetype' of https://github.com/perwendel/spark into mimetype
Including enabled TLS protocols to SocketConnectorFactory
Changing EmbeddedJettyServer as suggested on Spark Issue #914
Finishing EmbeddedJettyServer changes to support custom connectors
Including enabled TLS protocols to SocketConnectorFactory
Changing EmbeddedJettyServer as suggested on Spark Issue #914
Finishing EmbeddedJettyServer changes to support custom connectors
SPARK-193 Adds a servlet-based routing mechanism to complement the existing filter-based one.
Make routes case-sensitive
Each service has own static file location
Moved slf4j-simple to test scope
issue #251:Session Invalidation Error
Issue #97: Add handling of trailing slashes
Fix for #981
don't do route.render if response is already redirected
Refactored EmbeddedServer creation Fixes #461
Adding 404 and 500 custom page error
Removing null pointers
Fixed code based on failing tests
Removed unwanted changes in testcases
Removed certain loggings
Custom 404 and 500 with sparkfilters
Added method signatures for allowing multiple filters to be mapped to a before/after action
Allows you to set custom 404 and 500 pages.
Fix route missing when exception thrown and handled/unhandled. It also fixed the error of processing response without content, e.g. 204
handle return null to empty see issus #414
add a test to ensure return null can be convert to empty string
Fixes #610 and implements removing of routes at runtime. Changed manual http methods "GET" to HTTPMethod.GET to simplify and stop any mistakes/typos. Changed HTTPMethod enums to uppercase.
Guess MIME-type based on extension
Fix NPE for getFilename and set headers before gzip
Add mime-type support
Merge branch 'mimetype' of https://github.com/perwendel/spark into mimetype
Another (more drastic) way to fix issue #221. After filters have only limited usage if you cannot read the payload.
Make bodyContent available in the after filters
Providing HttpConnection configuration point
Ignoring GenericSecureIntegrationTest for further broken tests analysis
Cleaning secure option after GenericSecureIntegrationTest
Make generic declaration Java 6 compatible
Providing HttpConnection configuration point
Ignoring GenericSecureIntegrationTest for further broken tests analysis
Cleaning secure option after GenericSecureIntegrationTest
Fix #506
SparkServer was updated to be runnable on http and https protocols at same time. Api call was added to SparkBase to support that. Ability to specify special ssl port and justSsl flag were added.
Using http and https in same time functionality was added.
Merge branch 'master' of https://github.com/perwendel/spark
Merged branch master into master
fix route missing when an exception thrown
fix route missing when an exception thrown and other route handling issues. Remove unnecessary flags
fix route missing when an exception thrown and other route handling issues. Remove unnecessary flags
remove unhandled exception request state
Hopefully cleaner shutdown when interrupted
First crack at making it a multi-module project
Moved properties to be in the top pom.xml only in order for them to be found faster further down the road
Replaced 'unchecked' with the actual 'rawtypes' warning suppresion
Added cobertura processing to hudson build
Code cleanup according to sonar code quality checks (well, some of them)
Revert "Removed cobertura from profiles as hudson executes the right goal by itself"
Made utility classes final as they are fully static classes only
Made two more classes into final classes with private constructor: Spark and Access
Refactored SimpleRouteMatcher.matches()
Initial refactoring of path matching mechanism
Added option to manually start and shutdown embedded server.
Code cleanup.
Code cleanup.
Code cleanup - Avoid throwing raw exception types.
Code cleanup - params local variable has been hidding instance field
Initial refactoring of MatcherFilter.doFilter (to high CC and LOC)
Code cleanup
Code cleanup
Extracted magic numbers to constants
Merge branch 'master' of https://github.com/padcom/spark
Code cleanup.
Code refactoring.
Removed unneeded static modifier
Simplified nested if statement
Code cleanup.
Removed redundant modifier
Removed redundant modifier
Removed unneeded catch block
Removed more magic numbers
Removed unneeded modifier.
Workaround for issues #684
Implementation for read dynamic path parameters
Reorganizing project structure, splitting to "core" and "embedded".
Deleted redundant LICENSE file, formatting fixes (tabs -> spaces).
Fixed parent POM version.
Move newly added files to core/embedded.
Integrated static resource handler
Fixed charset bug with jetty for javascript/css files
Bundling javadoc/sources when deploying
Set default response type to text/html;charset=utf-8
IllegalArgumentException when using unsupported HTTP methods Fixes: #346
Providing HttpConnection configuration point
Ignoring GenericSecureIntegrationTest for further broken tests analysis
Cleaning secure option after GenericSecureIntegrationTest
 Tests fail if port 4567 is in use #400.
 Tests fail if port 4567 is in use #400. Fix int tests.
 Tests fail if port 4567 is in use #400. Fix int tests.
Changelog :- 1. Adding custom typeface feature in default AppIntro & AppIntro2 2. Adding a static cache for Typefaces to prevent memory leaks due to Typefaces. The developers can just provide the URLs of font files in Assets folder. 3. Adding Wizard Mode to create setup wizards instead of intros.
Adding implementation screens
Adding show/hide backbutton on Done fragment is shown
Updated example project & many more
Updating to build-tools 24.0.1
Adding the fragment destroy patch. I am not sure about the stability but it does the necessary
Added fallback to default typeface
Refactored code
Add method to hide Pager Indicator. Closes #340.
Issue #361 check NPE on views
Fix vector drawables in xml
Changelog :- 1. Adding custom typeface feature in default AppIntro & AppIntro2 2. Adding a static cache for Typefaces to prevent memory leaks due to Typefaces. The developers can just provide the URLs of font files in Assets folder. 3. Adding Wizard Mode to create setup wizards instead of intros.
Adding implementation screens
Removing screens
Adding show/hide backbutton on Done fragment is shown
Updated example project & many more
Updating to build-tools 24.0.1
Adding the fragment destroy patch. I am not sure about the stability but it does the necessary
Cleaning code
Added fallback to default typeface
Refactored code
Restructured readme
Readme: Added section about slide policies
Readme: Fixed typos
Readme: Additional typo and grammar fixes
Readme: Added section about background color transitions
Readme: Github doesn't like mixing markdown and html :(
Update build tools & support library
Set image resource rather than drawable.
Merge branch 'master-upstream'
Removed second fragment instantiation in addSlide() to support instantiation with arguments
updated samples to work with https://github.com/PaoloRotolo/AppIntro/pull/18
Get RTL status the right way
check rtl
check rtl
Use a different mechanism for RTL check
check rtl
check rtl
Changelog :- 1. Adding custom typeface feature in default AppIntro & AppIntro2 2. Adding a static cache for Typefaces to prevent memory leaks due to Typefaces. The developers can just provide the URLs of font files in Assets folder. 3. Adding Wizard Mode to create setup wizards instead of intros.
Adding implementation screens
Removing screens
Adding show/hide backbutton on Done fragment is shown
Updated example project & many more
Updating to build-tools 24.0.1
Adding the fragment destroy patch. I am not sure about the stability but it does the necessary
Cleaning code
Added fallback to default typeface
Refactored code
Adding missing refactor
Changelog :- 1. Adding custom typeface feature in default AppIntro & AppIntro2 2. Adding a static cache for Typefaces to prevent memory leaks due to Typefaces. The developers can just provide the URLs of font files in Assets folder. 3. Adding Wizard Mode to create setup wizards instead of intros.
Adding implementation screens
Removing screens
Updated example project & many more
Updating to build-tools 24.0.1
Adding the fragment destroy patch. I am not sure about the stability but it does the necessary
Cleaning code
Refactored code
Adding missing refactor
Merge remote-tracking branch 'PaoloRotolo/master'
Addressing issue #318
Resolving conflict
Resolving
Resolving
Resolving
Resolving
Resolving
Resolving
Resolving
Resolving
Resolving
Resolving
Changing log statements
Indentation correction
- Update build tools. - Example app overhaul.
- Consolidate Sample Activity intents into single switch statement. - Cleanup proguard config. - Merge gradle build arguments for example app and library.
- update project build.gradle.
Merge branch 'master' into example-overhaul
As discussed #343
Quick Fix.
Changing log statements
Indentation correction
- Update build tools. - Example app overhaul.
- Consolidate Sample Activity intents into single switch statement. - Cleanup proguard config. - Merge gradle build arguments for example app and library.
- update project build.gradle.
Merge branch 'master' into example-overhaul
Quick Fix.
Fixes permissions request behavior (Closes #471).
Fixes permissions request behavior (Closes #471).
- Update build tools. - Example app overhaul.
- Consolidate Sample Activity intents into single switch statement. - Cleanup proguard config. - Merge gradle build arguments for example app and library.
- update project build.gradle.
Merge branch 'master' into example-overhaul
As discussed #343
Quick Fix.
First pass at comprehensive set of unit tests for execution hooks against 1.3.x
Fixing test expectations because of #513.
Fixed some assertions for command.queue() tests
Commenting out tests of non-blocking queue w.r.t hook ordering until #514 is resolved
HystrixCommandEventStream that models an infinite stream of HystrixCommandExecutions
HystrixCommandMetrics buckets metrics and writes them to Subjects for querying
Reading from rolling percentile subject for latency metrics. * Added HystrixServoMetricsPublisherCommandTest as a concrete unit test that behavior is still correct
Wired HealthCounts up to HystrixCommandEventStream. * They get calculated only on health count intervals
Decreasing memory allocations
Changing model from the first level of event writes being command-level, to thread-level. * Added global-level stream as a way to recover command-level streams
Added object pooling to HystrixLatencyDistribution
Added streams which sample all thread pool utilization and queue utilization
Stop writing to HystrixRollingNumber for event counters (cumulative and rolling)
Removed individual event writes from HystrixCommandMetrics
Calculating EXCEPTION_THROWN count from other HystrixEventTypes
Track execution result of RESPONSE_FROM_CACHE
Fixed thread race in HystrixCommandEventStream construction
Only calling 1 constructor per metric-stream
Cleaning up logging and adding some comments to how streams are being used for HystrixCommandMetrics
Ensure only a single thread can reset the command health stream
More minor cleanup
Bugfix: Root cause is no longer replaced in exceptions (Issue #195)
#1109 MetricJsonListener queue size can be configured by passing additional queueSize=<int> parameter in stream query
#1109 Make default metric listener queue size configurable by property hystrix.stream.defaultMetricListenerQueueSize (still defaults to 1000 if unspecified)
#1109 Rolling back request parameter support for setting queueSize
HystrixCommandEventStream that models an infinite stream of HystrixCommandExecutions
Write command completions to HystrixCommandEventStream (still writing to RollingNumber/RollingPercentile as well)
HystrixCommandMetrics buckets metrics and writes them to Subjects for querying
Reading from rolling percentile subject for latency metrics. * Added HystrixServoMetricsPublisherCommandTest as a concrete unit test that behavior is still correct
Decreasing memory allocations
Changing model from the first level of event writes being command-level, to thread-level. * Added global-level stream as a way to recover command-level streams
Added object pooling to HystrixLatencyDistribution
Added streams which sample all thread pool utilization and queue utilization
Stop writing to HystrixRollingNumber for event counters (cumulative and rolling)
Removed individual event writes from HystrixCommandMetrics
Calculating EXCEPTION_THROWN count from other HystrixEventTypes
Track execution result of RESPONSE_FROM_CACHE
Fixed thread race in HystrixCommandEventStream construction
Only calling 1 constructor per metric-stream
Cleaning up logging and adding some comments to how streams are being used for HystrixCommandMetrics
Ensure only a single thread can reset the command health stream
More minor cleanup
Added AbstractCommand.getExecutionException to solve #998
Removing deprecated RxJava usage
Allow to configure threadPoolKey through HystrixObservableCommand.Setter
Creating a synthetic exception in the semaphore execution and short-circuited case that gets passed to onError() hook
Respect the property value on whether or not to interrupt a thread on timeout
Explicit Javadoc about diff from RxJava OperatorSubscribeOn
Allowing Collapsers to return multiple values per request argument.  Addresses #865
More unit tests around HystrixObservableCollapser
Cleaning up #881 per code review by @benjchristensen
Added unit test to see what happens when a large pool with a small queue sees high concurrency
Added the queue() case to large threadpool/small queue testcase
Allowing Collapsers to return multiple values per request argument.  Addresses #865
Modify ObservableCollapser JMH test to allow multiple response per argument
Fix issue #257 with upgrade to RxJava 0.18.2
Hook execution sequence issue
Unit tests to reproduce Hook execution sequence issue.
Unit tests to reproduce Hook execution sequence issue.  testExecutionHookFailedOnHystrixBadRequestWithSemaphoreIsolation
Added AbstractCommand.getExecutionException to solve #998
dummy change
Add a new interface, `DefaultRequestLogStrategy`, to disable requestLog for the concurrency strategy.
Failing unit tests for timeouts on HystrixCommands not causing thread interruptions
Respect the property value on whether or not to interrupt a thread on timeout
Make HystrixTimeoutException public so that user-defined execution methods may return it
Demonstrate how to tell if a user-supplied getFallback() exists
Design change to MetricsPublisher to remove the opportunity to make an implementation mistake.
Organize imports
Updated Javadoc for Hystrix 1.4.4
Fixed Javadoc for HystrixThreadPoolProperties.Setter
Regenerate Javadoc for 1.4.4
Add AutoCloseable interface to HystrixRequestContext
Fix for issue 241 (Cleaner error propagation in hystrix javanica)
Fixed #847 by adding BAD_REQUEST to the HystrixRequestLog
Cleaner error propagation in hystrix core.
Unit tests to reproduce Hook execution sequence issue.  testExecutionHookFailedOnHystrixBadRequestWithSemaphoreIsolation
Added example demonstrating ObservableCollapser
add java 8 examples as comment
Update unit tests for HystrixObservableCollapser to check HystrixRequestContext
Moving the subscribe() to before the await in HystrixObservableCollapserTest
Modify Servo tag "type" -> "class" and "instance" -> "id"
Use newGuard() to make example in Monitor class javadoc more concise.
Introduce listenablefuture and failureaccess artifacts, plus InternalFutureFailureAccess.
Use newGuard() to make example in Monitor class javadoc more concise.
Deprecate ConcurrentHashMultiset#createEntrySet()
Fix links to javadoc.io for Maven Javadoc Plugin
Use @SafeVarargs annotation for Sets#cartesianProduct
Fix Issue #2554, Helpers#isEmpty
Alternative way to get AssertionError instance in com.google.common.util.concurrent.GeneratedMonitorTest, since public AssertionError(String message, Throwable cause) does not exist in Java 6 yet.
Merge remote-tracking branch 'upstream/master'
Inspired by #2017, make more chekckings on missing serialVersionUID.
Removed unnecessary null check from io.BaseEncoding.encode(bytes)
Removed unnecessary null check from io.BaseEncoding.encode(bytes)
Add methods allowing awaiting on Condition
Remove method to await on condition indefinitely
Making the BloomFilter thread-safe & lock-free
Add builder for EventBus.
Added builder for AsyncEventBus.
Test case added to prove functionality
Code and test for Issue:ImmutableEnum{Set,Map} Collectors #2667
Making the BloomFilter thread-safe & lock-free
Made it possible to provide a custom StatsCounter in CacheBuilder
Added tests: - entry.setValue(null)
#2467: Custom map implementation for MapTestSuiteBuilderTests
#2467: Suppressed Tests (SetValueWithNullValuesAbsent, SetValueWithNullValuesPresent) for ConcurrentSkipListMap
#2467: Suppressed Tests (SetValueWithNullValuesAbsent, SetValueWithNullValuesPresent) for ForwardingNavigableMap
Restrict varargs length in collection factories
Change precondition message
Ensure the correct removal notification is published (fixes #2101)
FluentIterable.of(1,2,3) would be better than FluentIterable.of(new int[]{1, 2, 3});
#2509: Fix for 'DoubleMath incorrectly rounds 0.99999999999999994 to 2 with rounding mode UP or CEILING'
Fix #2914 by switching -android version suffix to -ga; revert vanilla versions from 24.0-jre back to 24.0
Fix google/guava#2599
Fix toString of NonSerializableMemoizingSupplier
Use Splitter instead of String.split, in InternetDomainName.
Use Splitter for IPv6, too. This eliminates usage of java.util.regex from this file (which is used via String.split, otherwise).
Use Diamond.
Automated rollback of a12ef6b46b26fe178021c099e3db6a8a99f5174e.
Don't enable use of Unsafe.getLong() on aarch64 devices.
Making the BloomFilter thread-safe & lock-free
Javadoc update when delegate throws exception
minor javadoc changes
Test case for #1563
applied patch from https://codereview.appspot.com/5271042/
Fix a bug affecting empty matches at the end of a String
Fix google/iosched#108 remove windowElevation for sw600dp-v21
Fix issue #152 "EclipsePlugin"
Fixed issue #174 Active tab not being selected while performing swipe inside multitab bar
Fixed issue #174 Active tab not being selected while performing swipe action
Fix issue #152 "EclipsePlugin"
Using sun.misc.Unsafe only through reflection to avoid binary dependency
Added SerializedName.pattern to enable regex mapping for an enum value to a field.
Fixed https://github.com/google/gson/issues/1310
Moved JavaVersion to an internal package
Add Gson.newBuilder API.
Address Codacy comments.
Reduce visibility of GsonBuilder constructor.
add .gitattributes
Made JsonArray implement the List interface.
Fix ArrayIndexOutOfBoundsException when skipping a value with JsonTreeReader #1013
add .gitattributes
add .gitattributes file
add .gitattributes
Revert "add .gitattributes file "
Parse number to Integer, Long, BigInteger and Double respectively.
Deserialize JSON non-fp literals to Long by default
Add Gson.newBuilder API.
Address Codacy comments.
Reduce visibility of GsonBuilder constructor.
Add module-info.java
Exclude module-info.java by default
Added test which shows that lenient JsonWriter fails writing infinite primitive doubles, but does not fail writing boxed doubles, as stated in #1090.
Fixed JsonWriter#value(double) to write infinite and NaN values when lenient, as JsonWriter#value(Number) does. (fixes #1090)
Fixed DefaultDateTypeAdapter nullability issue and JSON primitives contract
Fixed DefaultDateTypeAdapter nullability on write
Migrate DefaultDateTypeAdapter to streaming adapter
Fix StackOverflowError on resolving types with TypeVariable recursion
fix build errors
Add Gson.newBuilder API.
Remove redundant test.
Address Codacy comments.
Reduce visibility of GsonBuilder constructor.
Fix JPMS module setup (fixes #1315)
Re-added cause to AssertionErrors
Fixed JPMS module setup (fixes #1315)
Fixed DefaultDateTypeAdapter nullability issue and JSON primitives contract
Fixed DefaultDateTypeAdapter nullability on write
Migrate DefaultDateTypeAdapter to streaming adapter
Update README.md
Merge pull request #1 from andreybleme/feature/adding-maven-snippet-on-readme
incorporated feedback
Printing more debugging information to help track an invalid JsonAdapter.
Add keySet method and test
Code Cleanup
Prettify the code and remove useless public descriptor
add removeAllSwipeListener. fix #138
easy understanding sample
add brackets
remove useless part when declare List.
solve the bug which SwipeLayout was open and close immediately in hongmi
fix: loading of i18n resources as UTF-8 (see #363)
Merge branch 'master' of https://github.com/skylot/jadx into i18n
core: update dx to version 16
fix: Fix for #377 (Jadx in Windows open with list)
update gradle
修改BaseQuickAdapter构造函数，去除new ArrayList
创建v1.6.3.1tag
Restore stored subtitle only if it wasn't modified by user
Added support for fontFamily attribute inside textApperance. Issue #18.
reworked defaults, not required anymore
Calligraphy no longer uses fontFamily attribute. Sample updated to show new workflow.
Added fontFamily fallback mode. Sample updated to show new workflow.
Restore stored subtitle only if it wasn't modified by user
Add static methods to use custom fonts in widgets
Optimized class to be more generic
Update WidgetHelper.java
get rid of the class prefix filtering
re-introduce filtering
use beta4 build tools
support bold, italic , bolditalic postfixes for missing fonts If the fontPath is invalid in assets we postfix them corresponding to original type face style and try to set it
update sample
update read me for textStyle attribute support
remove app prefix in the sample to align with documentation
merge upstream
Added applying customfont to text view via handler, (Added after the textview is constructed)
Different way to apply custom fonts to the whole system.
Added Toast test to show custom text
added to changelong
#39 add setKeepFileExt method for who want to keep the file extension
#7 add multi compress, fyr
Merge remote-tracking branch 'Curzibn/master'
upgrade build gradle version to 2.2.1
add luban-tai readme
update build.gradle version to latest, import recycleview-v7:22.2.1
update demo with a recycler demo only replacing the listview.
update with example of a cardview, test with other app
remove logging
Revert "fix typo"
Merge branch 'master' of github.com:pdavid0/AndroidSlidingUpPanel
Add Floating Action Button
Added Floating Action Button Layout
Update README.md
Update README.md
Fixed NullPointer and Layout issue
Fixed missed setMeasuredDimension
Fixed measure error
Added new listeners
Update README.md
Changed onPanelHidden/ShowExecuted
Update README.md
Added anchor support for Floating Action Button
Update README.md
Update README.md
Resolved conflicts
Merge branch 'umano-master'
Fixed conflicts
Readded show/hide listeners; Optimized FAB anchor layout
Update README.md
Fixed layout issue
Moved child count checking to onMeasure
Update README.md
Updated DemoActivity
Fixed layout issue with specific panel heights
Make the FAB follow the panel
Merge pull request #7 from flyingtoaster0/master
Added more fab modes
Update README.md
Fixed layout issue with new modes
Update README.md
Update README.md
Resolved conflicts
Merge branch 'umano-master'
Fixed measure error
Merge pull request #11 from umano/master
Added attach/detach option
Fixed visibility handling
Added documentation
Update README.md
Fixed bug
Update README.md
Update README.md
Update README.md
Fixed merge conflicts
Merge branch 'umano-master'
Merge branch 'master' of https://github.com/TR4Android/AndroidSlidingUpPanel
Switch to official FloatingActionButton
Merge branch 'master' of https://github.com/TR4Android/AndroidSlidingUpPanel
Adjust button movement dinamically to panel height changes
Fix merge conflicts
Update and fix sample
Merge branch 'umano-master'
Merge pull request #19 from Knight81/master
Improve PR #19
Update README.md
ExpandView option add, sample add
More renaming attributes for #243
Renaming attributes for #243
Transparent feature added
Use standart gradle source folders for project.
Update build tools to 23.0.2.
Merge branch 'master' into update-build-tools
moved ScrollableViewHelper as interface
Added a hard anchor that will only allow the sliding panel to stop at the anchor point. Currently the user can slide past the anchor point but it will slide to the anchor point when the view is released.
demo updated to show the added features
Fixed hard anchor point calculation
Update README.md
Add Floating Action Button
Added Floating Action Button Layout
Update README.md
Update README.md
Fixed NullPointer and Layout issue
Fixed measure error
Added new listeners
Changed onPanelLayout
Changed onPanelHidden/ShowExecuted
Update README.md
Update README.md
Update README.md
Update README.md
Resolved conflicts
Merge branch 'umano-master'
Fixed conflicts
Readded show/hide listeners; Optimized FAB anchor layout
Update README.md
Fixed layout issue
Update README.md
Updated DemoActivity
Fixed layout issue with specific panel heights
Make the FAB follow the panel
Hide the FAB when above 1/8 of the screen height
Merge pull request #7 from flyingtoaster0/master
Update README.md
Fixed layout issue with new modes
Update README.md
Update README.md
Resolved conflicts
Merge branch 'umano-master'
Fixed measure error
Merge pull request #11 from umano/master
Added attach/detach option
Fixed visibility handling
Added documentation
Update README.md
Fixed bug
Update README.md
Update README.md
Update README.md
Fixed layout gravity
Update README.md
Fixed merge conflicts
Merge branch 'umano-master'
Merge branch 'master' of https://github.com/TR4Android/AndroidSlidingUpPanel
Update README.md
Switch to official FloatingActionButton
Merge branch 'master' of https://github.com/TR4Android/AndroidSlidingUpPanel
Adjust button movement dinamically to panel height changes
Fix merge conflicts
Merge branch 'umano-master'
Merge pull request #19 from Knight81/master
Improve PR #19
Update README.md
Possible fix for #356 and #545.
Merge branch 'master' of https://github.com/lohnn/AndroidSlidingUpPanel
License copyright notice added.
fix 'Bitmap too large to be uploaded into a texture' by checking bitmap extend and switching to software layer type when size limit reached
Update AppCompat dependency
Downgrade to SDK 23
Add round profile to crop.
Code style.
Improve performance.
Code Style.
Code Style
Add round profile to crop.
Code style.
Fix: Return true from 'onOptionsItemSelected' when item was consumed
修改图片获取不到宽高的bug
fix: If the image has the same height and width and you do nothing except rotate the image by 90°, the rotation is not saved.
Support Android Library Projects
Allow using non-final IDs with @BindView.
ButterKnife extensions
Add AndroidX support.
Check for AndroidX classes on the application classpath.
Inject AndroidX availability into brewJava().
Reference useAndroidX member instead of parameter pass.
Unpack double nested ternary.
Add support for TextWatcher injections via @OnTextChanged
Add documentation and usage example for @OnTextChanged
update androd plugin to 3.0.0-alpha1
Adds failing test for #779
Fixes #779 by scoping symbols by package
Remove debug statements
Undo some changes
Also revert this
More checkstyle
Simple rename
Merge branch 'master' into felipe/fix-779
Generously generate QualifiedId for all package/r permutations.
Final touches
Fix checkstyle
Fix bad import ordering.
Fix more bad import ordering.
Correct wrapping.
Better toString and equals
make safe for < SDK 9
Split compiler from runtime library
Fix checkstyle errors after spliting
Update README to reflect usage of butterknife-compiler
Fix formating issues after splitings
Fix #323 pr comments
Reverting line braik deletion
Remove extra this label
Fix a ClassCastException when looking at the internals of an InvocationTargetException.
Proguard will obfuscate class names.
Maven -> Gradle
Fix:[issue#438](https://github.com/JakeWharton/butterknife/issues/438)
Add OnTabChanged annotation to ButterKnife.
Added RadioGroup OnCheckedChangeListener annotation
Split the compiler and runtime into separate artifacts.
pull upstream changes into compiler split working branch
Tests: fixed incorrect indendation in expected error string
Maven -> Gradle
Add some validation to elements before attempting to process them, in order to avoid falling prey to upstream compilation problems causing thrown exceptions rather than reported errors.
Update android gradle plugin to 3.1.0-alpha07
Revert back to using 3.0.1 android plugin.
Maven -> Gradle
Closes JakeWharton/butterknife#1300: AndroidX support in butterknife gradle plugin
Fix indentation
Remove final on local
Add back Optional for methods
Fix checkstyle issue with line length
Fully stub example method in Optional
Separate out optional and nullable checking
Bindings for android.widget.SearchView closes #41
Tests rewritten to make proper use of assertThat
Separate OnSubscribe class for efficiency
Initial value to be emitted every time
minor: removed space
fix: class should be final
fix: creation should be done with a factory method
fix: class should be final
fix: should hava a private constructor
Add ScrollChange binding
handling deprecated method setBackgroundDrawable
Fix for #224.
Fix for #181. If sliding is enabled, but the view isn't clickable then the menu can not be opened because touch events will not be registered.
squash! Fix for #181. If sliding is enabled, but the view isn't clickable then the menu can not be opened because touch events will not be registered.
new support lib
classpath
set theme for preview activity
fix upside down ProGuard rules
add checkstyle.xml
adapt to check style
update CI
recover wrong wrap
recover wrong wrap
add zh-rTW string resources
added pt-br language support
Merge pull request #1 from bruferrari/feature/pt-br-translation
Implementation of feature that prevents retricted types to be shown on gallery
fixed pt-br strings
code refactoring
fix select bug
fix upside down ProGuard rules
Added methods for showing / hiding the BottomBar when on shy mode.
Better naming.
Refactored the hide / show methods to a separate ShySettings class, since they were only related for a shy BottomBar.
Merge branch 'development' into feature/show-and-hide
Made getting shy settings not throw an exception when the bottombar isn't shy, but have a log warning instead.
Added BottomBar behavior
Added BottomBar behavior
Added BottomBar behavior
feat (setItem): remove tabs before adding new tabs
feat (gitignore): ignore DS_store file for mac user
Fix issue with onRestoreInstanceState
Re-create badge object if needed
Fix for shadow (#716)
SelectableItemBackground Ripple! (#713)
Fix for wrong size in tabs
Tabs without titles (#717)
Show & Hide methods when on shy mode. (#722)
Made it possible to have individual titleless tabs. (#726)
Feature/optional long press toasts (#714)
Merge remote-tracking branch 'origin/development' into development
- Fix for shadow not respecting flag    - API 21+ was not using the flag at all    - API 20- where not removing the margin when no shadow was displayed    - API 20- set the default visibility of the shadow to GONE
Add OnMenuTabLongClickListener for detecting long click over tabs
Data binding fixes clean (#712)
Fix for shadow (#716)
SelectableItemBackground Ripple! (#713)
Fix for wrong size in tabs
Tabs without titles (#717)
Made it possible to have individual titleless tabs. (#726)
Feature/optional long press toasts (#714)
Merge remote-tracking branch 'origin/development' into development
Remove unnecessary theme config code that cause app crash before API 21
Add background color attribute
update background color from java
feat (show tabtext): added stylable to show tabtext
修改解析时的异常处理逻辑
Migrate getAuthedUser to use Designer News V2 API
Migrate getTopStories to use Designer News V2 API
Set app version name in build script instead of git tag.
Remove default proguard file from non-base modules
Mark dynamic-feature modules as not on demand
Move proguard config files around
Adding Dagger to search
Moving search classes to right packages
CollapsingTitleLayout & supporting code -> base
Continue resource refactoring
Move even more transitions to base
Move colors, styles and drawables to base
Fix proguard rules
Ignore AppCompatResource warning for now
Fix lint warning for missing width resource
Add missing copyright header
Apply style formatting for Kotlin files
Remove player list screen & related code & resources.
Remove Dribbble player screen.
Remove features from Dribbble shot no longer supported in v2.
Remove Dribbble login.
Remove unused dribbble API endpoints.
Remove v1 Dribbble sources from saved filters.
Spotless formatting.
Addressed review comments.
Updated DribbbleV1SourceRemoverTest to check return value.
Made Dribbble v1 source identiying fun private & updated test.
Add instructions to configure Android Studio with ktlint
Update formatting
Apply style formatting for Kotlin files
Remove onTransitionEnd listener after it is called to avoid username.showDropDown() be called on end transition by backpressed
Move "focusable" parameter above "textSize" for better organization.
Fix Issue #89
Fix consistent java.lang.IllegalStateException.
Merge remote-tracking branch 'refs/remotes/nickbutcher/master'
Optimize share story
Update gradle-wrapper
Merge branch 'master' of https://github.com/nickbutcher/plaid into upstream/master
Merge branch 'upstream/master' into optimize/start-story-share
Merge branch 'master' of https://github.com/nickbutcher/plaid into optimize/start-story-share
Remove empty line
Merge branch 'optimize/start-story-share'
Merge branch 'master' of https://github.com/nickbutcher/plaid into upstream/master
Merge branch 'master' of https://github.com/nickbutcher/plaid into upstream/master
Merge branch 'upstream/master'
Merge branch 'upstream/master'
Merge branch 'upstream/master'
Update .gitignore for ktlint support on CI
Update gradle
Add travis CI
Update README to add travis badge
Fix warnings in StoryViewHolder
Merge branch 'fix/warnings-in-StoryViewHolder' of https://github.com/XinyueZ/plaid into fix/warnings-in-StoryViewHolder
Merge branch 'upstream/master' into fix/warnings-in-StoryViewHolder
Making the login test pass
Rebased
将作者在自己网站上写的文章关联起来
Add explicit support for JWT tokens
Mention both ways of logging in
Fix check style
Fix unit tests
WIP. Primary work being done in ObjectServerConfiguration
Initial implementation of Session state machine. Begun adding OkHttp layer for network requests.
Session states + initial network implementation.
WIP
Restructuring credentials/user objects. Rename major classes. Cleanup configuration objects.
Cleanup event/error handlers
Merge branch 'master-sync' into cm/sync-api
Merge branch 'master-sync' into cm/sync-api
update tests, using new signed token
Merge branch 'master-sync' into cm/build-android-sync
adding gradle task to start node server, fixing tests
using CI server
adding Jenkins dependencies file
fixing build script
Implemented authenticate network request.
Add Object Server example
Merge branch 'master-sync' into cm/sync-api
Now compiles
Backup
Set global object server vars
Check for sync + check for auto connect
Fix C++ headers
Backup
Fix SyncManager calling native methods before library was loaded.
add task to wait for the server to start and kill previous pid
testing with nodejs instead of node
adding lsof command to Docker image
disabling the untar task
Properly start session when opening Realm. Improved session state logging.
update build
using gradle with debug
disabled PID
adding test report
fixing test report path
displaying node server output log
exporting logcat
changing log level
waiting for the node server to be up
fixinf gradle file
Successfully connected to the Sync server !!!
Errors are now correctly reported back to Java.
Syntax error and cleanup
Added preliminary login page to example project.
Added preliminary support for persisting users. Added support for creating users.
Demo working, but very brittle.
Don't require email as username
Added support for serializing user to JSON. Added support for setting local filename/location for synced Realms.
Ups, forgot files
Remove EventHandler. Add error codes from Auth server
Spelling
async methods on the UserStore
Showing better errors for auth errors in the example project
Split error callbacks into multiple classes. Added support for errors in the trivial cases in the Session FSM
First attempt at handling errors during a session
Move `createUser` to the credential type
Reverted wrong package renaming
Cleanup + add license
Added license to missing files
Cleaning up Session states and error handling
Cleanup + integrate SyncPolicy callbacks
Fix CI
Add logout button to example
Example cleanup. Added FIXME's to User
Better touch color
Fix lint failures
Fix another lint check
Disable broken unit tests for now
Build with OS sync support
Fix jenkins
Revert "Fix jenkins"
Try with https submodule
Revert "Revert "Fix jenkins""
adding an error log for node process
All errors are now reported on the Session object. Cleanup some docs. Example now only have IP in one place.
Run sync after chmod to work around a Docker bug
addig LD_LIBRARY_PATH to the ROS
update Docker & Jenkins conf
Merge remote-tracking branch 'origin/nh/build-android-sync' into nh/build-android-sync
using non root dir
Fixing conf
update Jenkins conf
fix NDK
Merged OS changes
using writable dir
using writable dir
Fix merge mistakes
creating /tmp/opt once
giving permission to /tmp/opt
giving permission to read ANDROID_NDK/RELEASE.TXT
giving permission to read ANDROID_NDK/RELEASE.TXT
Fix Javadocs not working
Fix unit tests
Merge branch 'master-sync' into cm/sync-api
listing dir
listing dir
listing dir
fixing path
remove server is up loop
fixing path on node server script
removing ls checks
cleaning up the script. dumping once the sync log
reset all ABI
Merge branch 'master-sync' into nh/build-android-sync
Fix REALM_ASSERT because of missing login function + cleanup
Merge branch 'master-sync' into cm/sync-api
Compiles and runs again but data is no longer synced for some reason.
Fixing tests after tye merge
Fixing path in Docker file
adding integrations tests gradle tasks
downloading OS
remove redundant git subomodule conf
printing NDK location
printing NDK location
printing NDK location
adding NDK location
adding NDK location
printing NDK location
printing NDK location
adding NDK location
adding stack trace to crash
remove transformer deps
adding location of NDK SDK
adding /tmp/opt/android-ndk
Syncs working again
Fix git module url
Merge branch 'master-sync' into cm/sync-api
Remove sample app. Part of another PR
Making async task executor public doesn't have to be part of this PR
Temporary exception for <11 devices.
Syntax error
Proper schema mode for sync.
Cleanup
Formatting
More cleanup
Use OS SyncClient + Support for modifying sync log level
Javadoc cleanup
Fix return type
Upgrade OS
Fix creating dirs + preliminary support for local user.
Timestamp from server is in seconds.
Fix checking expiry data for tokens
fixing branch
Merge remote-tracking branch 'origin/master-sync' into nh/build-android-sync
Merge remote-tracking branch 'origin/cm/sync-api' into nh/build-android-sync
Added more SyncConfiguration unit tests + fix test failures
Move all sync classes into the object server package. Add support for adding access tokens to users.
Move to new API's. Renamed packages to object serve.
PR feedback. Mostly cleaning up and language
Fix wrong import + warnings
Update OS
Rename to fix wrong casing
Fix Findbugs warnings
Merge branch 'cm/sync-api' into nh/build-android-sync
User now getting created correctly
enable local.properties to git ignore
Merge branch 'nh/build-android-sync' of https://github.com/realm/realm-java-private into nh/build-android-sync
Refactoring gone wrong
Fixed wrong method overrides
Remove helper methods from UserStore. Renamed login -> loginAsync. Added logging
Merge branch 'nh/build-android-sync' of https://github.com/realm/realm-java-private into nh/build-android-sync
fixing tests
Preparing for CI
remove loal.properties from GIT
More findbug errors
Fix PMD error
Fix Checkstyle warnings
Fix unit tests
add mising moudles
tests passing locally
fixing findbugs
fixing PMD
Merge remote-tracking branch 'origin/cm/sync-api' into nh/build-android-sync
Session/SyncPolicy made removed from the public API until further notice. Moved all ObjectStore classes under io.realm.objectstore. Added ObjectServerFacade for talking between ObjectServer and Realm API's
Merge remote-tracking branch 'origin/cm/sync-api' into nh/build-android-sync
avoiding the Javadoc errors
remove unused project
Merge remote-tracking branch 'origin/master-sync' into nh/build-android-sync
cleaning branch
minor code style
Merge remote-tracking branch 'sync/master-sync' into nh/build-android-sync
Create docker for the sync integreation test server
Revert the master dockerfile
At least one method in test
Unbunt docker image for sync
Enable arm only for CI testing
Fix JenkinsFile 2
Zip multi files Jenkins
Fix dockerfile
Fix checkstyle
remove useless files
Fix JenkinsFile 3
Add integration tests to the right flavor
Merge remote-tracking branch 'sync/master-sync' into nh/build-android-sync
Fix JenkinsFile 5
Fix JenkinsFile 6
Fix JenkinsFile 7
Add config
Missing file
Wrong path
More fix
Merge remote-tracking branch 'origin/releases' into nh/build-android-sync
Update sync server and other fix
Merge remote-tracking branch 'origin/releases' into nh/build-android-sync
ROS version in dependencies.list
PR fix
Separated docker for ROS on CI
Read ros version for Jenkins docker
Read dep props
fix ci
Fix docker build
Add name for docker run
Stop container in finally block
Revert "Add --rm to ros docker"
Stop the ROS container while still in the node
Autoremove the ros container
Revert the auto removal
Resolve ros docker ip
No need to forward adb ports
Revert "No need to forward adb ports"
Revert "Resolve ros docker ip"
Parse sysctl when run docker
Revert "Parse sysctl when run docker"
Revert "Forward localhost ports to ros docker"
Use mapped network for docker
PR feedback
Enable all ABIs
apt clean
Add comment about GC to all relevant change listeners
Fix RealmList code samples
Backup
Add RealmModel
Manually delete contents of tables (emulating deleteAll()).
Add proposal for fine-grained notifications API + sample imply (mostly for easier prototyping).
Small mistakes and layout fixes
Use proper naming conventions for generic parameters
Implement fine grained notification API
Fix tests and ObserverPair equals bug
PR fix
Fix javadoc format
Fix javadoc
Merge remote-tracking branch 'origin/mc/fine-grained-notification' into mc/realm-list-listener
PR fix
Merge remote-tracking branch 'origin/master' into mc/realm-list-listener
PR fix
Implement fine grained notification API
Fix tests and ObserverPair equals bug
PR fix
Fix javadoc format
Fix javadoc
Use int instead long for ChangeSet
Rename vars
Merge remote-tracking branch 'origin/master' into mc/fine-grained-notification
PR fix
added test cases exposing #5233
make RealmList.delete*() delete target objects.
Fixed a bug that RealmList.deleteFromRealm(int), RealmList.deleteFirstFromRealm() and RealmList.deleteLastFromRealm() did not remove target objects from Realm. This bug was introduced in 3.7.1 (#5233).
Fix tests
empty commit for part9
implement logic for primitive list in RealmList
fix annotation processor unit tests
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
throw an exception if query or aggregation feature is used for primitive list
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
fix tests
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
address findbugs issues
fix bug
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
implement Primitive List logic for copy() and insert()
implement Primitive List logic for insert(Realm, Iterator,...)
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
generate code for primitive list in update(), insertOrUpdate()
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
minor refactoring
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
implement primitive list supprt for copyFromRealm()
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
added a test to get field meta data of primitive lists
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix test
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Implement special handling for byte[] in RealmList
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
avoid unnecessary looping
use fqcn when makeing a string of value type.
fix RealmList.toString()
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix a bug
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix bugs
add instrumentation tests
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix a bug that annotation processor always generates schema of primitive list as nullable
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix implementation of RealmList.remove(Object)
fix RealmListTests
fix RealmListTests
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
added tests for 'copyToRealm()' and 'copyFromRealm()'
added tests for non-null primitive list
fix test
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix test
introduce Row.getModelList() and Row.getValueList() to check field type more precisely
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
update test case to expose an issue
address review feedback
add notice to Realm.*Json*()
simplify Proxy's createDetachedCopy()
stop to add backlink field into nullable field list
add comments to ClassMetaData.hasRequiredAnnotation() and  ClassMetaData.isRequiredField()
move Utils.getRealmListElementTypeMirror() to TypeMirrors class.
fix exception message
add class comment to TypeMirrors
add TODO comment
Merge branch 'feature/primitive_list' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'feature/primitive_list' into my/primitive_list_9_RealmList
remove outdate comment
fix todo comment
fix failing test
remove methods to return primitive array
Merge branch 'feature/primitive_list' into my/primitive_list_9_RealmList
Using constans defined in Table class
use assertArrayEquals() instead of assertTrue(Arrays.equals())
add changelog entry about removed methods
remove unused code
update comment
remove comment
update exception message
update thrown.expectMessage() to check exception message
fix test case name
add assertion for remove/removeAll
update RealmList.toString()
update exception message
fix failing tests
remove special handling to byte array in RealmList
remove special type conversion via Number in toArray()
remove unnecessary index checks
add Javadoc comments to ManagedListOperator and its subclasses
Merge branch 'feature/primitive_list' into my/primitive_list_9_RealmList
Javadoc for findFirstAsync
Rephrase
Add detailed notifcation for RealmObject
Rename RowObject
Format code
Clean interface
Remove useless code
Share RealmObject ObserverPairList with OsObject
Merge remote-tracking branch 'origin/master' into mc/object-notification
Remove unrelated backlink tests
Detailed notifications for RealmObject
Fix javadoc
Add missing tests
Fix javadoc
javadoc fix
Convert LogicError to ISE
T extends RealmModel for RealmObjectChangeListener
Add isFieldChanged
Add all fields change test
Doc fix
LogicError has been converted to ISE
PR fix
More fix for javadoc
Fix comments & javadoc
Merge remote-tracking branch 'origin/master' into mc/object-notification
RealmObject now uses the same interface methods for RealmObservable without implementing the interface....because compilers and kotlin
Reproduce #5899
More accurate test
Delete test no longer needed
Cleanup
Unused parameter
Add asserts
Remove readonly for defaultPermissionRealmConfig
Resume sending update messages Fixes #4418
Add a method to read the default configuration
Trying the two strings in #4025
Wrong year
Count 'cpuX' files in /sys/devices/system/cpu as a more accurate way   of counting processors and setting the max threads for the Executor. (#3810)
Suppress Findbugs warning
Better comments; Default to Runtime.getRuntime().availableProcessors()
Activated Realm's annotation processor on connectedTest when the project is using kapt (#4008).
remove ObjectServerUser
add multiple session tests
Merge remote-tracking branch 'origin/master' into nh/rm_object_server_user
Add regression test for old SyncUser JSON
Update examples
Fixing PMD issue
Disabling false positive findbugs warning
Fixing unit test
Fix typo
WIP
WIP
Merge remote-tracking branch 'origin/master' into nh/rm_object_server_user
Using identity with authURL to identity a SyncUser
Fixing tests
Merge remote-tracking branch 'origin/master' into nh/rm_object_server_user
update OS commit
update CHANGELOG
update chaneglog
fix CHANGELOG.md
Merge remote-tracking branch 'origin/master' into nh/rm_object_server_user
Merge remote-tracking branch 'origin/master' into nh/rm_object_server_user
fix compile issue
PR feedback
Try to create getFilesDir if it doesn't exist on startup. Otherwise throw IllegalStateException
Return from method as soon as possible in the happy path.
Rename to filesDir
Better exception message
Expose bug
Only call listener after all RealmResults are updated.
Updated changelog
Try to streamline listener logic.
Cleanup
whitespace
Fixed race condition between Realm change notifications and other events.
Introduce LOCAL_COMMIT.
Whitespace
More tests
PR feedback
Merge branch 'cm/bug/listener-interaction' into cm/post-at-front-of-queue
Add warning if mixing local writes and async queries
Merge branch 'releases' into cm/post-at-front-of-queue
Remove duplicated tests.
Cleanup
Whitespace
Merge branch 'releases' into cm/post-at-front-of-queue
Prevent triggering unnecessary REALM_CHANGED events. Spelling
Added logging
Indentation
Merge branch 'releases' into cm/post-at-front-of-queue
Support wait_for_changes
Add multi process examples.
Example fix
Send REALM_CHANGE manually for async transaction
Merge branch 'master' into mc-multi-process
Ranaming and java doc
Wait until daemon thread exit
Make mysterious test case simpler
Merge remote-tracking branch 'origin/master' into mc-multi-process
Add RealmAsyncTask.isDone to fix flaky test
Moving to JUnit.
Adding test of auto resorting on Looper threads
PR feedback
Fix bug when using distinct() and count()
Fix javadoc
Clear pending collection first for findFirstAsync
Merge branch 'releases' into mc/bug/4495
Merge remote-tracking branch 'origin/releases' into mc/bug/4495
fix comment
fix comments.
Fake update of changelog
Fix spelling
Merge branch 'master' into feature/partial-sync
WIP
Merge branch 'master' into cm/partial-sync/subscribe-query
Add support for new states in OrderedChangeSet
Use object store branch in progress
Use updated Object Store commit
Fixes to integration tests
Upgrade sync
PR feedback
Disable hiding information. In some cases we depend on it.
Respect old listener behaviour.
Fix unit tests
Fix error reporting.
Move INCOMPLETE states to boolean instead
Add missing method
Cleanup states and their descriptions. Added more unit tests to verify notification behaviour.
Fix unit tests leaking Realms
Fix unit tests
Merge branch 'next-major' into cm/partial-sync/subscribe-query
PR feedback
More PR feedback
added a test that reproduce #4662
2017
enable connectedCheck agains examples
Merge branch 'releases' into my/issue4662
Support wait_for_changes
Add multi process examples.
TypeBasedNotificationsTest fix
Example fix
Send REALM_CHANGE manually for async transaction
Merge branch 'master' into mc-multi-process
Test case fix
Ranaming and java doc
Wait until daemon thread exit
Make mysterious test case simpler
Merge remote-tracking branch 'origin/master' into mc-multi-process
Merge remote-tracking branch 'origin/master' into mc-multi-process
Add RealmAsyncTask.isDone to fix flaky test
Javadoc for findFirstAsync
Rephrase
making HandlerController#emptyAsyncRealmObject & HandlerController#realmObjects thread safe
update findbugs rule
PR feedback
update CHANGELOG
Merge remote-tracking branch 'origin/releases' into nh/fixes_2724
java_class_global_def for global class loading
Update the documentation for downloading the NDK. Fixed #4057
Respond to comments
Allow to call its accessors, and replace its field accesses with accessor calls in model's constructor.
use field instead of checking transaction
fix a bug that acceptDefaultValue is not set correctly
reject default values when the getter of a model creates other model object
add simple test for default value
supports default value of model field
supports default value of RealmList fields
add tests for assignment in constructor and setter in constructor
update javadoc comments of createObject
update javadoc
add a test for default values handling in copyToRealm(). the last assertion of RealmTests.copyToRealm_defaultValuesAreIgnored() is failing now.
refactor tests
use isPrimaryKey()
fix a bug that unexpected realm object is created by default value of RealmModel/RealmList fields
Merge branch 'master' into my/issue777
add more tests for default value
fix tests
fix a bug that creates unexpected objects
update changelog
update CHANGELOG
review comments
update CHANGELOG
added a description of how proxy object should be created in the Javadoc comment of RealmProcessor
Change log and java doc fix
addEmptyRow won't check PK anymore
Remove dup lines
Update javadoc for json APIs
Fix grammar
Deprecate a method.
Class name may get obfuscated.
PR fix
accept new version file (sources.properties) in NDK
Adding object store and use C++14 to compile it
Adding object store and use C++14 to compile it
Wrapping Realm::Configuration
Further work on RealmConfiguration
WiP
Fixing bugs in RealmConfiguration
Merge branch 'kg/jni/object-store' of github.com:realm/realm-java into kg/jni/object-store
Resolve all
Adding include path
Merge remote-tracking branch 'origin/master' into kg/jni/object-store
Squashed 'realm/realm-jni/src/object-store/' content from commit d0763d5
Merge commit 'da31d6270f7675e46ccb6f41fe90a39b12203fa2' as 'realm/realm-jni/src/object-store'
Change the header file location
Verify schema for backlinks by OS
fixes issue #5855 step-1
Fixes #5855
update changelog
Merge branch 'master' into nh/fixes_5855_changelistener
Merge remote-tracking branch 'origin/master' into nh/fixes_5855_changelistener
Refactored tests
Merge branch 'nh/fixes_5855_changelistener' of https://github.com/realm/realm-java into nh/fixes_5855_changelistener
revert OS commit
Merge branch 'master' into nh/fixes_5855_changelistener
Upgrade to Sync 2.2.9
Merge branch 'cm/upgrade-sync' into cm/support-linktypes
Add support for Weak/Strong links
Use only annotation if relationship is strong
Cleanup
Add missing boolean
Merge branch 'master' into cm/support-linktypes
Adding test
Follow table links and not query links
Adding entry in change log
Updating change log
Fix gridView.
Add missing proguard configuration file.
PR feedback.
Fixed javadoc
fix more javadoc
Better exception message if non model class is provided as function argument
Update Util.java
wording
Merge branch 'releases' into cm/bug/better-exception-msg
Unit test for #4140.  Failing.
Simplify the test
Merge remote-tracking branch 'origin/releases' into blake/4140
Set sys tmp dir when init
Update Object Store
Add changelog
Work around the memmove bug on sumsung device
stupid pointer mistake
3rd try, use kg's test and builtin fun
Logging if memmove() isn't broken
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Work around the memmove bug on sumsung device
Use bcopy() from FreeBSD
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
PR fix
Merge remote-tracking branch 'origin/releases' into mc/bug/hack-memmove
Remove useless log
Switching to DRY libc11's implementations
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
fixing compilation error
Fix leaking file handlers.
Cleanup javadoc
Handle transaction for schema updates
Preparing RealmMigration integration
Free object on nativeBatchUpdateQueries after each iteration.
Use unique_ptr to handle NULLs
Remove obsolete delete statement
fix intro Lint warning
fixing lint warnnings for gridViewExample
fix lint warnnings for moduleExample
fix lint warnnings for threadExample
initial project setup
add UI
 add Store interface to decrypt/encrypt
implement keystore/fingerprint logic
add 'Open List' button
fix for lint warnings
Update Realm.java
RealResults is not synced in global listener
PR fix and change log
minor fix
WIP
Merge branch 'master' into cm/bug/iterators
WIP
Merge branch 'master' into cm/bug/iterators
Javadoc fixes
Merge branch 'master' into cm/bug/iterators
Added support for RealmResults.listIterator() + unit tests.
Added notification tests for none-synched RealmResults.
Fix refreshing of tableviews.
Better error reporting from RunInLooperThread
Thread local notifactions are now triggered using the Looper instead of immediately
Merge branch 'master' into cm/handler-notifications
PR feedback
PR feedback
Refactor notify listeners
Merge branch 'cm/handler-notifications' into cm/bug/iterators
Backup
Backup
Fixed wrong object returned for deleted objects.
More unit test fixes.
Merge branch 'master' into cm/bug/iterators
refresh send a REALM_CHANGED for looper thread
Merge remote-tracking branch 'origin/master' into cm/handler-notifications
It's alive .... almost.
Merge branch 'master' into cm/bug/iterators
Unit test fixes
More unit test fixes.
Merge branch 'nh/refresh_send_realmchanged' into cm/bug/iterators
It's alive....finally.
Fix style issues.
Paramaterized the iterator tests.
More unit tests.
Added RealmCollection and OrderedRealmCollection interface. Refactored RealmList/RealmResults unit tests.
Merge branch 'master' into cm/collection-interfaces
PR Feedback
Merge branch 'master' into cm/collection-interfaces
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Merge branch 'releases' into cm/collection-interfaces
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Merge branch 'master' into cm/collection-interfaces
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Fix unit tests
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Fix unit tests.
Merge branch 'master' into cm/collection-interfaces
Cleanup
Merge branch 'master' into cm/collection-interfaces
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Unit test fixes.
Javadoc fixes
Cleanup javadoc + clarify contains behaviour
Cleanup unit tests
Fix unit test
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Merge branch 'master' into cm/bug/iterators
Fixing unit tests.
Merge branch 'master' into cm/bug/iterators
Combine unit tests in one class.
Begun unifying unit tests
Roar unit tests
More unit tests + all unsupported methods now throw UnsupportedOperation instead of RealmException
Remove replaced tests.
Cleanup
Fix check style
Merge branch 'master' into cm/bug/iterators
Language and comment fixes.
Merge branch 'master' into cm/bug/iterators
Pr comments
Remove description from UnsupportedOperation
Expand comment on depends_on_deleted_linklist
Make comment more precise
Added RealmList ConcurrentModification tests
Add more ConcurrentModification unit tests.
Simplify test
More ConcurrentModification checks
PR feedback
Merge branch 'master' into cm/bug/iterators
Restricted visibility of constants
Merge branch 'master' into cm/bug/iterators
Cleanup changelog
Don't test in looper thread
Update realm-sync to 1.10.0
Merge remote-tracking branch 'origin/master' into mc/execption-sync-client-thread
Update sync to 1.10.1
Merge remote-tracking branch 'origin/master' into mc/execption-sync-client-thread
typo
Wrong changelog entry
typo
Add the gradle task for Robolectric.
Add Robolectric example.
Merge branch 'master' into lk/robolectric
Add librealm-jni-darwin.dylib temporarily
Update test example.
Use Gradle plugin instead of using a prebuilt file.
Apply statc core lib.
Fix 'gradle assemble'
Merge remote-tracking branch 'origin/master' into lk/robolectric
Update robolectricExample
Add missing dylib file.
Merge remote-tracking branch 'origin/master' into lk/robolectric
update librealm-jni-darwin.dylib
Modify gradle scripts and change native lib path.
Delete many tests.
Fix buildRobolectric.
Add robolectricDistribuitionPackage.
Change the Robolectric distribution filename.
Add uploadRobolectricDistributionPackage
Fix a problem with ReLinker.
Update changelog.txt
Add download Realm Robolectric for Robolectric example.
Merge branch 'master' into lk/robolectric
Add .gitignore.
Delete unused Proguard rules.
Improve formatting and change names and sentences as reviews.
Improve formatting.
setProperty is moved to @BeforeClass method to prvent setting per test.
Fix a broken build.gradle
Use a very simple tests instead of RealmTest.
Update a launcher icon.
Fix a broken icon reference.
Remove unused imports.
Fix a typo
Remove unused imports.
Introduce the environment variable REALM_CORE_LIB
Remove unnecessasry imports and variables and reaname fields.
Remove unnecessary TestHelper.
robolectricExample only has 1 test now.
Modify assembleRobolectric task little.
Locale.getDefault() -> Locale.US
Fix weird formmaing.
Support the debug version of Robolectric for Darwin.
robolectricLibs -> src/test/libs
Introduce RealmRobolectricRule
Add missing javadoc comments.
Use REALM_ROBOLECTRIC to skip log libary instead of checking OS.
Support coreSourcePath to build the static Realm Core lib.
Fix typo.
Merge branch 'master' into lk/robolectric
Fix typo
Provide groups for all new tasks.
The task of Gradle plugin has inputs and outputs.
Split bit assembleRobolectric task into three tasks.
Fix copyright.
Fix typo
de.undercouch:gradle-download-task is moved to Gradle plugin.
Apply @Rule for RealmRobolectricRule.
Fix typo.
Merge branch 'master' into lk/robolectric
PR feedback
Merge branch 'master' into lk/robolectric
Merge branch 'master' into lk/robolectric
PR feedback.
Fix a bug using string instead of variable.
Fix RealmRobolectricRule correctly.
Fix style.
Fix checking System.env.REALM_CORE_HOME
Fix invoking RealmConfiguration.Builder.
testapk is moved to Gradle plugin realm-android
Merge branch 'master' into lk/robolectric
Remove unnecessay plugin.
Merge branch 'master' into lk/robolectric
Allow mor leniency when defining the server url
Fix imports
Better unit tests and adjusted Changelog + Javadoc
Fix findbugs error
Work around the memmove bug on sumsung device
stupid pointer mistake
3rd try, use kg's test and builtin fun
Logging if memmove() isn't broken
use __realm_memove for testing
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
use memmove impl from kernel
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Use bcopy() from FreeBSD
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
PR fix
Merge remote-tracking branch 'origin/releases' into mc/bug/hack-memmove
Remove useless log
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
fixing compilation error
Fake update of changelog
Fix spelling
Merge branch 'master' into feature/partial-sync
WIP
Add support for new states in OrderedChangeSet
Cleanup
Merge branch 'master' into cm/partial-sync/subscribe-query
Use object store branch in progress
Use updated Object Store commit
Fixes to integration tests
Upgrade sync
PR feedback
Disable hiding information. In some cases we depend on it.
Fix unit tests
Fix error reporting.
Move INCOMPLETE states to boolean instead
Add missing method
Cleanup states and their descriptions. Added more unit tests to verify notification behaviour.
Fix unit tests leaking Realms
Cleanup
Fix unit tests
Add support for named subscriptions
Fix tests and build
Merge branch 'next-major' into cm/partial-sync/subscribe-query
PR feedback
More PR feedback
Remove delay
More PR feedback
Merge branch 'next-major' into cm/partial-sync/subscribe-query
Merge branch 'cm/partial-sync/subscribe-query' into cm/partial-sync/named-subscriptions
Fix unit tests for named subscriptions.
Revert timeout changes
Use correct version of ObjectStore
Merge branch 'next-major' into cm/partial-sync/named-subscriptions
PR feedback
Fix compiler issue
Fix template specialization and merge error
Use proper version of ObjectStore
RealResults is not synced in global listener
PR fix and change log
minor fix
Workaround to add android.jar for transform
Fix list.move for unmanaged lists.
Merge branch 'releases' into cm/bug/realmlist-move
stupid pointer mistake
3rd try, use kg's test and builtin fun
Logging if memmove() isn't broken
use __realm_memove for testing
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Work around the memmove bug on sumsung device
PR fix
Merge remote-tracking branch 'origin/releases' into mc/bug/hack-memmove
Remove useless log
Only apply the hack to arm32
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
fixing compilation error
add @Nullable annotation to objectserver APIs
fix compile error in example
remove @Nullable annotation from equals(Object)
Merge branch 'master' into my/nullable_annotation
Merge branch 'master' into my/nullable_annotation
remove @Nonnull annotation from each overriding methods. Add more package-infos instead.
remove @Nonnull from parameters
remove @Nonnull from parameters
remove @Nonnull from parameters
remove unused import
add 'Nullability by Annotataion' section to CONTRIBUTING.md
fix typo in CONTRIBUTING.md
replace 'assert' with 'noinspection' comment
add more @Nullable annotation to address findbugs warnings
Merge branch 'master' into my/nullable_annotation
Add support for @RealmName which makes it possible to override the name of classes and fields.
Merge branch 'master' into cm/realmname-annotation
Merge branch 'master' into cm/realmname-annotation
Merge branch 'master' into cm/realmname-annotation
Fix compile issues
Fix Javadoc and most unit tests.
Add test for conflicting modules
Begun work on checking conflicting policies
Merge branch 'master' into cm/realmname-annotation
Merge branch 'master' into cm/realmname-annotation
Fix merge
Use correct version of Object Store
Better docs
Backup
Processor tests are green
Fleshing out unit tests for using name policies in annotations
Cleanup
Fix required value lists + cleanup
Fix module defaults not being correctly applied
Add support and unit tests for field name overrides
Add changelog
Javadoc updates
Use custom built parser for converting variable names
Better Javadoc
RealmField is now retained at Runtime
Fix unit tests
Unify build tools
Merge branch 'cm/realmname-annotation'
Remove FIXMEs
Fix tests after merge from master
PR feedback
PR feedback
More PR feedback
Output correctly internal name
Fix library module mediators not being correctly created
Fix missing spaces in error message
Better example
WIP
Merge branch 'master' into cm/bug/iterators
WIP
Merge branch 'master' into cm/bug/iterators
Cleanup current unit tests.
Javadoc fixes
Added support for RealmResults.listIterator() + unit tests.
Added notification tests for none-synched RealmResults.
Merge branch 'master' into cm/bug/iterators
Fix refreshing of tableviews.
HandlerController is always available.
Thread local notifactions are now triggered using the Looper instead of immediately
Merge branch 'master' into cm/handler-notifications
PR feedback
PR feedback
Refactor notify listeners
Merge branch 'cm/handler-notifications' into cm/bug/iterators
Backup
Backup
Merge branch 'master' into cm/bug/iterators
refresh send a REALM_CHANGED for looper thread
Merge remote-tracking branch 'origin/master' into cm/handler-notifications
It's alive .... almost.
Merge branch 'master' into cm/bug/iterators
Merge branch 'master' into cm/bug/iterators
Unit test fixes
removed unecessary boolean
More unit test fixes.
Merge branch 'nh/refresh_send_realmchanged' into cm/bug/iterators
It's alive....finally.
Cleanup
Fix style issues.
More unit tests.
Added RealmCollection and OrderedRealmCollection interface. Refactored RealmList/RealmResults unit tests.
Merge branch 'master' into cm/collection-interfaces
PR Feedback
Merge branch 'master' into cm/collection-interfaces
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Merge branch 'releases' into cm/collection-interfaces
Merge branch 'master' into cm/collection-interfaces
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Fix unit tests.
Merge branch 'master' into cm/collection-interfaces
Cleanup
Merge branch 'master' into cm/collection-interfaces
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Unit test fixes.
Javadoc fixes
Cleanup javadoc + clarify contains behaviour
Cleanup unit tests
Fix unit test
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Merge branch 'master' into cm/bug/iterators
Fixing unit tests.
Merge branch 'master' into cm/bug/iterators
Combine unit tests in one class.
Begun unifying unit tests
Remove replaced tests.
Cleanup
Fixed Findbugs errors
Fix check style
Merge branch 'master' into cm/bug/iterators
Language and comment fixes.
Merge branch 'master' into cm/bug/iterators
Pr comments
Remove description from UnsupportedOperation
Expand comment on depends_on_deleted_linklist
Make comment more precise
PR feedback
Add more ConcurrentModification unit tests.
Simplify test
More ConcurrentModification checks
PR feedback
Merge branch 'master' into cm/bug/iterators
Restricted visibility of constants
Merge branch 'master' into cm/bug/iterators
Cleanup changelog
Add OrderedRealmCollectionSnapshot
Merge remote-tracking branch 'origin/kneth/object-store/results' into mc/collection-snapshot
Fix doc & typos
Add example to OrderedRealmCollection
Fix typo
Rename enums
Fix javadoc
Expose bug
Updated changelog
Cleanup
whitespace
Fixed race condition between Realm change notifications and other events.
Introduce LOCAL_COMMIT.
Whitespace
More tests
PR feedback
Remove duplicated tests.
Fix unit tests
Cleanup
Merge branch 'releases' into cm/post-at-front-of-queue
Prevent triggering unnecessary REALM_CHANGED events. Spelling
Indentation
Merge branch 'releases' into cm/post-at-front-of-queue
Merge branch 'master' into feature-rxjava
Merge branch 'master' into feature-rxjava
Fix unit test
Cleanup
Cleanup imports
Fix javadoc
Fix unit test.
Backup
Merge branch 'master' into cm/feature-rxjava-realmquery
Backup
Merge branch 'master' into cm/feature-rxjava-realmquery
Refactor unit tests
More unit tests
Re-enable all architectures
Added proper error checking to RealmQuery observables.
Use .create() instead of .defer()
Merge branch 'master' into cm/feature-rxjava-realmquery
Merge branch 'master' into cm/feature-rxjava-realmquery
Updated changelog
Merge branch 'master' into cm/feature-rxjava-realmquery
Refactor unit tests.
Merge branch 'master' into cm/feature-rxjava-realmquery
Merge branch 'master' into cm/feature-rxjava-realmquery
Fix Findbugs error.
Merge branch 'master' into cm/feature-rxjava-realmquery
Spelling and cleanup
Revert "Removed deprecated methods from Realm. Bumped dev version to 0.83.0"
Update core to v0.89.7
Add changes from TestHelper.java back
Update core to v0.89.8
Update core to 0.89.9
Activated Realm's annotation processor on connectedTest when the project is using kapt (#4008).
Upgrade to Sync 2.0-BETA
Fix core version and OS submodule
Try sync with fix
Update sync package sha
Try a new release of sync - without libcrypto
Merge branch 'releases' into cm/public-download
Use repackaged BETA-2.0
Use repackaged version with libcrypto included twice
Merge branch 'cm/public-download' of https://github.com/realm/realm-java into cm/public-download
Merge branch 'releases' into cm/public-download
Trigger collection listeners when commit
Fix test
Make Javadoc and exception messages around isLoaded more meaningful.
PR comments
PR comments
Merge branch 'releases' into cm/isloaded-javadoc
Expose bugs with findFirst
Fix findfirst with sorting
Merge branch 'releases' into cm/bug/findfirst
Add changelog
Add constricting view test
Remove test not needed
Update sync to 2.0.0-rc25
Minimal unit test for reproducing failure
Update unit test
Linking to debug sync cuases magic crash.
Revert to debug builds but ignore any failing unit tests
Update to ROS-2.0.0-alpha.42, Sync-RC26 and Core 4.0.1 (#5355)
Merge branch 'master' into mc/update-sync-rc25
Disable really flaky test
Fixed a bug that the classes were replaced with a class in Gradle's classpath (#3568).
update changelog entry
Tests, benchmark and clean up
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Code formatting
Fix findbug issues
Clean up and commit message
Get finalizer ptr only once
Fix findbug issues
CheckRow should not do native destruction
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Adapt to cmake
Naming changes.
Remove unused nativeClose()
Make GCTest faster.
Fix comments in context
Remove disabled test
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Benchmark compile error
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Add missing header
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Remove LinkView.nativeClose()
Fix comment
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
PR fix
Fix function pointer casting
Test case to reproduce #1851
try without daemon
Revert "try without daemon"
disable build cache
add extra dependencies
disable parallel build
diavle gradle daemon
add org.gradle.configureondemand=false to examples/build.gradle
disable gradle cache
update android gradle plugin to 3.0.0-alpha6
Merge branch 'releases' into my/agp_3.0-alpha5
update agp to 3.0.0-alpha7
Merge branch 'releases' into my/agp_3.0-alpha5
Merge branch 'releases' into my/agp_3.0-alpha5
update gradle wrapper to 4.1-rc1
update gradle wrapper to 4.1-rc2
update androiod gradle plugin to 3.0.0-alpha9
Merge branch 'releases' into my/agp_3.0-alpha5
build twice to work around a bug in agp 3.0 that first build after clean will fail
fix Jenkinsfile
Merge branch 'releases' into my/agp_3.0-alpha5
Merge branch 'releases' into my/agp_3.0-alpha5
fix Jenkinsfile
Merge branch 'releases' into my/agp_3.0-alpha5
update gradle wrappers to 4.2-20170807235738+0000
update android gradle plugin to 3.0.0-beta1
revert Gradle workaround
fix indent
revert changes in gradle.properties
Revert "revert Gradle workaround"
update android gradle plugin to 3.0.0-beta2
enable D8 in examples/newsreaderExample
Merge branch 'releases' into my/agp_3.0-alpha5
Merge branch 'releases' into my/agp_3.0-alpha5
Merge branch 'releases' into my/agp_3.0-alpha5
Merge branch 'releases' into my/agp_3.0-alpha5
Merge branch 'releases' into my/agp_3.0-alpha5
update Gradle wrappers to 4.2-rc1
update android gradle plugin to 3.0.0-beta4. Build fails because of https://issuetracker.google.com/issues/65336086
Update Android Gradle Plugin to 3.0.0-beta5. It stll has an issue for cmake build.https://issuetracker.google.com/issues/65336086
Merge branch 'releases' into my/agp_3.0-alpha5
Merge branch 'releases' into my/agp_3.0-alpha5
update android gradle plugin to 3.0.0-beta6 (still broken)
update gradle wrapper to 4.2-rc2
Merge branch 'releases' into my/agp_3.0-alpha5
update android gradle plugin to 3.0.0-beta7
update Gradle wrappers to 4.2.1
revert changes in Jenkinsfile
add task dependency
update android gradle plugn to 3.0.0-alpha1
use new dependency configurations
fix errors
implement new dependency configuration support in realm plugin (no old android gradle plugin support for now)
use new scope support in realm transformer(no old android gradle plugin support for now)
fix rwong variable name
revert the change of getReferencedScopes(). We can expect that the next alpha release of AGP 3.0 does not print warnings.
fix dependency configuration
fix dependencies and typo
add org.gradle.caching=true to each gradle.properties
Merge branch 'releases' into my/agp_3.0.0
update agp to 3.0.0-alpha2
Merge branch 'releases' into my/agp_3.0.0
Merge branch 'releases' into my/agp_3.0.0
update gradle wrapper to 4.0.0-rc-1
update agp to 3.0.0-alpha3
rollback gradlw wrapper to 4.0.0-milestone-1
Update Gradle to 4.0 Official release.
update android gradle plugin to 3.0.0-alpha4
Merge branch 'releases' into my/agp_3.0.0
detect configuration name
use google() insteadof maven { url 'https://maven.google.com' }
Merge branch 'releases' into my/agp_3.0.0
remove unnecessary loop
Merge branch 'releases' into my/agp_3.0.0
update android gradle plugin in library-benchmarks/build.gradle
add tasks for assemble
update build tools to 26.0.0
Merge branch 'releases' into my/agp_3.0.0
fix merge mistake
Merge branch 'releases' into my/agp_3.0.0
disable AAPT2 to work around an issue of Robolectric in unitTestExample
use 'api' configuration instead of 'implementation' when adding Realm to user project dependencies
address review comments
added Android Studio version requirement
Add tests for multiple logged in users.
Merge branch 'master' into cm/syncuser-currentuser-throws
Use proper OS version
Fix unit test + throw correct exception type
Fix unit test
Remove unnecessary imports.
Convert all std::logic_error to IllegalStateExceptions. Make unit test more failsafe
@PrimaryKey in String, Byte, Short, Integer, and Long types can be null.
copyToRealmOrUpdate cause dup values in list field
changelog fix
Merge remote-tracking branch 'origin/releases' into mc/bug/4957
Added template methods.
Merge branch 'master' into cm-new-migration
Added methods for controlling primary key and index.
Added unit tests for index/primary keys. Refactored unit tests for brevity.
Added more safety checks.
Added methods to DynamicRealmObject.
Merge branch 'master' into cm-new-migration
Merge branch 'master' into cm-new-migration
Added stub implementation for DynamicRealmList + unit tests
Merge branch 'master' into cm-new-migration
Added basic DynamicRealmList + unit tests.
Merge branch 'master' into cm-new-migration
Fixing unit tests.
Fixed unit tests.
Cleanup
More cleanup
Merge branch 'master' into cm-new-migration
PR fixes.
Squashed commit of the following:
Merge branch 'cm-checkedrow' into cm-dynamic-api
Disable unit test until it works. Fixed merge mistakes.
Merge branch 'master' into cm-dynamic-api
Added setter unit tests.
Merge branch 'master' into cm-dynamic-api
Added DynamicObject setters + JavaDoc + unit test.
Reenable JNI architectures and unit tests.
Added toString() method.
DynamicRealmList tests and JavaDoc
Cleanup
newline
Merge branch 'cm-dynamic-api' into cm-new-migration
Begun adding javadoc.
Hides Row from DynamicRealmObject constructor.
Added missing Javadoc
Added support for byte
Use more correct type.
Renamed getters/setter for blobs to match SQLite. Added remove method.
Added byte setters/getters. Streamlined byte array naming.
Cleanup
Remove interface.
PR fixes.
PR fixes.
Added all unit tests for RealmObjectSchema
PR fixes.
Fields are columns internally.
Merge branch 'master' into cm-dynamic-api
PR fixes + added getType()
Added missing transaction
Improved JavaDoc
Spelling
Merge branch 'master' into cm-new-migration
Renaming according to feedback.
Backup
Fixing unit test using reflection.
Fixed default file name.
Refactored shared code to RealmInstance and RealmFileWrapper.
Disable Dynamic unit tests as the DynamicRealm isn't included.
Fixed unit test.
Moved more methods to RealmInstance
Backup with DynamicRealm
Renamed RealmFileWrapper to SharedGroupManager and RealmInstance to RealmBase + other refactors for cleaner separation
Cleanup
Fixed accessibility issues + unit test.
Merge branch 'master' into cm-realmfilewrapper
Make RealmBase public and move JavaDoc there.
Doc fix.
Merge branch 'cm-realmfilewrapper' into cm-dynamic-realm
Backup
Merge branch 'master' into cm-realmfilewrapper
Merge branch 'cm-realmfilewrapper' into cm-dynamic-realm
Introduced DynamicRealm, DynamicRealmQuery, DynamicRealmResults.
SharedGroup no longer shared between Realm and DynamicRealm
Moved close() to base realm
Fixed local cache bug.
Made fields as restrictive as possible.
Merge branch 'master' into cm-realmfilewrapper
Merge lessons learned when adding DynamicRealm
Merge branch 'master' into cm-realmfilewrapper
Cleanup synchronized methods + JavaDoc
Added Case and Sort enums for queries.
Updated changelog.
Fixed examples.
Merge branch 'cm-realmfilewrapper' into cm-dynamic-realm
JavaDoc
Added generic setter.
Realm and DynamicRealm completely split.
Merged dynamic/main packages. Major cleanup
More cleanup
Merge branch 'master' into cm-flag-to-enums
Moved new enums to io.realm
Fixed example
Fix kotlin example.
ColumnType renamed to RealmFieldType and moved to public API
Merge branch 'master' into cm-flag-to-enums
Added license
Fix indentation
Merge pull request #1493 from realm/cm-flag-to-enums
Merge branch 'cm-feature-dynamic-migration-api' into cm-realmtype
Fixed migration example.
Merge branch 'master' into cm-feature-dynamic-migration-api
Merge branch 'cm-feature-dynamic-migration-api' into cm-dynamic-realm
Javadoc cleanup
Cleanup naming + Javadoc fix.
Added support for allObjects and clear on DynamicRealm + unit tests. Refactored RealmResults to use factory constructors.
Fixed merge mistake.
Merge branch 'cm-feature-dynamic-migration-api' into cm-dynamic-realm
Added missing unit tests for DynamicRealmObject. Hide BACKLINK type until needed.
Added unit test for failing implicit conversion.
Cleanup
Merge branch 'master' into cm-dynamic-realm
Merge branch 'cm-dynamic-realm' into cm-new-migration
More unit tests
Added JNI exception for not deleting classes with references.
Added unit test for class name length.
Improve unit test and rename containsClass
Cleanup
Added dynamic design doc.
Line wrapping
Updated doc to match current state
Updated with new methods.
Added template methods.
Backup
Added methods for RealmSchema. Begun adding methods for RealmObjectSchema.
Added unit tests for index/primary keys. Refactored unit tests for brevity.
Added more safety checks.
Added methods to DynamicRealmObject.
Merge branch 'master' into cm-new-migration
Added stub implementation for DynamicRealmList + unit tests
Merge branch 'master' into cm-new-migration
Added basic DynamicRealmList + unit tests.
Merge branch 'master' into cm-new-migration
Fixing unit tests.
Fixed unit tests.
Cleanup
More cleanup
Merge branch 'master' into cm-new-migration
Merge branch 'cm-checkedrow' into cm-dynamic-api
Disable unit test until it works. Fixed merge mistakes.
Backup
Added setter unit tests.
Merge branch 'master' into cm-dynamic-api
Added DynamicObject setters + JavaDoc + unit test.
Reenable JNI architectures and unit tests.
Added toString() method.
DynamicRealmList tests and JavaDoc
Cleanup
newline
Merge branch 'cm-dynamic-api' into cm-new-migration
Begun adding javadoc.
Hides Row from DynamicRealmObject constructor.
Merge branch 'cm-dynamic-api' into cm-new-migration
Added missing Javadoc
Added support for byte
Fix unit test + cleanup
Use more correct type.
Renamed getters/setter for blobs to match SQLite. Added remove method.
Added byte setters/getters. Streamlined byte array naming.
Cleanup
Remove interface.
PR fixes.
PR fixes.
Added all unit tests for RealmObjectSchema
PR fixes.
Fields are columns internally.
Merge branch 'cm-dynamic-api' into cm-new-migration
Updated migration example to use new Migration API
initial fix for #3809
Downgrade version of Javassist causing issue with classloader at runtime #5641
Update Changelog
Fixes issue with incremental build causing direct access to model without accessor to fail (#6056).
Merge branch 'releases' into nh/fix_incremental_build
add a simple test case to expose #4258
Merge branch 'releases' into my/issue4258
update Changelog
fix issue4258
fix test process crash when RealmListTests#add_set_dynamicObjectFromOtherThread() fails
Merge commit '7632433fb6d76e8b3bb6ac609407196365b5f676' as 'realm/realm-jni/object-store'
Merge pull request #2915 from realm/mc/feature/os-subtree
Merge commit '2395585a0ab92192cf23a3723167b91f4109d37d' into feature/object-store
Squashed 'realm/realm-jni/object-store/' changes from 91c87e4..57ee591
Merge pull request #2931 from realm/mc/feature/os-sync-upstream
Squashed 'realm/realm-jni/object-store/' changes from 57ee591..64e733e
Merge commit '9409cd68a3a7604ffe9ad688139328c36eb617a1' into feature/object-store
Adding object store and use C++14 to compile it (#2916)
gcc is overly paranoid (#2961)
Move JNI build to cmake
Build object store through cmake
Merge pull request #2997 from realm/mc/feature/os-cmake
Disable armeabi build for now (#2998)
Remove the os dir to add subtree later
Squashed 'realm/realm-library/src/main/cpp/object-store/' content from commit c16e841
Merge commit '270c80f6e16194ead7b17bf889f4401b45eeb56f' as 'realm/realm-library/src/main/cpp/object-store'
Merge pull request #3001 from realm/mc/feature/os-mv-subtree
Merge remote-tracking branch 'origin/master' into feature/object-store
Use SharedRealm from object store
release is ready before debug.
Remove SharedGroup
Move function to util.h
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Add cmake to docker (#3044)
Convert RealmFileException
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Exception for incompatible lock file changes
Revert args change
Remove useless macro
Add wait for change
Convert invlid transaction ex
Catch exceptions if needed
Add shared realm compact
Test fix
JNI size should return a value
No need to define exception kind twice for testing
Use JUnit4
Fix annotation processor tests
Auto is shorter
Calling handover APIs on SharedRealm
Add missing file
Build & warning fix
Use move and build error
Fix preprocessor test case
Merge remote-tracking branch 'origin/master' into feature/object-store
Finalizer for BaseRealm
Fix findbugs
Convert invalid key exception from OS
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Clean up Table
Make shared realm native pointer package protected
Make nativeCloseSharedRealm private
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Update core to 1.2.0
Remove Realm.hasChanged
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Update gradle to 2.14.1
Update core to 1.4.2
Use submodule instead of subtree
remove subtree
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Adopt changes from OS
Enable OS notification
Stupid mistake
Fix test with RealmTests
Remove BaseRealm.handler
Remove the dependency of Realm.Handler from tests (#3317)
Wait all async tasks done before next test
Attach to jvm when destruct java binding context
Clean up commitTransaction
Merge remote-tracking branch 'origin/master' into mc/feature/os-notification
Fix build
Fix java doc
HandlerController should not be public
Thank you, findbugs
PR fix
More important fix
Allow the Realm Gradle plugin to modify the bytecode
enable filename globbing when cleaning realm-jni
added tests to reproduce #3103
Fixed a crash when an empty `Collection` is passed to `insert()`/`insertOrUpdate()` (#3103).
update the implementation
update javadoc comment
update proguard configuration no to depend on Android's default configuration
Trigger collection listeners when commit
Fix test
Expose bug
Only call listener after all RealmResults are updated.
Updated changelog
Try to streamline listener logic.
Cleanup
whitespace
Introduce LOCAL_COMMIT.
Whitespace
More tests
PR feedback
Merge branch 'cm/bug/listener-interaction' into cm/post-at-front-of-queue
Add warning if mixing local writes and async queries
Merge branch 'releases' into cm/post-at-front-of-queue
Remove duplicated tests.
Fix unit tests
Cleanup
Whitespace
Merge branch 'releases' into cm/post-at-front-of-queue
Added logging
Indentation
Merge branch 'releases' into cm/post-at-front-of-queue
Ensure stable classes order in generated mediators
add test case that reproduce #4499
now backlinks geters throw IllegalStateException if the object is deleted or not yet loaded.
update CHANGELOG
add test
update a test
modify method name Row.checkIfBacklinkAvailable() to Row.checkIfAttached()
update variable names in test
Disable armeabi build for now
WIP PrimaryKey value can be null for String type
Unit test for null primarykey
RealmObjectSchema null primaryKey
RealmObjectSchema test updated
whitespaces removed
Realm Migration checks if existing @PrimaryKey field is configured to nullable
fix errata
changelog & comments
fix typo
Javadoc update
changelog
WIP Nullable PrimaryKey type for Boxed Integers (Byte, Short, Integer, and Long) added
WIP Null PrimaryKey
WIP check nullability on UncheckedRow
WIP row checking for String type in Java level
WIP realm annotation process tests
fix typo in function name
WIP Byte, Short, Integer, Long Realm tests
WIP Realm.createObjectFromJson() tests
DynamicObject tests
string field name clean up
WIP RealmQueryTests
fix whitespaces
WIP RealmQueryTests
WIP RealmMigrationTests
WIP trailing chars removed
WIP not-nullable PK realm migration
Migration test fixed
align whitespaces
Query test fix
Fix query test
Field name fix, JavaDoc fix
Json tests fix
Fixing Javadoc
Javadoc fix
Condense unit tests, fix comments, and JNI
Parameterizing RealmJsonTests
Fix query tests comments
removing unnecessary null checker
JNI nullable check for UncheckedRow
Fixing null value checker
Nulllable to Non-nullable column check in migration
Removing PK types check
Check nullable -> not-nullable field migration exception
Addressing review points
PrimaryKey javadoc change
Javadoc fix
add Realm.getDefaultConfiguration() (#4725).
monitorForDefaultConfiguration -> defaultConfigurationLock
PR feedbacks
revise javadoc comment of Real.getDefaultConfiguration()
making HandlerController#emptyAsyncRealmObject & HandlerController#realmObjects thread safe
update logo
add insertToRealm & insertOrUpdateToRealm for bulk inserts
Merge branch 'master' of https://github.com/realm/realm-java
update tests
Merge branch 'master' of https://github.com/realm/realm-java
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
Using Collection to get the size in order to avoid the rehash call inside the IdentityHashMap
PR feedback
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
Code formatting
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
fixing tests
update RealmConfigurationTests `asset_file.realm` schema to include new models & not trigger a migration needed
update Changelog and rename new methods
Fixing issue with Cyclic dependency insert or the existing copyToRealm
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
- LinkView.nativeClear is performed on `insertOrUpdate` whether RealmList is present or null - Fixing indentation 🤓 - Fixing Javadoc😒
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
accidentally disabled all ABI besides x86 😱
- Add null & thread checks for the insert* methods - Update Javadoc - Code indentation
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
fixing ABI
- Fixing tests - Update Javadoc
Doc & Javadoc
code indentation
fixing comma
Fix the proxy when the model contains more than one RealmList
Fixing APT tests
- renaming generated RealmList pointer variable - fixing proxy tests
Fixing #3105
fixing #3105
Add test case to reproduce 3105
Merge remote-tracking branch 'origin/releases' into nh/fixing_#3105
Merge remote-tracking branch 'origin/releases' into nh/fixing_#3105
Merge branch 'releases' into nh/fixing_#3105
fixing conflicts with remote `releases`
Merge remote-tracking branch 'origin/releases' into nh/fixing_#3105
Fixing indentation
making HandlerController#emptyAsyncRealmObject & HandlerController#realmObjects thread safe
add insertToRealm & insertOrUpdateToRealm for bulk inserts
Merge branch 'master' of https://github.com/realm/realm-java
update tests
Merge branch 'master' of https://github.com/realm/realm-java
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
Add support to mix both primary key with no primary key models
PR feedback
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
fix JNI method declaration (jclass for static methods)
Code formatting
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
fixing tests
PR feedback
update Changelog and rename new methods
Fixing issue with Cyclic dependency insert or the existing copyToRealm
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
- LinkView.nativeClear is performed on `insertOrUpdate` whether RealmList is present or null - Fixing indentation 🤓 - Fixing Javadoc😒
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
accidentally disabled all ABI besides x86 😱
- Add null & thread checks for the insert* methods - Update Javadoc - Code indentation
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
fixing ABI
- Fixing tests - Update Javadoc
code indentation
fixing comma
Fix the proxy when the model contains more than one RealmList
Fixing APT tests
- renaming generated RealmList pointer variable - fixing proxy tests
Fixing #3105
Merge remote-tracking branch 'origin/releases' into nh/fixing_#3105
fixing #3105
Merge remote-tracking branch 'origin/releases' into nh/fixing_#3105
Add test case to reproduce 3105
Skip managed object when insert collections
Merge remote-tracking branch 'origin/releases' into nh/fixing_#3105
Merge branch 'releases' into nh/fixing_#3105
fixing conflicts with remote `releases`
set the path of the directory of named pipes to fix #3140
update CHANGELOG
add a test for issue3140
update test
Merge branch 'releases' into my/issue3140
follow the chenges in object-store
skip an external storage test on the device where SELinux is not enforced
Merge branch 'releases' into my/issue3140
rename variable
update object-store
make SharedRealm#temporaryDirectory volatile
address findbugs error
Add changelog
Move Pair into public API (#5081)
Convert RxJava1 to RxJava2 (#4992)
Merge branch 'master-4.0' into feature/rxjava2
RxJava2: Add support for changeset observables (#5089)
Add RealmModel
Added Migrations V2 proposal
Added note about new annotations.
Ideas for new API added.
Convert existing API to RxJava 2
Merge branch 'master-4.0' into cm/convert-rxjava1-to-rxjava2
Merge branch 'feature/rxjava2' into cm/convert-rxjava1-to-rxjava2
Mention changes to RxObservableFactory
Fix changelog
Disable examples for now
Disable unit test example
Disable collecting unitTest test results for now.
Merge branch 'feature/rxjava2' into cm/convert-rxjava1-to-rxjava2
Update test dependency
Add support for changes observable + unit tests
Merge branch 'feature/rxjava2' into cm/convert-rxjava1-to-rxjava2
Merge branch 'cm/convert-rxjava1-to-rxjava2' into cm/cm/add-changeset-oberservables
Move to public Pair class
Updated changelog
Add two new wrapper classes for changes observables. Move Pair back to private API
Remove mention of backpressure
Merge branch 'feature/rxjava2' into cm/cm/add-changeset-oberservables
Merge branch 'feature/rxjava2' into cm/cm/add-changeset-oberservables
Javadoc fixes
Added template methods.
Added methods for RealmSchema. Begun adding methods for RealmObjectSchema.
Added unit tests for index/primary keys. Refactored unit tests for brevity.
Added more safety checks.
Added methods to DynamicRealmObject.
Merge branch 'master' into cm-new-migration
Merge branch 'master' into cm-new-migration
Added stub implementation for DynamicRealmList + unit tests
Merge branch 'master' into cm-new-migration
Added basic DynamicRealmList + unit tests.
Merge branch 'master' into cm-new-migration
Fixing unit tests.
Fixed unit tests.
Cleanup
More cleanup
Merge branch 'master' into cm-new-migration
PR fixes.
Squashed commit of the following:
Merge branch 'cm-checkedrow' into cm-dynamic-api
Disable unit test until it works. Fixed merge mistakes.
Backup
Merge branch 'master' into cm-dynamic-api
Added setter unit tests.
Merge branch 'master' into cm-dynamic-api
Added DynamicObject setters + JavaDoc + unit test.
Reenable JNI architectures and unit tests.
Added toString() method.
DynamicRealmList tests and JavaDoc
Cleanup
newline
Merge branch 'cm-dynamic-api' into cm-new-migration
Begun adding javadoc.
Hides Row from DynamicRealmObject constructor.
Merge branch 'cm-dynamic-api' into cm-new-migration
Added missing Javadoc
Added support for byte
Use more correct type.
Renamed getters/setter for blobs to match SQLite. Added remove method.
Added byte setters/getters. Streamlined byte array naming.
Cleanup
PR fixes.
Added all unit tests for RealmObjectSchema
PR fixes.
Fields are columns internally.
Added forEach() iterator, getType() and unit tests.
Merge branch 'master' into cm-dynamic-api
PR fixes + added getType()
Added missing transaction
Improved JavaDoc
Spelling
Merge branch 'cm-dynamic-api' into cm-new-migration
Merge branch 'master' into cm-new-migration
Merge branch 'master' into cm-new-migration
Renaming according to feedback.
Backup
Fixing unit test using reflection.
Fixed default file name.
Refactored shared code to RealmInstance and RealmFileWrapper.
Disable Dynamic unit tests as the DynamicRealm isn't included.
Fixed unit test.
Moved more methods to RealmInstance
Backup with DynamicRealm
Renamed RealmFileWrapper to SharedGroupManager and RealmInstance to RealmBase + other refactors for cleaner separation
Cleanup
Fixed accessibility issues + unit test.
Backup
Merge branch 'master' into cm-realmfilewrapper
Make RealmBase public and move JavaDoc there.
Merge branch 'cm-realmfilewrapper' into cm-dynamic-realm
Backup
Merge branch 'master' into cm-realmfilewrapper
Merge branch 'cm-realmfilewrapper' into cm-dynamic-realm
Introduced DynamicRealm, DynamicRealmQuery, DynamicRealmResults.
SharedGroup no longer shared between Realm and DynamicRealm
Moved close() to base realm
Fixed local cache bug.
Made fields as restrictive as possible.
Merge branch 'master' into cm-realmfilewrapper
Merge branch 'master' into cm-realmfilewrapper
Cleanup synchronized methods + JavaDoc
Added Case and Sort enums for queries.
Updated changelog.
Fixed examples.
Merge branch 'cm-realmfilewrapper' into cm-dynamic-realm
JavaDoc
Realm and DynamicRealm completely split.
Merged dynamic/main packages. Major cleanup
More cleanup
Unifying class and className usage + JavaDoc updates.
Merge branch 'master' into cm-flag-to-enums
Moved new enums to io.realm
Fixed example
Fix kotlin example.
ColumnType renamed to RealmFieldType and moved to public API
Merge branch 'master' into cm-flag-to-enums
Added license
Fix indentation
Merge pull request #1493 from realm/cm-flag-to-enums
Fixed migration example.
Merge branch 'cm-feature-dynamic-migration-api' into cm-dynamic-realm
Javadoc cleanup
Added clear(), allObjects() and allObjectsSorted() to DynamicRealm
Added support for allObjects and clear on DynamicRealm + unit tests. Refactored RealmResults to use factory constructors.
Fixed merge mistake.
Added missing unit tests for DynamicRealmObject. Hide BACKLINK type until needed.
Added unit test for failing implicit conversion.
Cleanup
Merge branch 'cm-dynamic-realm' into cm-new-migration
More unit tests
Added JNI exception for not deleting classes with references.
Added unit test for class name length.
Improve unit test and rename containsClass
Cleanup
Added support for setting custom schemas from Realm methods/unit tests.
Added unit test for detecting removed fields in migrations.
Added tests for adding fields during migration as well.
Updated unit tests so the succeed.
Remove build warning + update unit test to reflect bug report.
Add support for changing a users password.
Fix bad refactor
Remove unused code
Add unit test for wrong input
Merge branch 'master' into cm/change-password
PR feedback
Fix checking for the wrong exception
Errors are no longer getting swallowed.
Propagate all errors from the executor
Merge branch 'master' into cm/change-password
PR feedback
PR feedback
Add detailed notifcation for RealmObject
Rename RowObject
Format code
Clean interface
Remove useless code
Share RealmObject ObserverPairList with OsObject
Merge remote-tracking branch 'origin/master' into mc/object-notification
Remove unrelated backlink tests
Add missing tests
Return String[0] if the object was deleted.
Fix javadoc
javadoc fix
Convert LogicError to ISE
T extends RealmModel for RealmObjectChangeListener
Add isFieldChanged
Add all fields change test
Doc fix
LogicError has been converted to ISE
PR fix
More fix for javadoc
Fix comments & javadoc
Merge remote-tracking branch 'origin/master' into mc/object-notification
Update sync to 2.0.0-rc25
Minimal unit test for reproducing failure
Update unit test
Linking to debug sync cuases magic crash.
Revert "Linking to debug sync cuases magic crash."
Revert to debug builds but ignore any failing unit tests
Update to ROS-2.0.0-alpha.42, Sync-RC26 and Core 4.0.1 (#5355)
Merge branch 'master' into mc/update-sync-rc25
Disable really flaky test
Add preliminary project template.
Added kotlin library. Failing because of realm-library having enabled code coverage.
Merge branch 'master' into cm/kotlin-extension-lib
Cleanup
Show other use cases
Merge branch 'master' into cm/kotlin-extension-lib
Merge branch 'master' into cm/kotlin-extension-lib
update buildTools version in kotlin-extensions project to 26.0.2
Merge branch 'master' into cm/kotlin-extension-lib
update kotlin compiler args
Bring dependencies up to date. Support two variants of Kotlin extensions. Added Dokka to support KDoc
Added toggle in Gradle Realm closure. Updated kotlinExample to use extension functions.
Avoid duplicated artifactId
Fix OJO upload
Only define artifactIds one place
Allow empty results for unit tests
Cleanup
Disable unit tests
Add tests + Javadoc
Add list of missing methods for Realm. Begun adding Javadoc for RealmModel
KDoc and unit tests (#5553)
Merge branch 'cm/kotlin-extension-lib' of https://github.com/realm/realm-java into cm/kotlin-extension-lib
Merge branch 'master' into cm/kotlin-extension-lib
Fix syntax error
remove ObjectServerUser
add multiple session tests
Add regression test for old SyncUser JSON
Update examples
Fixing PMD issue
Disabling false positive findbugs warning
Fixing unit test
Fix typo
WIP
WIP
Merge remote-tracking branch 'origin/master' into nh/rm_object_server_user
Using identity with authURL to identity a SyncUser
Fixing tests
update OS commit
update CHANGELOG
update chaneglog
fix CHANGELOG.md
Merge remote-tracking branch 'origin/master' into nh/rm_object_server_user
Merge remote-tracking branch 'origin/master' into nh/rm_object_server_user
fix compile issue
PR feedback
Downgrade version of Javassist causing issue with classloader at runtime #5641
Update Changelog
Fixes issue with incremental build causing direct access to model without accessor to fail (#6056).
Merge branch 'releases' into nh/fix_incremental_build
Realm Annotation processor no longer consumes the annotations.
Proper visibility
Fix comments
fixes #4975
PR feedback
remove obsolete call
Wire the "like" predicate into RealmQuery   #3752
Address requested changes
Address further comments
Move CHANGELOG comment to Enhancements section
Close HTML 'li' tags
use apt if already in use regardless if Kotlin is installed.
use findPlugin to detect both apt and kotlin.
Disallow changing PK after object created
Rephrase changelog
Merge remote-tracking branch 'origin/master' into mc/disallow-change-pk
Modify excpetion
Fix changelog
fix annotaion processor test
Test case fix
Exposing a `SyncConfiguration` that allows a user to open the backup Realm after the client reset (#4759).
PR feedback, added a method to obtain a SyncConfiguration in order to open the backup Realm later
Fix test
debugging CI
CI test
CI test
remove debugging message
Formatting
WIP
Merge branch 'releases' of https://github.com/realm/realm-java into nh/client_reset_fix_#4997
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
add option to set the `force_sync_history` option
remove un-used test & fixed flakiness from `downloadProgressListener_indefinitely` test
fix test
fix test
remove unnecessary variable in tests
PR feedback, moving `forOffline` definition to RealmConfiguration
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
fix preemptive refresh token test
PR feedback, add option to pass in the encryption key + test
 missing files
PR feedback
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
Use NPM to install integration test server
Merge branch 'master' into cm/use-npm
Use Node image instead of Ubuntu
Update to alpha27
Run ROS2 in integration tests WIP
Merge branch 'cm/use-npm' of github.com:realm/realm-java into cm/use-npm
Upgrade ROS to alpha.28 for testing
Use default admin user + disable SSL tests
Disable broken unit test
Attempt at new logic for detecting ROS is running
Fix test request
Merge branch 'master' into cm/use-npm
Disable server logout. Remove event listeners
Correctly remove event listeners
Use /health/ check to determine if ROS is running
Fix retrieveUserInfo endpoint.
Better lifecycle control for ROS processes
Ignore a lot of broken tests
fixed findbug issue. `obj` will be either not null or the statement will jump to the finally block in case of parsing error (`new JSONObject` will not return null value)
Using a custom ConnectionPool to control idleConnection (causing test suite incapable of stopping the ROS instance)
Fix for default admin user not being present.
No need to manually log users out.
Use SIGKILL and minimise listeners used.
Add sleep to overcome delay from ROS
Cleanup
returing a read-only RealmConfiguration
Merge remote-tracking branch 'origin/cm/use-npm' into nh/client_reset_fix_#4997
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
Add support and test for offline client reset
Remove the `force_sync_history` option to align with offline backup Realm
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
update changelog
Merge remote-tracking branch 'origin/nh/client_reset_fix_#4997' into nh/offline-client-reset
add javadoc & enable migration test
update changelog
Fixing failing test
Merge remote-tracking branch 'origin/master' into nh/offline-client-reset
Refactoring test
Closing session that failed assertion
PR feedback, also add back `isRecoveryConfiguration` so we can use a different schemaMode (IMMUTABLE) and keep the (READONLY) for non backup Realms
remove redundante test
PR feedback
PR feedback, added a method to obtain a SyncConfiguration in order to open the backup Realm later
Fix test
debugging CI
CI test
CI test
remove debugging message
Formatting
WIP
Merge branch 'releases' of https://github.com/realm/realm-java into nh/client_reset_fix_#4997
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
add option to set the `force_sync_history` option
remove un-used test & fixed flakiness from `downloadProgressListener_indefinitely` test
fix test
fix test
remove unnecessary variable in tests
PR feedback, moving `forOffline` definition to RealmConfiguration
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
fix preemptive refresh token test
PR feedback, add option to pass in the encryption key + test
 missing files
PR feedback
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
update dependencies
Use NPM to install integration test server
Merge branch 'master' into cm/use-npm
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
Use Node image instead of Ubuntu
Run ROS2 in integration tests WIP
Merge branch 'cm/use-npm' of github.com:realm/realm-java into cm/use-npm
Upgrade ROS to alpha.28 for testing
Use default admin user + disable SSL tests
Disable broken unit test
Fix test request
Merge branch 'master' into cm/use-npm
Disable event limit
Disable server logout. Remove event listeners
Correctly remove event listeners
Use /health/ check to determine if ROS is running
Fix retrieveUserInfo endpoint.
Ignore a lot of broken tests
Fix for default admin user not being present.
No need to manually log users out.
Use SIGKILL and minimise listeners used.
Retry server stop in case of errors.
Merge branch 'cm/use-npm' of https://github.com/realm/realm-java into cm/use-npm
Cleanup
returing a read-only RealmConfiguration
Merge remote-tracking branch 'origin/cm/use-npm' into nh/client_reset_fix_#4997
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
Remove the `force_sync_history` option to align with offline backup Realm
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
update changelog
Fine grained locks for RealmCache
Fix comment
Don't remove the cache from map
Use weak ref to hold RealmCache in map
Update comments
Merge remote-tracking branch 'origin/master' into mc/cache-lock
change log
Lock on cacheMap
update change log
SHould check the both global ref count
Merge remote-tracking branch 'origin/master' into mc/cache-lock
oops
Fix tests
Close in finally
Iterate on EmumMap.values()
Fix comment
Keep strong ref to leaked cache
Merge remote-tracking branch 'origin/master' into mc/cache-lock
PR fix
Allow to call its accessors, and replace its field accesses with accessor calls in model's constructor.
use field instead of checking transaction
reject default values when the getter of a model creates other model object
add simple test for default value
supports default value of model field
supports default value of RealmList fields
add tests for assignment in constructor and setter in constructor
update javadoc comments of createObject
always ignores the default value of primary key if the object is managed
update javadoc
add a test for default values handling in copyToRealm(). the last assertion of RealmTests.copyToRealm_defaultValuesAreIgnored() is failing now.
refactor tests
use isPrimaryKey()
fix a bug that unexpected realm object is created by default value of RealmModel/RealmList fields
Merge branch 'master' into my/issue777
remove extra ';' from generated code
add more tests for default value
fix tests
fix a bug that creates unexpected objects
rename internal methods
update changelog
update CHANGELOG
review comments
update CHANGELOG
Create object without setting PK is not allowed
Change log and java doc fix
addEmptyRow won't check PK anymore
Update javadoc for json APIs
Fix grammar
PR fix
Deprecate a method.
Class name may get obfuscated.
PR fix
making HandlerController#emptyAsyncRealmObject & HandlerController#realmObjects thread safe
update logo
add insertToRealm & insertOrUpdateToRealm for bulk inserts
Merge branch 'master' of https://github.com/realm/realm-java
update tests
Merge branch 'master' of https://github.com/realm/realm-java
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
Using Collection to get the size in order to avoid the rehash call inside the IdentityHashMap
Add support to mix both primary key with no primary key models
PR feedback
fix JNI method declaration (jclass for static methods)
Code formatting
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
fixing tests
update RealmConfigurationTests `asset_file.realm` schema to include new models & not trigger a migration needed
PR feedback
update Changelog and rename new methods
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
- LinkView.nativeClear is performed on `insertOrUpdate` whether RealmList is present or null - Fixing indentation 🤓 - Fixing Javadoc😒
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
accidentally disabled all ABI besides x86 😱
- Add null & thread checks for the insert* methods - Update Javadoc - Code indentation
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
fixing ABI
Doc & Javadoc
code indentation
fixing comma
Fix the proxy when the model contains more than one RealmList
Fixing APT tests
- renaming generated RealmList pointer variable - fixing proxy tests
Fixing #3105
Merge remote-tracking branch 'origin/releases' into nh/fixing_#3105
fixing #3105
Merge remote-tracking branch 'origin/releases' into nh/fixing_#3105
Add test case to reproduce 3105
Merge remote-tracking branch 'origin/releases' into nh/fixing_#3105
Merge remote-tracking branch 'origin/releases' into nh/fixing_#3105
Merge branch 'releases' into nh/fixing_#3105
fixing conflicts with remote `releases`
Merge remote-tracking branch 'origin/releases' into nh/fixing_#3105
Fix Transformer warnings
fix duplicate check of accessors when adding them
Handle transaction for schema updates
Preparing RealmMigration integration
Move JNI build to cmake
Fix mips linking, simplify the condition checking
Remove realm-jni
Update android tools plugin to beta1
ANDROID_NDK_HOME instead of NDK_HOME
ndk.dir for README
Merge remote-tracking branch 'origin/releases' into mc/cmake
Update Android build to 2.2.0beta2
Merge remote-tracking branch 'origin/releases' into mc/cmake
Changelog
Remove Version for javah
Update cmake to 3.6
added  task that removes  dir on clean
Android cmake needs CMAKE_ANDROID_ARCH_ABI
More PR fix
Useless code
Fix readme
update cleanExternalBuildFiles task definition to respect 'dontCleanJniFiles' property
fix indentation
Merge remote-tracking branch 'origin/releases' into mc/cmake
Fix Dockerfile
Work around the memmove bug on sumsung device
stupid pointer mistake
3rd try, use kg's test and builtin fun
Logging if memmove() isn't broken
use __realm_memove for testing
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
use memmove impl from kernel
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Work around the memmove bug on sumsung device
Use bcopy() from FreeBSD
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
PR fix
Merge remote-tracking branch 'origin/releases' into mc/bug/hack-memmove
Remove useless log
Only apply the hack to arm32
Switching to DRY libc11's implementations
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
fixing compilation error
Adding temp. solution for issue #3651
Better change log
Merge commit '7632433fb6d76e8b3bb6ac609407196365b5f676' as 'realm/realm-jni/object-store'
Squashed 'realm/realm-jni/object-store/' content from commit 91c87e4
Merge pull request #2915 from realm/mc/feature/os-subtree
Merge commit '2395585a0ab92192cf23a3723167b91f4109d37d' into feature/object-store
Squashed 'realm/realm-jni/object-store/' changes from 91c87e4..57ee591
Merge pull request #2931 from realm/mc/feature/os-sync-upstream
Squashed 'realm/realm-jni/object-store/' changes from 57ee591..64e733e
Merge commit '9409cd68a3a7604ffe9ad688139328c36eb617a1' into feature/object-store
Adding object store and use C++14 to compile it (#2916)
gcc is overly paranoid (#2961)
Move JNI build to cmake
Build object store through cmake
Merge pull request #2997 from realm/mc/feature/os-cmake
Disable armeabi build for now (#2998)
Remove the os dir to add subtree later
Squashed 'realm/realm-library/src/main/cpp/object-store/' content from commit c16e841
Merge commit '270c80f6e16194ead7b17bf889f4401b45eeb56f' as 'realm/realm-library/src/main/cpp/object-store'
Merge pull request #3001 from realm/mc/feature/os-mv-subtree
Merge remote-tracking branch 'origin/master' into feature/object-store
Use SharedRealm from object store
release is ready before debug.
Remove SharedGroup
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Remove Group
Add cmake to docker (#3044)
Convert RealmFileException
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Use write_copy from object store
Exception for incompatible lock file changes
Revert args change
Remove useless macro
Add wait for change
Convert invlid transaction ex
Catch exceptions if needed
Add shared realm compact
Test fix
JNI size should return a value
Fix annotation processor tests
Auto is shorter
Calling handover APIs on SharedRealm
Add missing file
Use move and build error
Fix preprocessor test case
Merge remote-tracking branch 'origin/master' into feature/object-store
Finalizer for BaseRealm
Fix findbugs
Convert invalid key exception from OS
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Clean up Table
Make shared realm native pointer package protected
Make nativeCloseSharedRealm private
Use package protected getter for shared group pointer
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Update core to 1.2.0
Test cases for shared Realm
Remove Realm.hasChanged
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Update core to 1.4.2
Use submodule instead of subtree
remove subtree
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Adopt changes from OS
Enable OS notification
Stupid mistake
Fix test with RealmTests
Remove BaseRealm.handler
Remove the dependency of Realm.Handler from tests (#3317)
Wait all async tasks done before next test
Attach to jvm when destruct java binding context
Clean up commitTransaction
Merge remote-tracking branch 'origin/master' into mc/feature/os-notification
Fix build
Fix java doc
HandlerController should not be public
Thank you, findbugs
AndroidNotifier should not be public
PR fix
More important fix
Support wait_for_changes
Add multi process examples.
Test case fix
Send REALM_CHANGE manually for async transaction
Merge branch 'master' into mc-multi-process
Test case fix
Wait until daemon thread exit
Make mysterious test case simpler
Merge remote-tracking branch 'origin/master' into mc-multi-process
Add RealmAsyncTask.isDone to fix flaky test
Unit test for https://github.com/realm/realm-java/issues/3732
Fix version + import
Merge remote-tracking branch 'origin/cm/bug/insertorupdate-otherrealm' into releases
fixes 3732, insert* using cyclic dependencies between different Realms
fixed imports
update changelog
update test
Revert "Revert "Fix memory leak (#3993).""
Better change log
introduced ErrorProne plugin
revert fix for ErrorProne warnings.
Merge branch 'releases' into my/add_error_prone_plugin
First pass design
Appease FindBugs
First response to comments
More fine tuning
Merge branch 'bulk/master' into bulk/working
Merge branch 'bulk/master' into bulk/working
Add ImportFlag class and argument to API's
Add initial version of OsObjectBuilder
Add support for all list types. Optimize common case of sending realm models
Fix bugs in adding byte arrays.
Migrate `copy` method to use OsObjectBuilder
Fix copying circular data structures.
Fix issues with reporting errors with same primary key values
Fix lists not being correctly updated in some cases
Fix wrong exception types
Fix exception messages
Fix annotation processor unit tests
Add ImportFlag docs
Fix compiler warning
Remove tests not needed anymore
Cleanup OsObjectBuilder
Nicer formatting
Cleanup changelog and Javadoc
Send "ignore fields" flag to C++
Include unknown type (for debugging)
Fix annotation processor tests
Simplify print and verify behaviour better
Another fix for printing primary key values
Add copyToRealm benchmarks
Revert using hash_code
Temporary: Disable 1 test branch to track down failing type
Temporary: Disable string key
Add benchmark for diffed updates
Temporary: Only test long
Just guessing at this point :/
Disable breaking test and list under known bugs. Prepare RC release
Remove unused var name
Fix unit test
Fix bad commit
Use column indices instead of String based keys when building the object using `Object::create`
Fix annotation processor tests
Spelling
Set release date for BETA1
Fix error in unit test and changelog
Merge branch 'cm/copy-ignore-same-values' into gbm/bulk-update
Vertical slice of unit tests
Enable more type + their tests
Add Date support
Add support for binary fields
Add support for setting object reference fields
Fix initial listener not triggering for query-based listeners on RealmResults
Merge branch 'cm/bug/query-based-listeners' into cm/copy-ignore-same-values
Prepare BETA2
Prepare next beta release
Merge branch 'master' into cm/copy-ignore-same-values
Update to latest OS. Fixed diffing list elements.
WIP - JavaValueType
More cleanup. Preparing for a proper 5.8.0 release.
Better changelog
Merge branch 'master' into cm/copy-ignore-same-values
Cleanup test
Merge branch 'cm/copy-ignore-same-values' into gbm/bulk-update
Add support for primitive lists
Add support for lists of models.
Fix example
Increase timeout
Doc fixes
Merge branch 'master' into gbm/bulk-update
Merge branch 'master' into gbm/bulk-update
Fix error message
PR feedback. Mostly doc and formatting
Kotlin requires Java 8 support
Fix changelog
Check that realm is open before accessing schema
Add support for Realm.refresh()
Fixed unit test + changelog
Update the document
WIP PrimaryKey value can be null for String type
Unit test for null primarykey
RealmObjectSchema null primaryKey
RealmObjectSchema test updated
whitespaces removed
Realm Migration checks if existing @PrimaryKey field is configured to nullable
fix errata
changelog & comments
fix typo
Javadoc update
changelog
WIP Nullable PrimaryKey type for Boxed Integers (Byte, Short, Integer, and Long) added
WIP Null PrimaryKey
WIP fixed uncatched exceptions
WIP check nullability on UncheckedRow
WIP nullability check in JNI
WIP realm annotation process tests
fix typo in function name
WIP Byte, Short, Integer, Long Realm tests
WIP Realm.createObjectFromJson() tests
WIP RealmJsonTests
DynamicObject tests
string field name clean up
fix whitespaces
WIP RealmQueryTests
WIP RealmMigrationTests
remove a whitespace
WIP trailing chars removed
WIP not-nullable PK realm migration
Migration test fixed
WIP fix javadoc
align whitespaces
Query test fix
Fix query test
Field name fix, JavaDoc fix
Json tests fix
Fixing Javadoc
Javadoc fix
Condense unit tests, fix comments, and JNI
Parameterizing RealmJsonTests
Fix query tests comments
removing unnecessary null checker
Fixing null value checker
Nulllable to Non-nullable column check in migration
Removing PK types check
Check nullable -> not-nullable field migration exception
Addressing review points
Javadoc fix
RealmObject.isValid now returns the correct value for the null argument.
Merge branch 'master' of https://github.com/realm/realm-java
update tests
Merge branch 'master' of https://github.com/realm/realm-java
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
Using Collection to get the size in order to avoid the rehash call inside the IdentityHashMap
Add support to mix both primary key with no primary key models
PR feedback
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
fix JNI method declaration (jclass for static methods)
Code formatting
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
fixing tests
PR feedback
update Changelog and rename new methods
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
- LinkView.nativeClear is performed on `insertOrUpdate` whether RealmList is present or null - Fixing indentation 🤓 - Fixing Javadoc😒
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
- Add null & thread checks for the insert* methods - Update Javadoc - Code indentation
Merge remote-tracking branch 'origin/master' into nh/bulk_insert
fixing ABI
- Fixing tests - Update Javadoc
Doc & Javadoc
code indentation
fixing comma
Fix the proxy when the model contains more than one RealmList
Fixing APT tests
- renaming generated RealmList pointer variable - fixing proxy tests
Add RFC for Primitive List API
Added a few more comments + Cleanup
revert non-API changes
add RealmFieldType.BINARY_LIST
remove unused import
Merge branch 'feature/primitive_list' into my/primitive_list_api
Merge branch 'feature/primitive_list' into my/primitive_list_api
add methods to modify PrimitiveList in OsList
update Property
fix tests
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
generate getters and setters for primitive list
empty commit for part9
implement logic for primitive list in RealmList
fix tests
fix annotation processor unit tests
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'master-4.0' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
throw an exception if query or aggregation feature is used for primitive list
add realm field types
SchemaInfo for primitive list
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
fix a bug
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'master-4.0' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
address findbugs issues
added Javadoc comment and RealmList.toArray()
fix bug
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Draft implementation of accessor context
implement Primitive List logic for copy() and insert()
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
implement Primitive List logic for insert(Realm, Iterator,...)
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
generate code for primitive list in update(), insertOrUpdate()
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
minor refactoring
Merge branch 'master-4.0' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
implement primitive list supprt for copyFromRealm()
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fixed a bug that getFieldType returns UNSUPPORTED_TABLE and isColumnNullable always false against primitive list field.
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
added a test to get field meta data of primitive lists
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Add accessor context for string and bytes[]
fix test
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix #5233
move ManagedListOperator classes from the inside of RealmList to outside
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Commit missing file
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
reformat code
Changed to throw IllegalArgumentException instead of IllegalStateException when value size exceeded the limit.
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Implement special handling for byte[] in RealmList
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Fix build on x86_64
avoid unnecessary looping
use fqcn when makeing a string of value type.
fix RealmList.toString()
Primitive List feature(Part6: OsList) (#5208)
Merge branch 'master' into feature/primitive_list
Merge commit '0fb5ed3' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Fix findbugs
fix a bug
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Remove RealmFieldType.isList()
Rephrase
fix bugs
add instrumentation tests
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_7_Schema
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
remove unused variable
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix a bug that annotation processor always generates schema of primitive list as nullable
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
add a constructor to create non-null primitive list
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
fix nativeIsColumnNullable
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix compilation error
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix implementation of RealmList.remove(Object)
fix RealmListTests
fix RealmListTests
Handle non-null primitive list in JNI
Primitive List feature(Part7: Schema) (#5209)
Merge branch 'feature/primitive_list' into mc/primitive_list_10_oslist_JNI
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
added tests for 'copyToRealm()' and 'copyFromRealm()'
fix test
introduced OsObjectSchemaInfoaddPersistedValueListProperty() for primitive list
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
use OsObjectSchemaInfo.addPersistedValueListProperty()
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
reformat
Move list type check to CheckedRow
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
add size check to OsListTests.addNull_insertNull_setNull_requiredList(OsList)
fix test
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
introduce Row.getModelList() and Row.getValueList() to check field type more precisely
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Check nullable and throw ealier in JNI
Remove fixme and useless code
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
update nullablility annotations
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
update test case to expose an issue
Revert non-related changes
address review feedback
add notice to Realm.*Json*()
simplify Proxy's createDetachedCopy()
Merge pull request #5216 from realm/mc/primitive_list_10_oslist_JNI
stop to add backlink field into nullable field list
add comments to ClassMetaData.hasRequiredAnnotation() and  ClassMetaData.isRequiredField()
move Utils.getRealmListElementTypeMirror() to TypeMirrors class.
fix exception message
add class comment to TypeMirrors
add TODO comment
Merge branch 'feature/primitive_list' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Primitive List feature(Part8: Annotation processor implementation) (#5210)
Merge branch 'feature/primitive_list' into my/primitive_list_9_RealmList
remove outdate comment
fix todo comment
use custom deleter for shared_ptr<char> that contains char[]
fix failing test
remove methods to return primitive array
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'my/primitive_list_9_RealmList' into my/primitive_list_14_fix_shared_ptr_bug
use assertArrayEquals() instead of assertTrue(Arrays.equals())
add changelog entry about removed methods
remove unused code
update comment
remove comment
fix test case name
add assertion for remove/removeAll
update exception message
fix failing tests
remove special handling to byte array in RealmList
remove special type conversion via Number in toArray()
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
fix failing tests
Merge branch 'my/primitive_list_9_RealmList' into my/primitive_list_14_fix_shared_ptr_bug
refactor ManagedListOperator and its sub-classes
use thrown.expectMessage()
add Javadoc comments to ManagedListOperator and its subclasses
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'my/primitive_list_9_RealmList' into my/primitive_list_14_fix_shared_ptr_bug
address review comments
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'my/primitive_list_9_RealmList' into my/primitive_list_14_fix_shared_ptr_bug
Primitive List feature(Part 9, RealmList) (#5213)
Merge branch 'feature/primitive_list' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'feature/primitive_list' into my/primitive_list_14_fix_shared_ptr_bug
Merge pull request #5266 from realm/my/primitive_list_14_fix_shared_ptr_bug
Merge pull request #5259 from realm/mc/primitive_list_13_Listener_on_OsList
Merge branch 'master' into feature/primitive_list
Merge branch 'master' into feature/primitive_list
Primitive List feature(Part15: Disable RealmList.createSnapshot() when the elements are not RealmModel) (#5336)
Merge branch 'master' into feature/primitive_list
Fix unit test
Work around the memmove bug on sumsung device
stupid pointer mistake
3rd try, use kg's test and builtin fun
Logging if memmove() isn't broken
use __realm_memove for testing
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
use memmove impl from kernel
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Work around the memmove bug on sumsung device
Use bcopy() from FreeBSD
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Merge remote-tracking branch 'origin/releases' into mc/bug/hack-memmove
Remove useless log
Only apply the hack to arm32
Switching to DRY libc11's implementations
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
fixing compilation error
Add java methods
Fix generate-jni-headers.sh to use ../realm-library not ../realm
Generate JNI headers for new methods in TableQuery
Add CPP methods for binary equal and not equal
Added tests to RealmQueryTests
Fix most build errors
/Actually/ test notEqualTo() 😅
Fix build
Add java methods for contains, beginsWith, endsWith for byte[]
Add JNIQuery tests for new methods
Add tests for new byte[] methods; fix tests for String methods
Re-gen headers; implement methods in CPP... not building correctly tho
Fix crash that happens if null passed for a nullable byte[] field
Fix tests
Throw exception if trying to query byte[] fields on child objects
Remove unnecessary line
Add tests for beginsWith/endsWith/contains on nullable byte[] fields
Update CHANGELOG
Address comments
Using Android Network Security Configuration to setup the test certificate for SSL tests
Update changelog
Implement CompactOnLaunch.
Throw an exception if it is read-only Realm.
Add readOnly_compactOnLaunch_throws
Fix a wrong signature.
Add tests to check compactOnLaunch.
Add Javadoc.
Updated CHANGELOG>md
Fix a typo
PR feedback.
PR feedback: Improve tests.
PR feedback.
PR feedback.
PR feedback: Remove 2 createConfiguration.
PR feedback
Improve Javadoc.
PR feedback: Add a test to check a bug.
PR feedback
PR: fix a test.
hashCode javadoc added
remove white space
update review points
fix errata
Support wait_for_changes
Add multi process examples.
TypeBasedNotificationsTest fix
Example fix
Test case fix
Send REALM_CHANGE manually for async transaction
Merge branch 'master' into mc-multi-process
Test case fix
Ranaming and java doc
Wait until daemon thread exit
Make mysterious test case simpler
Merge remote-tracking branch 'origin/master' into mc-multi-process
Merge remote-tracking branch 'origin/master' into mc-multi-process
Add RealmAsyncTask.isDone to fix flaky test
set the path of the directory of named pipes to fix #3140
update CHANGELOG
add a test for issue3140
Merge branch 'releases' into my/issue3140
skip an external storage test on the device where SELinux is not enforced
rename test
Merge branch 'releases' into my/issue3140
rename variable
update object-store
make SharedRealm#temporaryDirectory volatile
address findbugs error
Add new classes
Added support for SyncCredentials.accessToken. Updated integration tests.
Suppress Findbugs warning
Merge branch 'cm/add-synccredentials-accesstoken' into cm/permission-offer-request
Attempt to fix unit test
Fixed unit test
Use base class
Merge branch 'master' into cm/add-synccredentials-accesstoken
Cleanup
Fix Object Store version
Merge branch 'master' into cm/add-synccredentials-accesstoken
Fix parameters changes
Attempt to fix CI. Local run works fine.
Re-enable tests
Revert changes to the check for the Auth Server being online
Don't crash beforeClass/afterClass methods
Upgrade to latest version of ROS for integration tests.
Only testing packages
Merge branch 'cm/add-synccredentials-accesstoken' into cm/permission-offer-request
Fix integration test on CI
Waiting longer time for auth
Merge remote-tracking branch 'origin/master' into cm/add-synccredentials-accesstoken
Modify sync server port
Let sync use the default port
Bypass the device online checking
Suppress findbug issue
PR fix
Fix unit tests
Merge branch 'cm/add-synccredentials-accesstoken' into cm/permission-offer-request
Updated changelog
Cleanup
Fix Findbugs warnings
Merge branch 'master' into cm/permission-offer-request
Update integration test server version
Added missing newline
Add proper test base class
Cleanup debug log
Missing newline
User 2 must use User 1's Realm. Wait until sync'ed Realm is received.
PR feedback
Merge branch 'master' into cm/permission-offer-request
Insane timeout
Fix changelog merge mistake
Merge branch 'master' into cm/permission-offer-request
Disable flaky test
Tickle CI
Merge branch 'master' into cm/permission-offer-request
use Context.registerReceiver() instead of AndroidManifest.xml to register NetworkStateReceiver for android.net.conn.CONNECTIVITY_CHANGE broadcast.
Add RealmQuery.equalToAny() (#841)
PR feedback: equalToAny -> in
PR feedback: apply 'beginGroup()' and 'endGroup()' on 'in' operator.
PR feedback: throws an IllegalArgumentException if values is an empty array.
Add a test, in_date()
Remove unnecessary tests.
Fix type fields in in_byte()
Add 3 tests, in_byte(), in_short() and in_int()
Update CHANGELOG.md for RealmQuery.in()
PR feedback: array version -> vargs version.
PR feedback: ++i -> i++
PR feedback: remove unnecessary parenthesises.
PR feedback: revert the variable arguments version.
PR feedback: fix javadocs and improve error messages.
PR feedback: Extract the constant string literal from the hard-coded error message.
PR feedback: Adopt boxed type API.
PR feedback: add null tests.
Fix row_isValid
Fix openPreNullWithRequired
PR feedback: update javadocs.
PR feedback: use NoPrimaryKeyNullTypes for testing instead of AllTypes.
PR feedback: Revert AllTypes.
Revert automatic formatting.
Revert auto-formatting again.
PR feedback: remove unnecessay empty lines.
PR feedback: generalize tests.
PR feedback: update javadocs.
fixes #5143
update OS commit
- Update to latest ObjectStore - Reverted changes to get_existing_session
Merge remote-tracking branch 'origin/master' into nh/enable_client_reset
Allow to call its accessors, and replace its field accesses with accessor calls in model's constructor.
use field instead of checking transaction
fix a bug that acceptDefaultValue is not set correctly
reject default values when the getter of a model creates other model object
add simple test for default value
supports default value of model field
supports default value of RealmList fields
add tests for assignment in constructor and setter in constructor
always ignores the default value of primary key if the object is managed
update javadoc
add a test for default values handling in copyToRealm(). the last assertion of RealmTests.copyToRealm_defaultValuesAreIgnored() is failing now.
refactor tests
remove extra ';' from generated code
add more tests for default value
fix tests
fix a bug that creates unexpected objects
rename internal methods
update changelog
update CHANGELOG
review comments
update CHANGELOG
added a description of how proxy object should be created in the Javadoc comment of RealmProcessor
Upgrade to latest version of ObjectStore including Sync
Upgrade OS
more fixes
Adding sync related files to build
Merge branch 'master' into cm/update-objectstore
Update OS
Merge branch 'master' into cm/update-objectstore
Include external_commit_helper files
Upgrade OS
Merge branch 'master' into cm/update-objectstore
Trying to fix Cmake file
Build with epoll
No need to set EPOLL twice
Merge branch 'master' into cm/update-objectstore
Only use REALM_ENABLE_SYNC
Work-in-progress
WIP
Merge branch 'master' into cm/use-objectstore-syncmanager
WIP
Remove java state classes. Error handling goes through SyncManager. Updated to latest Core version.
Merge branch 'master' into cm/use-objectstore-syncmanager
Add support for client thread listener
Stop all Java sessions before reset
Merge branch 'master' into cm/syncuser-currentuser-throws
Merge branch 'cm/syncuser-currentuser-throws' into cm/use-objectstore-syncmanager
Fix merge mistake
Reset through SyncManager
Use proper OS version
Fix unit test
Remove unnecessary imports.
Merge branch 'cm/syncuser-currentuser-throws' into cm/use-objectstore-syncmanager
Bump OS
Merge branch 'master' into cm/use-objectstore-syncmanager
Merge branch 'master' into cm/use-objectstore-syncmanager
Fix merge mistake
Fixing native crash caused by concurrently closing the RelamConfig
using Object Store Session/SyncManager
update OS commit
Fix mips compilation
implement refresh access_token logic
update OS branch
Fixing refresh token logic
Merge remote-tracking branch 'origin/releases' into nh/objectstore-syncmanager
fixes SyncManager
update version of ROS test
PR feedback
PR feedback
PR feedback
Using double check lock
Fixing double check lock
remove obsolete comment
Merge remote-tracking branch 'origin/master' into nh/objectstore-syncmanager
Rename and add field. GH issue #4093
Rename and add field. GH issue #4093
checkpoint
checkpoint
checkpoint
respond to comments
checkpoint
respond to comments
BUGFIX: leak when closing Group() - it was not destructed
invalidate schema cache when the schema version of Realm is changed by other process.
set ColumnInfo#indicesMap via setter
add javadoc comments
fixed a bug that DynamicRealm triggers to update the schema cache in the typed Realm.
remove empty line
call SchemaVersionListener only when the schema version has been changed
check schema change after 'commitTransaction()'
add tests for invalidating schema cache
update CHNAGELOG
removed unused import
newline at end of the file
update CHANGELOG
added null check when closing Realm instance in tearDown() of tests.
remove copyFrom to copyColumnInfoFrom
remove type check in copyColumnInfoFrom()
rename ColumnInfo#copy() to copyColumnInfo()
fix domments and line wrapping
add newline at end of the file
fixed compilation error in tests
remove invocation of invokeListenerIfSchemaChanged() from commitTransaction()
fix tests of annotation processor
make ColumnIndices Cloneable
update javadoc comment
rename RealmCache#find() and RealmCache#store()
add '@throws RealmMigrationNeededException' to APIs that may trigger a schema change.
fix an exception  message
log if column count is less than expected
normal mode and additive mode in validating the table
Merge branch 'master' into my/invalidate_schema_cache
changed log level
Set native library version to ReLinker
Handle PK when calling RealmSchema's remove/rename
Why did I always miss files in commit today?
Downgrade version of Javassist causing issue with classloader at runtime #5641
Update Changelog
Allow the Realm Gradle plugin to modify the bytecode
Fixing unit tests for backlink queries. Introducing a native implementation of isNotEmpty().
Getting closer
fixing query tests
Adding on how to reach to the results in the asserts.
PR feedback
Merge branch 'master' of github.com:realm/realm-java into kneth/query-backlink
Updating changelog. Moving inverse relationships out of beta stage.
Adding test
Follow table links and not query links
Adding entry in change log
Updating change log
Last field might be a backlink field.
Merge branch 'releases' into kneth/bug/is-empty
Merge branch 'releases' of github.com:realm/realm-java into kneth/bug/is-empty
Merge branch 'kneth/bug/is-empty' of github.com:realm/realm-java into kneth/bug/is-empty
Adding the missing comment
Merge branch 'releases' of github.com:realm/realm-java into kneth/bug/is-empty
PR feedback
PR feedback
Only create RealmDefaultModule if truly needed
Fix error description + changelog
Fix spelling mistake
Spelling
Thread local notifactions are now triggered using the Looper instead of immediately
Merge branch 'master' into cm/handler-notifications
PR feedback
PR feedback
Merge remote-tracking branch 'origin/master' into cm/handler-notifications
removed unecessary boolean
Thread local notifactions are now triggered using the Looper instead of immediately
Merge branch 'master' into cm/handler-notifications
PR feedback
PR feedback
Refactor notify listeners
WIP waitForChange
nested if fixed
WIP waitforchange
WIP waitforchange test added
fix notification path
Merge branch 'master' into stk/waitforchange
BaseRealm#stopAllWaitingRealmInSharedDatabase added
bug fix
remove listener notification
WIP bugfix
bug fix
DynamicRealm test added
try-catch added
Merge branch 'master' into stk/waitforchange
cleanup
test cleaned, changelog
remove unnecessary dependencies
remove unnecessary dependencies
test fix
changelog deprecated added. comment fix
looper test added
test fix
fix test
master merged
javadoc fix
remove duplicated codes
multi-threaded test added
merge master
Merge branch 'master' into stk/waitforchange
changelog fix for 0.88.3
master merged
merged master
master merged again
master merged
looper checker fixed
Master merged
Clean up tests according to core implementation
Detects whether stopped by user
fix review points
master merged
Test added
text variable name fix
remove unnecessary imports
Merge branch 'master' into stk/waitforchange
remove enabler from wait_for_change
javadoc fix
commit thread interrupt testing
comment fix
RealmThread tests added
comment fix
fix review points
javadoc fix
Review points fix
Master merged
Short wait before stopping
Addressing review points
Fail Realm.migrateRealm() if a SyncConfiguration is used.
Removing unused code.
Added support for Spanner micro benchmarks
Merge branch 'master' into cm/microbenchmarks
Merged in old performance tests.
Depend on non-SNAPSHOT version of Spanner
Fix PMD issue
Merge branch 'master' into cm/microbenchmarks
Fix group
Merge branch 'master' into cm/microbenchmarks
Cleanup
Merge branch 'master' into cm/microbenchmarks
Added missing headers + removed fixed deprecated API usage.
Add test
typo
RAII wrapper for some JNI resources
Change log and deleted constructors
Stupid crash
PR feedback
Fix more stupid bugs
Missing brace
add a change log entry
fix comment
peerClassName -> linkedClassName
Added design spec for RxJava support
Added API proposal
Add support for @RealmName which makes it possible to override the name of classes and fields.
Merge branch 'master' into cm/realmname-annotation
Merge branch 'master' into cm/realmname-annotation
Merge branch 'master' into cm/realmname-annotation
Remove RealmName annotation. Add methods for specifying names to RealmModule, RealmClass and a new RealmField annotation.
Fix compile issues
Fix Javadoc and most unit tests.
Add test for conflicting modules
Merge branch 'master' into cm/realmname-annotation
Merge branch 'master' into cm/realmname-annotation
Fix merge
Use correct version of Object Store
Better docs
Backup
Processor tests are green
Fleshing out unit tests for using name policies in annotations
Fix required value lists + cleanup
Fix module defaults not being correctly applied
Add support and unit tests for field name overrides
Add changelog
Javadoc updates
Use custom built parser for converting variable names
RealmField is now retained at Runtime
Fix unit tests
Unify build tools
Merge branch 'cm/realmname-annotation'
Remove FIXMEs
Fix tests after merge from master
PR feedback
More PR feedback
PR feedback
More PR feedback
Output correctly internal name
Fix library module mediators not being correctly created
Fix missing spaces in error message
Better example
Improve wording
Disable optional api transformer
Cherry pick OS #504 fix
Fix test
Fix test
Close in finally block
Remove reliance on groovy in realm-transformer
Remove annotation
Fix compile issues
Fix tests
getFieldIndex returns null for non-existing field
Add changelog
Add test and fix changelog
Wrong section for changelog
Fix DynamicColumnMap instead
Backup
Fixing unit test using reflection.
Fixed default file name.
Disable Dynamic unit tests as the DynamicRealm isn't included.
Fixed unit test.
Moved more methods to RealmInstance
Backup with DynamicRealm
Renamed RealmFileWrapper to SharedGroupManager and RealmInstance to RealmBase + other refactors for cleaner separation
Cleanup
Fixed accessibility issues + unit test.
Backup
Merge branch 'master' into cm-realmfilewrapper
Doc fix.
Merge branch 'cm-realmfilewrapper' into cm-dynamic-realm
Merge branch 'master' into cm-realmfilewrapper
Merge branch 'cm-realmfilewrapper' into cm-dynamic-realm
Introduced DynamicRealm, DynamicRealmQuery, DynamicRealmResults.
SharedGroup no longer shared between Realm and DynamicRealm
Moved close() to base realm
Fixed local cache bug.
Made fields as restrictive as possible.
Merge branch 'master' into cm-realmfilewrapper
Cleanup synchronized methods + JavaDoc
Merge branch 'cm-realmfilewrapper' into cm-dynamic-realm
JavaDoc
Added generic setter.
Realm and DynamicRealm completely split.
More cleanup
Unifying class and className usage + JavaDoc updates.
Modify APIs to support Primitive List feature (Design 1)
revert non-API changes
add RealmFieldType.BINARY_LIST
Merge branch 'feature/primitive_list' into my/primitive_list_api
Merge branch 'feature/primitive_list' into my/primitive_list_api
Primitive List feature(Part2: Nullability changes) (#5150)
update Property
fix test
fix tests
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
generate getters and setters for primitive list
empty commit for part9
fix annotation processor unit tests
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'master-4.0' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
add realm field types
SchemaInfo for primitive list
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
fix a bug
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
fix tests
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'master-4.0' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
address findbugs issues
added Javadoc comment and RealmList.toArray()
fix bug
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Draft implementation of accessor context
implement Primitive List logic for copy() and insert()
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
implement Primitive List logic for insert(Realm, Iterator,...)
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
generate code for primitive list in update(), insertOrUpdate()
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
minor refactoring
Merge branch 'master-4.0' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
implement primitive list supprt for copyFromRealm()
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fixed a bug that getFieldType returns UNSUPPORTED_TABLE and isColumnNullable always false against primitive list field.
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge remote-tracking branch 'origin/master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Add accessor context for string and bytes[]
fix test
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix #5233
move ManagedListOperator classes from the inside of RealmList to outside
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Commit missing file
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
reformat code
Changed to throw IllegalArgumentException instead of IllegalStateException when value size exceeded the limit.
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Implement special handling for byte[] in RealmList
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Fix build on x86_64
avoid unnecessary looping
use fqcn when makeing a string of value type.
fix RealmList.toString()
Primitive List feature(Part6: OsList) (#5208)
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix a bug
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Remove RealmFieldType.isList()
Rephrase
fix bugs
add instrumentation tests
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
remove unused variable
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix a bug that annotation processor always generates schema of primitive list as nullable
add a constructor to create non-null primitive list
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
fix nativeIsColumnNullable
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix implementation of RealmList.remove(Object)
fix RealmListTests
fix RealmListTests
Handle non-null primitive list in JNI
Primitive List feature(Part7: Schema) (#5209)
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
added tests for 'copyToRealm()' and 'copyFromRealm()'
added tests for non-null primitive list
fix test
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
use OsObjectSchemaInfo.addPersistedValueListProperty()
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
reformat
Move list type check to CheckedRow
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
add size check to OsListTests.addNull_insertNull_setNull_requiredList(OsList)
fix test
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
introduce Row.getModelList() and Row.getValueList() to check field type more precisely
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Check nullable and throw ealier in JNI
Remove fixme and useless code
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
update nullablility annotations
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
address review feedback
add notice to Realm.*Json*()
simplify Proxy's createDetachedCopy()
Support listener on OsList
Merge pull request #5216 from realm/mc/primitive_list_10_oslist_JNI
stop to add backlink field into nullable field list
add comments to ClassMetaData.hasRequiredAnnotation() and  ClassMetaData.isRequiredField()
move Utils.getRealmListElementTypeMirror() to TypeMirrors class.
add class comment to TypeMirrors
add TODO comment
Merge branch 'feature/primitive_list' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Primitive List feature(Part8: Annotation processor implementation) (#5210)
Merge branch 'feature/primitive_list' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
remove outdate comment
fix todo comment
use custom deleter for shared_ptr<char> that contains char[]
fix failing test
remove methods to return primitive array
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'my/primitive_list_9_RealmList' into my/primitive_list_14_fix_shared_ptr_bug
Using constans defined in Table class
use assertArrayEquals() instead of assertTrue(Arrays.equals())
remove unused code
remove comment
update exception message
update thrown.expectMessage() to check exception message
fix test case name
add assertion for remove/removeAll
update RealmList.toString()
update exception message
fix failing tests
remove special handling to byte array in RealmList
remove special type conversion via Number in toArray()
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
fix failing tests
Merge branch 'my/primitive_list_9_RealmList' into my/primitive_list_14_fix_shared_ptr_bug
remove unnecessary index checks
refactor ManagedListOperator and its sub-classes
add Javadoc comments to ManagedListOperator and its subclasses
Merge branch 'master' into feature/primitive_list
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'my/primitive_list_9_RealmList' into my/primitive_list_14_fix_shared_ptr_bug
address review comments
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'my/primitive_list_9_RealmList' into my/primitive_list_14_fix_shared_ptr_bug
Primitive List feature(Part 9, RealmList) (#5213)
Merge branch 'feature/primitive_list' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'feature/primitive_list' into my/primitive_list_14_fix_shared_ptr_bug
Merge pull request #5266 from realm/my/primitive_list_14_fix_shared_ptr_bug
Merge pull request #5259 from realm/mc/primitive_list_13_Listener_on_OsList
Merge branch 'master' into feature/primitive_list
fix intentation
Merge branch 'master' into feature/primitive_list
Primitive List feature(Part15: Disable RealmList.createSnapshot() when the elements are not RealmModel) (#5336)
Merge branch 'master' into feature/primitive_list
Fix unit test
Typed getters on DynamicRealmObject now throws a proper exception instead of creating a seg fault when called with a field name of the wrong type.
Support wait_for_changes
Add multi process examples.
TypeBasedNotificationsTest fix
Test case fix
Send REALM_CHANGE manually for async transaction
Merge branch 'master' into mc-multi-process
Test case fix
Ranaming and java doc
Wait until daemon thread exit
Make mysterious test case simpler
Merge remote-tracking branch 'origin/master' into mc-multi-process
Merge remote-tracking branch 'origin/master' into mc-multi-process
Add RealmAsyncTask.isDone to fix flaky test
Fix typo
Fix test
rename a class transfer a primary key
fix changelog
reflect review points
Merge branch 'releases' into stk/bug/pkforclassrename
fix errata
depedency cleanup
Merge remote-tracking branch 'origin/releases' into stk/bug/pkforclassrename
merge releases
fix test comment
Merge branch 'releases' into stk/bug/pkforclassrename
test for long class name added
toString fix
56 char limits
fixes #5375
Add RFC for Primitive List API
Added a few more comments + Cleanup
Add RealmObject.getConfiguration(RealmModel) (#4720).
revert a change in Realm.java
check exception message
Now RealmObject.getConfiguration(RealmModel) returns null if the model is unmanaged
add RealmObject.getConfiguration()
implement RealmObject#getRealm() and DynamicRealmObject#getDynamicRealm()
fix markup
remove empty tests
Merge branch 'master-4.0' into my/getRealmConfig
fix tests
Merge branch 'master-4.0' into my/getRealmConfig
Upgrade to Sync 2.2.9
Add support for Weak/Strong links
Use only annotation if relationship is strong
Cleanup
Add missing boolean
Merge branch 'master' into cm/support-linktypes
Added design spec for RxJava support
Added API proposal
Add changelog
Move Pair into public API (#5081)
Convert RxJava1 to RxJava2 (#4992)
Merge branch 'master-4.0' into feature/rxjava2
RxJava2: Add support for changeset observables (#5089)
Test async transaction when async query existing
Update API: realm.executeTransaction -> realm.executeTransactionAsync
Fix async transaction problem when async query already exist.
Merge branch 'releases' into lk/async-transaction-0.91
async transaction messages are now considered their own type.
Cleanup
More cleanup
Better unites
PR feedback
Change log and java doc fix
addEmptyRow won't check PK anymore
Remove dup lines
Update javadoc for json APIs
Fix grammar
PR fix
Deprecate a method.
Class name may get obfuscated.
PR fix
Revert "Removed deprecated methods from Realm. Bumped dev version to 0.83.0"
Update core to v0.89.7
Add changes from TestHelper.java back
Update core to v0.89.8
writeEncryptedCopyTo might throw RENSE
Update core to 0.89.9
Fixed element type checking in DynamicRealmOject#setList() (#4252).
Update CHANGELOG.md
Merge branch 'releases' into my/issue4252
PR fixes
PR fixes
Work around the memmove bug on sumsung device
stupid pointer mistake
3rd try, use kg's test and builtin fun
Logging if memmove() isn't broken
use __realm_memove for testing
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Work around the memmove bug on sumsung device
Use bcopy() from FreeBSD
PR fix
Merge remote-tracking branch 'origin/releases' into mc/bug/hack-memmove
Only apply the hack to arm32
Switching to DRY libc11's implementations
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
fixing compilation error
Merge commit '7632433fb6d76e8b3bb6ac609407196365b5f676' as 'realm/realm-jni/object-store'
Squashed 'realm/realm-jni/object-store/' content from commit 91c87e4
Merge pull request #2915 from realm/mc/feature/os-subtree
Merge commit '2395585a0ab92192cf23a3723167b91f4109d37d' into feature/object-store
Squashed 'realm/realm-jni/object-store/' changes from 91c87e4..57ee591
Squashed 'realm/realm-jni/object-store/' changes from 57ee591..64e733e
Merge commit '9409cd68a3a7604ffe9ad688139328c36eb617a1' into feature/object-store
Adding object store and use C++14 to compile it (#2916)
gcc is overly paranoid (#2961)
Move JNI build to cmake
Build object store through cmake
Merge pull request #2997 from realm/mc/feature/os-cmake
Disable armeabi build for now (#2998)
Squashed 'realm/realm-library/src/main/cpp/object-store/' content from commit c16e841
Merge commit '270c80f6e16194ead7b17bf889f4401b45eeb56f' as 'realm/realm-library/src/main/cpp/object-store'
Merge pull request #3001 from realm/mc/feature/os-mv-subtree
Merge remote-tracking branch 'origin/master' into feature/object-store
Use SharedRealm from object store
release is ready before debug.
Remove SharedGroup
Move function to util.h
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Remove Group
Add cmake to docker (#3044)
Convert RealmFileException
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Revert args change
Remove useless macro
Add wait for change
Convert invlid transaction ex
Catch exceptions if needed
Add shared realm compact
JNI size should return a value
No need to define exception kind twice for testing
Use JUnit4
Fix annotation processor tests
Auto is shorter
Calling handover APIs on SharedRealm
Use move and build error
Merge remote-tracking branch 'origin/master' into feature/object-store
Finalizer for BaseRealm
Fix findbugs
Convert invalid key exception from OS
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Clean up Table
Make shared realm native pointer package protected
Make nativeCloseSharedRealm private
Use package protected getter for shared group pointer
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Update core to 1.2.0
Test cases for shared Realm
Remove Realm.hasChanged
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Merge remote-tracking branch 'origin/master' into feature/object-store
Update gradle to 2.14.1
Update core to 1.4.2
Use submodule instead of subtree
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Adopt changes from OS
Fix mips linking, simplify the condition checking
Remove realm-jni
Update android tools plugin to beta1
ANDROID_NDK_HOME instead of NDK_HOME
ndk.dir for README
Merge remote-tracking branch 'origin/releases' into mc/cmake
Update Android build to 2.2.0beta2
Merge remote-tracking branch 'origin/mc/cmake' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Update object store
Remove useless Table.getSortedView
Update submodule for jenkins
Force submodule update
Remove FIXME
Remove useless import
Format jni code
Remove useless line
More format of JNI code
PR fix
Use SharedRealm from OS
Fix code style
Use https for submoudle on jenkins
Add changelog
Use https for submodule
Add tests for non-existing table
Exception message fix
PR fix
Merge remote-tracking branch 'origin/master' into mc/feature/os-shared-realm
Update README
Readme more
Merge commit '7632433fb6d76e8b3bb6ac609407196365b5f676' as 'realm/realm-jni/object-store'
Squashed 'realm/realm-jni/object-store/' content from commit 91c87e4
Squashed 'realm/realm-jni/object-store/' changes from 91c87e4..57ee591
Merge pull request #2931 from realm/mc/feature/os-sync-upstream
Squashed 'realm/realm-jni/object-store/' changes from 57ee591..64e733e
Merge commit '9409cd68a3a7604ffe9ad688139328c36eb617a1' into feature/object-store
Adding object store and use C++14 to compile it (#2916)
Move JNI build to cmake
Merge pull request #2997 from realm/mc/feature/os-cmake
Disable armeabi build for now (#2998)
Remove the os dir to add subtree later
Squashed 'realm/realm-library/src/main/cpp/object-store/' content from commit c16e841
Merge pull request #3001 from realm/mc/feature/os-mv-subtree
Merge remote-tracking branch 'origin/master' into feature/object-store
Use SharedRealm from object store
release is ready before debug.
Remove SharedGroup
Move function to util.h
Merge remote-tracking branch 'origin/master' into feature/object-store
Remove Group
Add cmake to docker (#3044)
Convert RealmFileException
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Use write_copy from object store
Revert args change
Remove useless macro
Add wait for change
Catch exceptions if needed
Add shared realm compact
JNI size should return a value
No need to define exception kind twice for testing
Use JUnit4
Fix annotation processor tests
Auto is shorter
Calling handover APIs on SharedRealm
Add missing file
Build & warning fix
Use move and build error
Finalizer for BaseRealm
Fix findbugs
Convert invalid key exception from OS
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Clean up Table
Make shared realm native pointer package protected
Make nativeCloseSharedRealm private
Use package protected getter for shared group pointer
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Update core to 1.2.0
Test cases for shared Realm
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Update gradle to 2.14.1
Update core to 1.4.2
Use submodule instead of subtree
remove subtree
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Adopt changes from OS
Enable OS notification
Stupid mistake
Fix test with RealmTests
Remove BaseRealm.handler
Remove the dependency of Realm.Handler from tests (#3317)
Attach to jvm when destruct java binding context
Clean up commitTransaction
Fix build
Fix java doc
HandlerController should not be public
Thank you, findbugs
AndroidNotifier should not be public
PR fix
Change NativeObject to interface
Add phantom thread
Tests, benchmark and clean up
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Fix findbug issues
Clean up and commit message
Fix findbug issues
Fix my stupidness
CheckRow should not do native destruction
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Adapt to cmake
Naming changes.
Remove unused nativeClose()
Make GCTest faster.
Fix comments in context
Remove disabled test
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Benchmark compile error
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
PR fix
Add missing header
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Remove LinkView.nativeClose()
Fix comment
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
PR fix
Fix function pointer casting
Merge commit '7632433fb6d76e8b3bb6ac609407196365b5f676' as 'realm/realm-jni/object-store'
Squashed 'realm/realm-jni/object-store/' content from commit 91c87e4
Merge pull request #2915 from realm/mc/feature/os-subtree
Merge commit '2395585a0ab92192cf23a3723167b91f4109d37d' into feature/object-store
Squashed 'realm/realm-jni/object-store/' changes from 91c87e4..57ee591
Merge pull request #2931 from realm/mc/feature/os-sync-upstream
Merge commit '9409cd68a3a7604ffe9ad688139328c36eb617a1' into feature/object-store
Adding object store and use C++14 to compile it (#2916)
gcc is overly paranoid (#2961)
Move JNI build to cmake
Build object store through cmake
Merge pull request #2997 from realm/mc/feature/os-cmake
Disable armeabi build for now (#2998)
Remove the os dir to add subtree later
Squashed 'realm/realm-library/src/main/cpp/object-store/' content from commit c16e841
Merge pull request #3001 from realm/mc/feature/os-mv-subtree
Merge remote-tracking branch 'origin/master' into feature/object-store
release is ready before debug.
Remove SharedGroup
Move function to util.h
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Add cmake to docker (#3044)
Convert RealmFileException
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Use write_copy from object store
Exception for incompatible lock file changes
Revert args change
Remove useless macro
Add wait for change
Convert invlid transaction ex
Catch exceptions if needed
Add shared realm compact
Test fix
Fix annotation processor tests
Auto is shorter
Work in progress
Calling handover APIs on SharedRealm
Add missing file
Fix preprocessor test case
Merge remote-tracking branch 'origin/master' into feature/object-store
Finalizer for BaseRealm
Fix findbugs
Convert invalid key exception from OS
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Clean up Table
Make shared realm native pointer package protected
Make nativeCloseSharedRealm private
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Update core to 1.2.0
Test cases for shared Realm
Remove Realm.hasChanged
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
WiP
Merge branch 'mc/feature/os-shared-realm' of github.com:realm/realm-java into kg/feature/os-schema
WiP
WIP: Working on the Annotation Processor
WiP
Adding createRealmObjectSchema() to proxy classes.
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Update gradle to 2.14.1
Update core to 1.4.2
Use submodule instead of subtree
remove subtree
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Adopt changes from OS
Remove subtree
Merge branch 'mc/feature/os-shared-realm' into kg/feature/os-schema
Adopt OS changes
Can build under AS 2.2 beta
WiP: Callback to migration
WiP
Updating proxy classes to match the RealmObjectSchema class.
WiP
Making unit tests pass
fix build
WiP
All RealmObjectSchemaTests pass
@Require means not nullable!
WiP
Include all needed classes
Include all needed classes
Remember to advance iterator
Handling object store exceptions
Updating tests so we don't have any native crashes
Work on migration
Merge commit '7632433fb6d76e8b3bb6ac609407196365b5f676' as 'realm/realm-jni/object-store'
Squashed 'realm/realm-jni/object-store/' content from commit 91c87e4
Merge pull request #2915 from realm/mc/feature/os-subtree
Merge commit '2395585a0ab92192cf23a3723167b91f4109d37d' into feature/object-store
Squashed 'realm/realm-jni/object-store/' changes from 91c87e4..57ee591
Merge pull request #2931 from realm/mc/feature/os-sync-upstream
Squashed 'realm/realm-jni/object-store/' changes from 57ee591..64e733e
Merge commit '9409cd68a3a7604ffe9ad688139328c36eb617a1' into feature/object-store
Adding object store and use C++14 to compile it (#2916)
gcc is overly paranoid (#2961)
Move JNI build to cmake
Build object store through cmake
Merge pull request #2997 from realm/mc/feature/os-cmake
Disable armeabi build for now (#2998)
Remove the os dir to add subtree later
Squashed 'realm/realm-library/src/main/cpp/object-store/' content from commit c16e841
Merge commit '270c80f6e16194ead7b17bf889f4401b45eeb56f' as 'realm/realm-library/src/main/cpp/object-store'
Merge pull request #3001 from realm/mc/feature/os-mv-subtree
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Add cmake to docker (#3044)
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Update gradle to 2.14.1
Update core to 1.4.2
Use submodule instead of subtree
Fix mips linking, simplify the condition checking
Remove realm-jni
Update android tools plugin to beta1
Update Android build to 2.2.0beta2
Merge remote-tracking branch 'origin/mc/cmake' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Wrong changes
Added unit test exposing but with change listeners and findFirstAsync
Added unit test exposing but with change listeners and findFirstAsync
notify RealmObject callback even when the table is null
Merge remote-tracking branch 'origin/master' into cm/bug/findfirstasync-notifychange
fixing unit tests
Add to realmObjects when addChangeListener called
PR fix
Fix dodgy code
add field name to the exception message when null is set to required field (#4484)
fix existing tests
fix cast style
Merge branch 'releases' into my/issue4484
update CHNAGELOG
Unit test to match #1581
Add missing error codes
Add support for waitForServerChanges
Merge branch 'master' into cm/waitforserverchanges
Merge branch 'master' into cm/waitforserverchanges
Fix locking issues in SyncSession. Added integration tests.
Use JavaGlobalRef for easier scope management
PR feedback
PR feedback
Merge branch 'master' into cm/waitforserverchanges
Merge branch 'master' into cm/waitforserverchanges
Fix Javadoc/changelog
Rename to waitForInitialRemoteData + fix Javadoc
Use move constructor
Delete file if download fails. PR feedback
Missing files
Add stress test
Fix unit tests + added RealmConfiguration.realmExists().
Don't import sync exception type
PR  feedback
Merge branch 'master' into cm/waitforserverchanges
Use initialiser list
Keep `RealmConfiguration` out of the public API
realmExists is no longer public
Implement getInstanceAsync
Wrong object store
Fix javadoc
PR fix
Fix comment
Don't remove the cache from map
Use weak ref to hold RealmCache in map
Update comments
Merge remote-tracking branch 'origin/master' into mc/cache-lock
change log
Lock on cacheMap
update change log
Merge remote-tracking branch 'origin/master' into mc/cache-lock
oops
Fix tests
Close in finally
Iterate on EmumMap.values()
Fix comment
Use list instead of map
Keep strong ref to leaked cache
Merge remote-tracking branch 'origin/master' into mc/cache-lock
PR fix
Update Javadoc to not reference Realm.getDefaultInstanceAsync that does not exist.
PR feedback: move the config as a static member variable.
use qualified name for model classes in generated code in order to avoid name conflict.
add model classes that test issue 3077.
update changelog for #3077
Refactor RealmLog
Add changelog
Log should be called before ThrowNew
PR fix
Fix example
Fix clear loggers
Fix format string
Merge remote-tracking branch 'origin/master' into mc/refactor-logger
PR fix
Use IdentityHashMap
Use remove_if
Merge remote-tracking branch 'origin/master' into mc/refactor-logger
PR fix
Fix my stupid error
Add proposal for fine-grained notifications API + sample imply (mostly for easier prototyping).
Small mistakes and layout fixes
Use proper naming conventions for generic parameters
wip
insert() now correctly detects if the same primary key is used in two different java instances.
Make Table.throwDuplicatePrimaryKeyException static
Use native methods everywhere
Unit test for https://github.com/realm/realm-java/issues/3732
Fix version + import
Merge remote-tracking branch 'origin/cm/bug/insertorupdate-otherrealm' into releases
Merge branch 'releases' of https://github.com/realm/realm-java into releases
Realm migration is triggered, when the primary key definition is altered (#3966)
Merge branch 'releases' of https://github.com/realm/realm-java into nh/fix_3966
PR feedback
update changelog
Merge branch 'releases' of https://github.com/realm/realm-java into nh/fix_3966
PR feedback
Fixing test
Fix wrong javadoc in RealmConfiguration
Remove excess bracer
Fixing unit test using reflection.
Fixed default file name.
Refactored shared code to RealmInstance and RealmFileWrapper.
Disable Dynamic unit tests as the DynamicRealm isn't included.
Fixed unit test.
Moved more methods to RealmInstance
Backup with DynamicRealm
Renamed RealmFileWrapper to SharedGroupManager and RealmInstance to RealmBase + other refactors for cleaner separation
Fixed accessibility issues + unit test.
Backup
Merge branch 'master' into cm-realmfilewrapper
Make RealmBase public and move JavaDoc there.
Doc fix.
Backup
Merge branch 'master' into cm-realmfilewrapper
Merge branch 'cm-realmfilewrapper' into cm-dynamic-realm
Introduced DynamicRealm, DynamicRealmQuery, DynamicRealmResults.
SharedGroup no longer shared between Realm and DynamicRealm
Moved close() to base realm
Fixed local cache bug.
Made fields as restrictive as possible.
Merge branch 'master' into cm-realmfilewrapper
Merge lessons learned when adding DynamicRealm
Merge branch 'master' into cm-realmfilewrapper
Cleanup synchronized methods + JavaDoc
Merge branch 'cm-realmfilewrapper' into cm-dynamic-realm
JavaDoc
Added generic setter.
Realm and DynamicRealm completely split.
Merged dynamic/main packages. Major cleanup
More cleanup
Verifying that listeners are getting called on Realm updates.
Merge branch 'master' into cm/bug/onchange-listener
Added more tests.
Try to create getFilesDir if it doesn't exist on startup. Otherwise throw IllegalStateException
Return from method as soon as possible in the happy path.
Rename to filesDir
Better exception message
Add support for uploading and downloading changes with a timeout
Expose return value like CountdownLatch
Merge branch 'master' into cm/upload-download-with-timeout
Add support for `waitForInitialRemoteData` with timeout
Fix Doc and comments
Update CHANGELOG.md
PR comments
Merge branch 'master' into cm/upload-download-with-timeout
Remove logging
getColumnInfo was checking obfuscated class name
Upgrade Realm Core to 2.8.6
Fix build with Object Store
Update changelog
Adapt DescriptorOdering changes in Object Store
Update Object Store
Added unit test exposing but with change listeners and findFirstAsync
notify RealmObject callback even when the table is null
Merge remote-tracking branch 'origin/master' into cm/bug/findfirstasync-notifychange
fixing unit tests
Trigger collection listeners when commit
Added dynamic design doc.
Line wrapping
Updated doc to match current state
Support importing primitive list from JSON
Add missing test
Update core, sync and object store
deleteRealm test fix
Update ObjectStore submodule
Remove useless header
Changelog and ROS testing Dockerfile
Merge remote-tracking branch 'origin/releases' into mc/update-core-2.2.0
Update OS submodule
Revert "Fix the warnings of StrictMode"
Fix changelog
Call npm init for ROS docker
Merge remote-tracking branch 'origin/releases' into mc/update-core-2.2.0
Fix changelog
Add comment about GC to all relevant change listeners
Fix RealmList code samples
fix a bug that CheckedRow#getLinkList(long) does not check the field type.
added a test to set non-null object by DynamicRealmObject#setObject()
delayed field type checking for better performance.
reformat the code
Merge branch 'releases' into my/issue3549
fix a bug in checkFieldType()
Remove readonly for defaultPermissionRealmConfig
Refactored deprecated Callback
SyncUser: renamed `getAccessToken` + method is no longer public
update changelog
Fixing examples
revert to gradle alpha4
Initial RFC for Import/Export
Fixed NPE when async queries are not yet finished, but Realm instance is closed (#4131).
Those should not be reverted.
Merge remote-tracking branch 'origin/releases' into mc/remove-optional-api-transformer
PR fix
Merge remote-tracking branch 'origin/releases' into mc/remove-optional-api-transformer
Remove optional APIs if dependencies don't meet
Merge remote-tracking branch 'origin/releases' into mc/optional-api-releases
PR feedback 2
2016!!! I am OLDERRRRR!!!
Merge remote-tracking branch 'origin/master' into mc/optional-api-releases
Update core, sync and object store
REALM_ENABLE_SYNC should be boolean macro
deleteRealm test fix
Remove useless header
Changelog and ROS testing Dockerfile
Fix the warnings of StrictMode
Merge remote-tracking branch 'origin/releases' into mc/update-core-2.2.0
Update OS submodule
Revert "Fix the warnings of StrictMode"
Fix changelog
Call npm init for ROS docker
Merge remote-tracking branch 'origin/releases' into mc/update-core-2.2.0
Modify APIs to support Primitive List feature (Design 1)
revert non-API changes
add RealmFieldType.BINARY_LIST
remove unused import
Merge branch 'feature/primitive_list' into my/primitive_list_api
Merge branch 'feature/primitive_list' into my/primitive_list_api
Primitive List feature(Part2: Nullability changes) (#5150)
add methods to modify PrimitiveList in OsList
update Property
fix test
fix tests
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
generate getters and setters for primitive list
empty commit for part9
implement logic for primitive list in RealmList
fix tests
fix annotation processor unit tests
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'master-4.0' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
throw an exception if query or aggregation feature is used for primitive list
add realm field types
SchemaInfo for primitive list
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
fix a bug
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
fix a bug
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
fix tests
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'master-4.0' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
address findbugs issues
fix bug
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Draft implementation of accessor context
implement Primitive List logic for copy() and insert()
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
implement Primitive List logic for insert(Realm, Iterator,...)
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
generate code for primitive list in update(), insertOrUpdate()
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
minor refactoring
Merge branch 'master-4.0' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
implement primitive list supprt for copyFromRealm()
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
added a test to get field meta data of primitive lists
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge remote-tracking branch 'origin/master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Add accessor context for string and bytes[]
fix test
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix #5233
move ManagedListOperator classes from the inside of RealmList to outside
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Commit missing file
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
reformat code
Changed to throw IllegalArgumentException instead of IllegalStateException when value size exceeded the limit.
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Implement special handling for byte[] in RealmList
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
avoid unnecessary looping
use fqcn when makeing a string of value type.
fix RealmList.toString()
Primitive List feature(Part6: OsList) (#5208)
Merge branch 'master' into feature/primitive_list
Merge commit '0fb5ed3' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Remove RealmFieldType.isList()
Rephrase
fix bugs
add instrumentation tests
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
remove unused variable
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix a bug that annotation processor always generates schema of primitive list as nullable
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
add a constructor to create non-null primitive list
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix nativeIsColumnNullable
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix compilation error
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix implementation of RealmList.remove(Object)
fix RealmListTests
fix RealmListTests
Handle non-null primitive list in JNI
Primitive List feature(Part7: Schema) (#5209)
Merge branch 'feature/primitive_list' into mc/primitive_list_10_oslist_JNI
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
added tests for 'copyToRealm()' and 'copyFromRealm()'
added tests for non-null primitive list
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
use OsObjectSchemaInfo.addPersistedValueListProperty()
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Move list type check to CheckedRow
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix test
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Check nullable and throw ealier in JNI
Remove fixme and useless code
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
update nullablility annotations
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
update test case to expose an issue
Revert non-related changes
address review feedback
add notice to Realm.*Json*()
simplify Proxy's createDetachedCopy()
Support listener on OsList
Merge pull request #5216 from realm/mc/primitive_list_10_oslist_JNI
add comments to ClassMetaData.hasRequiredAnnotation() and  ClassMetaData.isRequiredField()
move Utils.getRealmListElementTypeMirror() to TypeMirrors class.
fix exception message
add class comment to TypeMirrors
Merge branch 'feature/primitive_list' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Primitive List feature(Part8: Annotation processor implementation) (#5210)
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
remove outdate comment
fix todo comment
use custom deleter for shared_ptr<char> that contains char[]
fix failing test
remove methods to return primitive array
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'my/primitive_list_9_RealmList' into my/primitive_list_14_fix_shared_ptr_bug
Using constans defined in Table class
use assertArrayEquals() instead of assertTrue(Arrays.equals())
add changelog entry about removed methods
remove unused code
update comment
remove comment
update exception message
update thrown.expectMessage() to check exception message
add assertion for remove/removeAll
update RealmList.toString()
update exception message
fix failing tests
remove special handling to byte array in RealmList
remove special type conversion via Number in toArray()
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
fix failing tests
Merge branch 'my/primitive_list_9_RealmList' into my/primitive_list_14_fix_shared_ptr_bug
remove unnecessary index checks
refactor ManagedListOperator and its sub-classes
use thrown.expectMessage()
add Javadoc comments to ManagedListOperator and its subclasses
Merge branch 'master' into feature/primitive_list
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'my/primitive_list_9_RealmList' into my/primitive_list_14_fix_shared_ptr_bug
address review comments
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'my/primitive_list_9_RealmList' into my/primitive_list_14_fix_shared_ptr_bug
Primitive List feature(Part 9, RealmList) (#5213)
Merge branch 'feature/primitive_list' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'feature/primitive_list' into my/primitive_list_14_fix_shared_ptr_bug
Merge pull request #5266 from realm/my/primitive_list_14_fix_shared_ptr_bug
Merge pull request #5259 from realm/mc/primitive_list_13_Listener_on_OsList
Merge branch 'master' into feature/primitive_list
fix intentation
Merge branch 'master' into feature/primitive_list
Merge branch 'master' into feature/primitive_list
Fix unit test
Support importing primitive list from JSON
Add missing test
Refactored deprecated Callback
SyncUser: renamed `getAccessToken` + method is no longer public
Fixing examples
revert to gradle alpha4
Remove log files in Realm.deleteRealm
PR feedback
Remove useless lines
* All non-backlink tests passing; All non-test FIXMEs gone * Static analysis tests passing * Fix copy bug in ColumnIndices * Address PR comments * Code complete * Refactor ColumnInfo and ColumnIndices for better control
Merge branch 'master' into feature/backlinks
Merge branch 'master' into feature/backlinks
Merge branch 'master' into feature/backlinks
Merge branch 'master' into feature/backlinks
Refactor all field parsing into the FieldDescriptor class All tests passing.
Removed Legacy FieldDescriptor. All tests pass
Merge branch 'master' into feature/backlinks
Merge branch 'master' into feature/backlinks
Linking Objects unit tests. (#4576)
Use CheckedRow when creating a DynamicRealm Object.
Typed getters on DynamicRealmObject now throws a proper exception instead of creating a seg fault when called with a field name of the wrong type.
Fix typo
findFirstAsync returns invalid row if no object
Javadoc for findFirstAsync
Rephrase
Revert "Options in AndroidManifest for attaching debugger"
Options in AndroidManifest for attaching debugger
PrimaryKey + Required annotation hotfix
remove redundant dependancies
Add support for ccache
Test async transaction when async query existing
Update API: realm.executeTransaction -> realm.executeTransactionAsync
Fix async transaction problem when async query already exist.
Merge branch 'releases' into lk/async-transaction-0.91
Cleanup
More cleanup
Better unites
PR feedback
Allow the Realm Gradle plugin to modify the bytecode
Fix SyncConfiguration.toString()
Added toString to SyncUser.
Fix findbugs error
Merge branch 'releases' into cm/syncconfiguration-tostring
Proper category
Proper header size
Binding IOException to ErrorCode.IO_EXCEPTION
adding correct import
- PR feedback - Update changelog
Adding a max retries to the ExponentialBackoff to avoid retrying indefinitely the logout (revoke) query, which cause some tests to block
Centralize generation of random values
Enable problematic tests
Add check for data dir
Better error messages
Merge branch 'master' into cm/bug/track-down-flaky-tests
Attempting to fix SocketTimeoutConnections seen a lot on CI.
Missing argument
Retry in case of SocketTimeoutException
Better logs when triggering exponential backof
Merge branch 'master' into cm/bug/track-down-flaky-tests
Upgrade dependencies + work around for detecting initial permission state.
Use public release
Merge branch 'master' into cm/bug/track-down-flaky-tests
Handle transaction for schema updates
Preparing RealmMigration integration
fix Javadoc documentation about encryption key length (64 bit -> 64 bytes)
Update core, sync and object store
REALM_ENABLE_SYNC should be boolean macro
deleteRealm test fix
Update ObjectStore submodule
Remove useless header
Changelog and ROS testing Dockerfile
Fix the warnings of StrictMode
Merge remote-tracking branch 'origin/releases' into mc/update-core-2.2.0
Update OS submodule
Revert "Fix the warnings of StrictMode"
Fix changelog
Call npm init for ROS docker
Merge remote-tracking branch 'origin/releases' into mc/update-core-2.2.0
Fix changelog
Fixed @LinkingObjects notation for Kotlin
transform access to other model fields in model's constructors.
update CHANGELOG
remove redundant code
update comment
add a comment about '$0' and 'this'
Add support for Realm.refresh()
Fixed unit test + changelog
Expanded description
Remove dependency to android-command plugin because of https://github.com/novoda/gradle-android-command-plugin/issues/122  now running monkey without the plugin
revert version and changelog changes
revert version
- Rename monkey task to be compatible with existing release build - Add clean task before running monkey to prevent DEX error (when running debug & release)
remove ObjectServerUser
add multiple session tests
Merge remote-tracking branch 'origin/master' into nh/rm_object_server_user
Update examples
Fixing PMD issue
Fixing unit test
Fix typo
WIP
WIP
Merge remote-tracking branch 'origin/master' into nh/rm_object_server_user
Using identity with authURL to identity a SyncUser
Fixing tests
Merge remote-tracking branch 'origin/master' into nh/rm_object_server_user
PR feedback
update CHANGELOG
update chaneglog
fix CHANGELOG.md
Merge remote-tracking branch 'origin/master' into nh/rm_object_server_user
fix compile issue
fix Context leak warning in threadExample (#4580)
cancel task in onStop()
add check if the fragment is attached to the UI
add check if the fragment is attached to the UI
cancel the task if parent fragment is detached
Improved performance when parsing field descriptions
Naming
Fix test
Use SingletonList
Merge branch 'master' into cm/allocation-parsing-fields
Handle PK when calling RealmSchema's remove/rename
Why did I always miss files in commit today?
WIP
WIP
Add Unit Tests
Merge remote-tracking branch 'origin/releases' into nh/fixes_4561_encryption_param
update change log
PR feedback
wip
insert() now correctly detects if the same primary key is used in two different java instances.
Make Table.throwDuplicatePrimaryKeyException static
Use native methods everywhere
Make Javadoc and exception messages around isLoaded more meaningful.
PR comments
PR comments
Merge branch 'releases' into cm/isloaded-javadoc
Clarify how insertOrUpdate behave for objects with primary keys.
PR comments
Check transaction state for buld insertion
Add javadoc
Missing transaction in threading example
Upgrading to core 0.100.3
Fix whitespace
WIP
Merge branch 'master' into cm/bug/iterators
WIP
Merge branch 'master' into cm/bug/iterators
Javadoc fixes
Merge branch 'master' into cm/bug/iterators
Added notification tests for none-synched RealmResults.
Merge branch 'master' into cm/bug/iterators
Fix refreshing of tableviews.
Better error reporting from RunInLooperThread
HandlerController is always available.
PR feedback
PR feedback
Refactor notify listeners
Merge branch 'cm/handler-notifications' into cm/bug/iterators
Backup
Backup
Fixed wrong object returned for deleted objects.
More unit test fixes.
Merge branch 'master' into cm/bug/iterators
refresh send a REALM_CHANGED for looper thread
It's alive .... almost.
Merge branch 'master' into cm/bug/iterators
Merge branch 'master' into cm/bug/iterators
Unit test fixes
removed unecessary boolean
More unit test fixes.
Merge branch 'nh/refresh_send_realmchanged' into cm/bug/iterators
It's alive....finally.
Fix style issues.
Paramaterized the iterator tests.
More unit tests.
Added RealmCollection and OrderedRealmCollection interface. Refactored RealmList/RealmResults unit tests.
Merge branch 'master' into cm/collection-interfaces
PR Feedback
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Merge branch 'releases' into cm/collection-interfaces
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Merge branch 'master' into cm/collection-interfaces
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Fix unit tests.
Merge branch 'master' into cm/collection-interfaces
Cleanup
Merge branch 'master' into cm/collection-interfaces
Unit test fixes.
Merge branch 'master' into cm/collection-interfaces
Javadoc fixes
Cleanup javadoc + clarify contains behaviour
Fix unit test
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Merge branch 'master' into cm/bug/iterators
Fixing unit tests.
Merge branch 'master' into cm/bug/iterators
Combine unit tests in one class.
Begun unifying unit tests
Remove replaced tests.
Cleanup
Fixed Findbugs errors
Fix check style
Merge branch 'master' into cm/bug/iterators
Merge branch 'master' into cm/bug/iterators
Pr comments
Remove description from UnsupportedOperation
Expand comment on depends_on_deleted_linklist
PR feedback
Added RealmList ConcurrentModification tests
Add more ConcurrentModification unit tests.
Simplify test
More ConcurrentModification checks
PR feedback
Merge branch 'master' into cm/bug/iterators
Realm Annotation processor no longer consumes the annotations.
Proper visibility
Fix comments
Adding test
Follow table links and not query links
Adding entry in change log
Fix wrong Javadoc
Set log level for core logger bridge
PR fix
Comments fix
fix artifactoryPublish task in realm-annotations-processor
fix a bug that realm-snnotations-processor is not deployed to ojo
Update core, sync and object store
REALM_ENABLE_SYNC should be boolean macro
deleteRealm test fix
Update ObjectStore submodule
Remove useless header
Changelog and ROS testing Dockerfile
Merge remote-tracking branch 'origin/releases' into mc/update-core-2.2.0
Update OS submodule
Revert "Fix the warnings of StrictMode"
Fix changelog
Call npm init for ROS docker
Merge remote-tracking branch 'origin/releases' into mc/update-core-2.2.0
Fix changelog
Write and read in many threads
test will run forever
WiP
Moving test to separate class. Disable encryption.
Opening and closing Realm at every iteration
Downgrade version of Javassist causing issue with classloader at runtime #5641
Update Changelog
Fixes issue with incremental build causing direct access to model without accessor to fail (#6056).
Merge branch 'releases' into nh/fix_incremental_build
stop using DependencyResolutionListener in Realm gradle plugin to avoid ConcurrentModificationException in some environment.
update README
update README
clean up the code
Add support for new sort and distinct predicates
Convert distinct tests
Merge branch 'master' into cm/sort-distinct-predicates
Fix support for allowing both distinct and sort operations in same query
Convert distinctAsync tests
Sorting on children is supported
Fix typo
Merge branch 'master' into cm/sort-distinct-predicates
Javadoc feedback and throw if sort/distinct is added multiple times
Fix unit tests
set the path of the directory of named pipes to fix #3140
update CHANGELOG
add a test for issue3140
update test
Merge branch 'releases' into my/issue3140
skip an external storage test on the device where SELinux is not enforced
rename test
Merge branch 'releases' into my/issue3140
rename variable
make SharedRealm#temporaryDirectory volatile
Dont use ApplicationContext
Use ApplicationContext if possible, otherwise fallback to provided one
Remove unused import
Merge branch 'master' into cm/bug/dont-use-applicationcontext
PR feedback: equalToAny -> in
PR feedback: apply 'beginGroup()' and 'endGroup()' on 'in' operator.
Add a test, in_date()
Remove unnecessary tests.
Fix type fields in in_byte()
Add 3 tests, in_byte(), in_short() and in_int()
Update CHANGELOG.md for RealmQuery.in()
PR feedback: array version -> vargs version.
PR feedback: ++i -> i++
PR feedback: fix javadocs.
PR feedback: remove unnecessary parenthesises.
PR feedback: revert the variable arguments version.
PR feedback: fix javadocs and improve error messages.
PR feedback: Extract the constant string literal from the hard-coded error message.
PR feedback: Adopt boxed type API.
PR feedback: add null tests.
Fix row_isValid
Fix openPreNullWithRequired
PR feedback: update javadocs.
PR feedback: use NoPrimaryKeyNullTypes for testing instead of AllTypes.
PR feedback: Revert AllTypes.
Revert automatic formatting.
PR feedback: remove unnecessay empty lines.
PR feedback: update javadocs.
Fixes Kotlin extension functions always being added to both Java and Kotlin projects.
Support transient fields.
Fix changelog
Add unit test
Don't create internal get/set methods for transient fields.
Update javadoc
Fix initial listener not triggering for query-based listeners on RealmResults
Make test run as part of the test suite instead of only alone.
Remove step not needed.
Support annotationProcessor configuration.
Update Realm.groovy
update logic for Kotlin project
Merge branch 'master' into my/support_annotationProcessor_configuration
improve readability
fix typo in CHANGELOG
Initial support for null (Strings only).
Adding unit test: non-null strings for nullable fields.
Treat NULL as a special case in order to ignore it as a special case anywhere else.
Adding checks for nullable at the JNI layer.
Allow null as string value in queries.
Unit test: setting null string for not-nullable field.
Adding unit tests for RealmQuery and RealmResults with null string values.
Changing from nullable to not nullable
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Adding JSON support for null
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Using VariableElement instead of field names
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Extending RealmQuery.isNull() and RealmQuery.isNotNull() to work on nullable fields.
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Updates due to PR feedback
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Null support for byte arrays
Adding constants to enhance readability of code when adding columns
Primary keys cannot be nullable
Binary data can be nullable
toString() must be aware of nullable fields
Adding JSON unit tests
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Update expected output
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Adding Table.convertColumnToNullable()
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Renaming annotation to Required
Renaming annotation to Required
Preserve column index when migrating to nullable column
WiP
Adding migration tests for null support
Null handling for JSON String and byte[]
Minor fixes.
Test async transaction when async query existing
Update API: realm.executeTransaction -> realm.executeTransactionAsync
Fix async transaction problem when async query already exist.
Merge branch 'releases' into lk/async-transaction-0.91
async transaction messages are now considered their own type.
Cleanup
More cleanup
Better unites
PR feedback
Change NativeObject to interface
Add phantom thread
Tests, benchmark and clean up
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Code formatting
Fix findbug issues
Clean up and commit message
Get finalizer ptr only once
Fix findbug issues
Fix my stupidness
CheckRow should not do native destruction
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Adapt to cmake
Naming changes.
Remove unused nativeClose()
Make GCTest faster.
Fix comments in context
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Benchmark compile error
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
PR fix
Add missing header
Merge remote-tracking branch 'origin/releases' into mc/bye-bye-finalizer
Remove LinkView.nativeClose()
Fix comment
PR fix
Fix function pointer casting
Merge branch 'master-4.0' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
throw an exception if query or aggregation feature is used for primitive list
add realm field types
SchemaInfo for primitive list
fix a bug
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
fix a bug
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
fix tests
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'master-4.0' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
address findbugs issues
fix bug
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Draft implementation of accessor context
implement Primitive List logic for copy() and insert()
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
implement Primitive List logic for insert(Realm, Iterator,...)
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
minor refactoring
Merge branch 'master-4.0' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
implement primitive list supprt for copyFromRealm()
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
fixed a bug that getFieldType returns UNSUPPORTED_TABLE and isColumnNullable always false against primitive list field.
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
added a test to get field meta data of primitive lists
Merge remote-tracking branch 'origin/master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Add accessor context for string and bytes[]
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix #5233
move ManagedListOperator classes from the inside of RealmList to outside
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Commit missing file
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Changed to throw IllegalArgumentException instead of IllegalStateException when value size exceeded the limit.
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Implement special handling for byte[] in RealmList
Merge branch 'feature/primitive_list' into my/primitive_list_6_OsList
Merge branch 'my/primitive_list_6_OsList' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Fix build on x86_64
avoid unnecessary looping
use fqcn when makeing a string of value type.
fix RealmList.toString()
Merge branch 'master' into feature/primitive_list
Merge commit '0fb5ed3' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_7_Schema
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Fix findbugs
fix a bug
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_7_Schema
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Remove RealmFieldType.isList()
Rephrase
fix bugs
add instrumentation tests
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_7_Schema
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
remove unused variable
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
add a constructor to create non-null primitive list
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix nativeIsColumnNullable
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix compilation error
Merge branch 'my/primitive_list_7_Schema' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
fix implementation of RealmList.remove(Object)
fix RealmListTests
fix RealmListTests
Primitive List feature(Part7: Schema) (#5209)
Merge branch 'feature/primitive_list' into mc/primitive_list_10_oslist_JNI
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
added tests for 'copyToRealm()' and 'copyFromRealm()'
added tests for non-null primitive list
fix test
introduced OsObjectSchemaInfoaddPersistedValueListProperty() for primitive list
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
use OsObjectSchemaInfo.addPersistedValueListProperty()
reformat
Move list type check to CheckedRow
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
add size check to OsListTests.addNull_insertNull_setNull_requiredList(OsList)
fix test
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
introduce Row.getModelList() and Row.getValueList() to check field type more precisely
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Check nullable and throw ealier in JNI
Remove fixme and useless code
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
update nullablility annotations
Merge branch 'mc/primitive_list_10_oslist_JNI' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
update test case to expose an issue
Revert non-related changes
address review feedback
add notice to Realm.*Json*()
stop to add backlink field into nullable field list
add comments to ClassMetaData.hasRequiredAnnotation() and  ClassMetaData.isRequiredField()
move Utils.getRealmListElementTypeMirror() to TypeMirrors class.
fix exception message
add class comment to TypeMirrors
add TODO comment
Merge branch 'feature/primitive_list' into my/primitive_list_8_annotation_processor
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'master' into feature/primitive_list
Merge branch 'my/primitive_list_8_annotation_processor' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Primitive List feature(Part8: Annotation processor implementation) (#5210)
Merge branch 'feature/primitive_list' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
remove outdate comment
use custom deleter for shared_ptr<char> that contains char[]
fix failing test
remove methods to return primitive array
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'my/primitive_list_9_RealmList' into my/primitive_list_14_fix_shared_ptr_bug
Using constans defined in Table class
use assertArrayEquals() instead of assertTrue(Arrays.equals())
add changelog entry about removed methods
remove unused code
update comment
remove comment
update exception message
update thrown.expectMessage() to check exception message
fix test case name
add assertion for remove/removeAll
update RealmList.toString()
update exception message
fix failing tests
remove special type conversion via Number in toArray()
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
fix failing tests
remove unnecessary index checks
refactor ManagedListOperator and its sub-classes
add Javadoc comments to ManagedListOperator and its subclasses
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into my/primitive_list_9_RealmList
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'my/primitive_list_9_RealmList' into my/primitive_list_14_fix_shared_ptr_bug
address review comments
Merge branch 'my/primitive_list_9_RealmList' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'my/primitive_list_9_RealmList' into my/primitive_list_14_fix_shared_ptr_bug
Primitive List feature(Part 9, RealmList) (#5213)
Merge branch 'feature/primitive_list' into mc/primitive_list_13_Listener_on_OsList
Merge branch 'feature/primitive_list' into my/primitive_list_14_fix_shared_ptr_bug
Merge pull request #5266 from realm/my/primitive_list_14_fix_shared_ptr_bug
Merge pull request #5259 from realm/mc/primitive_list_13_Listener_on_OsList
Merge branch 'master' into feature/primitive_list
fix intentation
Merge branch 'master' into cm/cm/primitivelist-schema-support
Merge branch 'master' into feature/primitive_list
Merge branch 'feature/primitive_list' into cm/cm/primitivelist-schema-support
Add preliminary support for adding primitive lists.
Fix bugs in implementation and tests
Add test for changing existing data
Add tests for primary key and indexed fields
Add changelog
Fix findbugs
Primitive List feature(Part15: Disable RealmList.createSnapshot() when the elements are not RealmModel) (#5336)
Merge branch 'master' into feature/primitive_list
Fix unit test
Merge branch 'feature/primitive_list' into cm/cm/primitivelist-schema-support
PR feedback
More cleanup
Merge branch 'master' into cm/cm/primitivelist-schema-support
Fix wrong var name
Merge branch 'master' into cm/cm/primitivelist-schema-support
Remove types no longer visible
Change class type parameter for better readability
Better javadoc
PR feedback
Ups
Fix unit test
Rename variables to primitiveType. Better error messages for wrong Class type. Add missing unit tests.
Revert "Removed deprecated methods from Realm. Bumped dev version to 0.83.0"
Update core to v0.89.7
Add changes from TestHelper.java back
Update core to v0.89.8
writeEncryptedCopyTo might throw RENSE
Update core to 0.89.9
Work around the memmove bug on sumsung device
stupid pointer mistake
3rd try, use kg's test and builtin fun
Logging if memmove() isn't broken
use __realm_memove for testing
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
use memmove impl from kernel
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Use bcopy() from FreeBSD
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
PR fix
Merge remote-tracking branch 'origin/releases' into mc/bug/hack-memmove
Remove useless log
Only apply the hack to arm32
Switching to DRY libc11's implementations
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
fixing compilation error
wip
insert() now correctly detects if the same primary key is used in two different java instances.
Make Table.throwDuplicatePrimaryKeyException static
Use native methods everywhere
Make Javadoc and exception messages around isLoaded more meaningful.
PR comments
PR comments
Merge branch 'releases' into cm/isloaded-javadoc
Clarify how insertOrUpdate behave for objects with primary keys.
PR comments
Check transaction state for buld insertion
Add javadoc
Missing transaction in threading example
Fixes #5677 - removed session network listener since it's redundant with the SyncManager one
Typo
unit test cleanup
whitespace removed
Merge branch 'master' into stk/unitestcleanup
test parameterization
test scope fix
fix indents
remove idents
implement global logout (#3639)
Merge branch 'master' into my/implement_global_logout
Merge branch 'master' into my/implement_global_logout
address review comments
address review comments
add changelog entry
Merge branch 'master' into my/implement_global_logout
Merge branch 'master' into my/implement_global_logout
Merge commit '7632433fb6d76e8b3bb6ac609407196365b5f676' as 'realm/realm-jni/object-store'
Squashed 'realm/realm-jni/object-store/' content from commit 91c87e4
Merge pull request #2915 from realm/mc/feature/os-subtree
Merge commit '2395585a0ab92192cf23a3723167b91f4109d37d' into feature/object-store
Squashed 'realm/realm-jni/object-store/' changes from 91c87e4..57ee591
Squashed 'realm/realm-jni/object-store/' changes from 57ee591..64e733e
Merge commit '9409cd68a3a7604ffe9ad688139328c36eb617a1' into feature/object-store
Adding object store and use C++14 to compile it (#2916)
gcc is overly paranoid (#2961)
Merge pull request #2997 from realm/mc/feature/os-cmake
Disable armeabi build for now (#2998)
Squashed 'realm/realm-library/src/main/cpp/object-store/' content from commit c16e841
Merge commit '270c80f6e16194ead7b17bf889f4401b45eeb56f' as 'realm/realm-library/src/main/cpp/object-store'
Merge pull request #3001 from realm/mc/feature/os-mv-subtree
Use SharedRealm from object store
release is ready before debug.
Remove SharedGroup
Move function to util.h
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Remove Group
Add cmake to docker (#3044)
Convert RealmFileException
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Use write_copy from object store
Exception for incompatible lock file changes
Revert args change
Remove useless macro
Add wait for change
Convert invlid transaction ex
Catch exceptions if needed
Add shared realm compact
Test fix
JNI size should return a value
No need to define exception kind twice for testing
Fix annotation processor tests
Auto is shorter
Calling handover APIs on SharedRealm
Add missing file
Build & warning fix
Use move and build error
Fix preprocessor test case
Merge remote-tracking branch 'origin/master' into feature/object-store
Finalizer for BaseRealm
Fix findbugs
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Clean up Table
Make shared realm native pointer package protected
Make nativeCloseSharedRealm private
Use package protected getter for shared group pointer
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Test cases for shared Realm
Remove Realm.hasChanged
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Update gradle to 2.14.1
Update core to 1.4.2
Use submodule instead of subtree
remove subtree
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Adopt changes from OS
Enable OS notification
Stupid mistake
Fix test with RealmTests
Remove the dependency of Realm.Handler from tests (#3317)
Attach to jvm when destruct java binding context
Merge remote-tracking branch 'origin/master' into mc/feature/os-notification
Fix java doc
HandlerController should not be public
Thank you, findbugs
AndroidNotifier should not be public
PR fix
More important fix
Expose bug
Only call listener after all RealmResults are updated.
Updated changelog
Try to streamline listener logic.
whitespace
Fixed race condition between Realm change notifications and other events.
Introduce LOCAL_COMMIT.
Whitespace
More tests
PR feedback
Add warning if mixing local writes and async queries
Merge branch 'releases' into cm/post-at-front-of-queue
Remove duplicated tests.
Fix unit tests
Cleanup
Whitespace
Merge branch 'releases' into cm/post-at-front-of-queue
Prevent triggering unnecessary REALM_CHANGED events. Spelling
Added logging
Indentation
Merge branch 'releases' into cm/post-at-front-of-queue
Support annotationProcessor configuration.
Update Realm.groovy
ignore hasAnnotationProcessorConfiguration in Kotlin project
update logic for Kotlin project
address review comments
Merge branch 'master' into my/support_annotationProcessor_configuration
fix typo in CHANGELOG
Merge commit '7632433fb6d76e8b3bb6ac609407196365b5f676' as 'realm/realm-jni/object-store'
Squashed 'realm/realm-jni/object-store/' content from commit 91c87e4
Merge pull request #2915 from realm/mc/feature/os-subtree
Merge commit '2395585a0ab92192cf23a3723167b91f4109d37d' into feature/object-store
Merge pull request #2931 from realm/mc/feature/os-sync-upstream
Merge commit '9409cd68a3a7604ffe9ad688139328c36eb617a1' into feature/object-store
Adding object store and use C++14 to compile it (#2916)
gcc is overly paranoid (#2961)
Move JNI build to cmake
Build object store through cmake
Merge pull request #2997 from realm/mc/feature/os-cmake
Disable armeabi build for now (#2998)
Remove the os dir to add subtree later
Squashed 'realm/realm-library/src/main/cpp/object-store/' content from commit c16e841
Merge commit '270c80f6e16194ead7b17bf889f4401b45eeb56f' as 'realm/realm-library/src/main/cpp/object-store'
Use SharedRealm from object store
Remove SharedGroup
Move function to util.h
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Remove Group
Add cmake to docker (#3044)
Convert RealmFileException
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Use write_copy from object store
Revert args change
Remove useless macro
Convert invlid transaction ex
Catch exceptions if needed
Add shared realm compact
JNI size should return a value
No need to define exception kind twice for testing
Fix annotation processor tests
Calling handover APIs on SharedRealm
Build & warning fix
Use move and build error
Merge remote-tracking branch 'origin/master' into feature/object-store
Finalizer for BaseRealm
Fix findbugs
Convert invalid key exception from OS
Clean up Table
Make shared realm native pointer package protected
Make nativeCloseSharedRealm private
Use package protected getter for shared group pointer
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Update core to 1.2.0
Test cases for shared Realm
Remove Realm.hasChanged
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Update gradle to 2.14.1
Update core to 1.4.2
Use submodule instead of subtree
remove subtree
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Adopt changes from OS
Move JNI build to cmake
Fix mips linking, simplify the condition checking
Remove realm-jni
ANDROID_NDK_HOME instead of NDK_HOME
ndk.dir for README
Merge remote-tracking branch 'origin/releases' into mc/cmake
Merge remote-tracking branch 'origin/mc/cmake' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Wrong changes
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Fix build issue
Update object store
Update submodule for jenkins
Force submodule update
Remove useless import
Format jni code
Remove useless line
More format of JNI code
PR fix
Use SharedRealm from OS
Fix code style
Use https for submoudle on jenkins
Submodule sync
Add changelog
Add tests for non-existing table
Exception message fix
PR fix
Merge remote-tracking branch 'origin/master' into mc/feature/os-shared-realm
Update README
Readme more
Support incremental builds in the RealmTransformer
Better check for finding model classes
Fix transformer for non-sync builds.
Make Mediator output stable.
Update changelog
Faster full builds. Fix bug with non model files ending with RealmProxy.
Disable creating default mediator file in base distribution. Fix wrong API usage in transformer
Cleanup
Release beta build
Get correct branch name
Add more debug output
Better way of getting branch
Template method pattern to ease further refactorings.
Enable incremental build. Refactor and renaming for readability.
Correctly add files under build package
Correctly parse project parameter to the Transformer
Use old JenkinsFile
Fix unit tests
 Cleanup
Delete script no longer used
Add more fine-grained timer measurements for debugging performance
PR feedback
Merge branch 'master' into cm/transformer-speed
Merge branch 'master' into cm/transformer-speed
Initial support for null (Strings only).
Treat NULL as a special case in order to ignore it as a special case anywhere else.
Adding checks for nullable at the JNI layer.
Allow null as string value in queries.
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Adding unit tests for RealmQuery and RealmResults with null string values.
Changing from nullable to not nullable
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Adding JSON support for null
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Using VariableElement instead of field names
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Extending RealmQuery.isNull() and RealmQuery.isNotNull() to work on nullable fields.
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Null support for byte arrays
Adding constants to enhance readability of code when adding columns
Primary keys cannot be nullable
Binary data can be nullable
toString() must be aware of nullable fields
Adding JSON unit tests
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Update expected output
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Adding Table.convertColumnToNullable()
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Renaming annotation to Required
Renaming annotation to Required
Preserve column index when migrating to nullable column
WiP
Merge branch 'kg-fix-migration-tests' of github.com:realm/realm-java into kg-feature-null-support
Adding migration tests for null support
Null handling for JSON String and byte[]
Minor fixes.
Initial support for null (Strings only).
Adding unit test: non-null strings for nullable fields.
Treat NULL as a special case in order to ignore it as a special case anywhere else.
Adding checks for nullable at the JNI layer.
Allow null as string value in queries.
Unit test: setting null string for not-nullable field.
Adding unit tests for RealmQuery and RealmResults with null string values.
Changing from nullable to not nullable
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Adding JSON support for null
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Using VariableElement instead of field names
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Extending RealmQuery.isNull() and RealmQuery.isNotNull() to work on nullable fields.
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Updates due to PR feedback
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Null support for byte arrays
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Adding constants to enhance readability of code when adding columns
Primary keys cannot be nullable
Binary data can be nullable
toString() must be aware of nullable fields
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Update expected output
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Adding Table.convertColumnToNullable()
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Merge branch 'master' of github.com:realm/realm-java into kg-feature-null-support
Renaming annotation to Required
Renaming annotation to Required
Preserve column index when migrating to nullable column
WiP
Merge branch 'kg-fix-migration-tests' of github.com:realm/realm-java into kg-feature-null-support
Adding migration tests for null support
Null handling for JSON String and byte[]
Minor fixes.
Adapt core changes in 0.92.0
Behaviour changes in LinkView.move
Merge remote-tracking branch 'origin/kg-feature-null-support' into mc-null-support
Update RealmJsonTest cases
Add equalToNull to TableQuery.
Generator fix for copy and update
More test for Boolean null query
Update RealmResultsTest for Boolean null
Update RealmTest for null Boolean
All boxed types processor -- in progress
Proxy processor for all boxed types.
Handle null value emitFillRealmObjectWithJsonValue
IllegalArgumentException for null with setter
Test for null related setter and getter.
Add default value test case
Handle java types null value in Json stream
Add null check for RealmObject field
Remove NULLABLE_JAVA_TYPES
Handle null value in copy and update
Let setter throw IAE if possbile.
Clean up processor code
Update Realm Json test cases for null
Nullable related test case for RealmResults
Nullable related queries
isNull query on link's fields
isNotNull query on all fields
Fix issues in merge
Handle null with setters of RealmList
RealmList should not be nullable
Add util functions to check Realm types
Check nullable in table add column
isNull/isNotNull query on link's binray field
Null relalted RealmJsonTest fix
@Required fields need a default value
Fix null related RealmResultTest
Adding isNotNull() for link queries
Changes to DateTime link queries due to Realm core changes
Updating unit tests
Adapt core changes in 0.92.0
Behaviour changes in LinkView.move
REAL_NOEXCEPT was removed from core
Merge remote-tracking branch 'origin/kg-feature-null-support' into mc-null-support
Null support for boxed Boolean.
Remove unnecessary check in proxy
Add equalToNull to TableQuery.
Generator fix for copy and update
More test for Boolean null query
Update RealmResultsTest for Boolean null
Update RealmTest for null Boolean
Proxy processor for all boxed types.
Handle null value emitFillRealmObjectWithJsonValue
IllegalArgumentException for null with setter
Test for null related setter and getter.
Add default value test case
Handle java types null value in Json stream
@Required validation testing
Add null check for RealmObject field
Remove NULLABLE_JAVA_TYPES
Handle null value in copy and update
Let setter throw IAE if possbile.
Clean up processor code
@Required should not be applicable to RealmObject
Nullable related test case for RealmResults
Nullable related queries
isNull query on link's fields
isNotNull query on all fields
Fix issues in merge
Handle null with setters of RealmList
RealmList should not be nullable
Add util functions to check Realm types
Check nullable in table add column
isNull/isNotNull query on link's binray field
Null relalted RealmJsonTest fix
@Required fields need a default value
Fix null related RealmResultTest
Fix IOSRealmTests, required fields.
Changes to DateTime link queries due to Realm core changes
Updating unit tests
Add migration test case for @Required
Remove two test cases
Merge branch 'mc-null-support' of github.com:realm/realm-java into mc-null-support
Merge branch 'mc-null-support' of github.com:realm/realm-java into mc-null-support
Enabling isNull() for binary data
Enabling isNull() for binary data
Fix test case with partial null sorting
min and max return null for empty columns
RealmQuery's min/max return boxed type
Merge branch 'mc-null-support' of github.com:realm/realm-java into mc-null-support
Merge remote-tracking branch 'origin/master' into mc-null-support
Fix core download link
Suppress file length for RealTest.java
Clean up unnecessary interface arg
Add helper function for check boxed type
Update doc for @Required
Adding missing types to convertColumnToNullable
Clean up null support test cases.
Adding convertColumnToNotNullable
Merge branch 'mc-null-support' of github.com:realm/realm-java into mc-null-support
Exception when calling isNull on RealmList field
Clean up JNI code.
Add doc and minor fix.
Update changelog for null support
Merge remote-tracking branch 'origin/master' into mc-null-support
Renaming JSON test file
PR feedback
Minor javadoc update
Caching classes and constructors: java.lang.{Long,Float,Double}
Explaining how convertColumnToNullable/convertColumnToNotNullable is implemented
Use delta for assertEquals double and float
Updating exception messages thrown in proxy classes' validateTable()
No unused variables
Throw IAE in type checking helper functions
Merge remote-tracking branch 'origin/master' into mc-null-support
Fix exception description and comments
Use java style array declaration
Add comments
Fix javadoc in RealmResults.java
Add missing sum and average for RealmQuery
Fix exception message
Fix java doc
More fix for javadoc
Update migration example for null support
Merge branch 'master' into mc-null-support
fix a bug that Collection from backlink holds wrong table pointer.
add changelog entry
Update CHANGELOG.md
more detail test case name
remove extra line
Merge branch 'releases' into my/fix_table_in_backlink_results
Merge remote-tracking branch 'origin/master' into mc/object-notification
Rename RowObject
Format code
Clean interface
Remove useless code
Share RealmObject ObserverPairList with OsObject
Merge remote-tracking branch 'origin/master' into mc/object-notification
Remove unrelated backlink tests
Detailed notifications for RealmObject
Fix javadoc
Add missing tests
Fix javadoc
javadoc fix
Convert LogicError to ISE
T extends RealmModel for RealmObjectChangeListener
Add isFieldChanged
Add all fields change test
Doc fix
LogicError has been converted to ISE
PR fix
More fix for javadoc
Fix comments & javadoc
Merge remote-tracking branch 'origin/master' into mc/object-notification
Unit test combining sort() and distinct()
Merge branch 'master' into kneth/bug/sort-distinct
Merge branch 'master' into kneth/bug/sort-distinct
Fix test
Upgrade to latest version of ObjectStore including Sync
Upgrade OS
more fixes
Adding sync related files to build
Merge branch 'master' into cm/update-objectstore
Update OS
Update OS
Merge branch 'master' into cm/update-objectstore
Include external_commit_helper files
Upgrade OS
Merge branch 'master' into cm/update-objectstore
Trying to fix Cmake file
Build with epoll
No need to set EPOLL twice
Merge branch 'master' into cm/update-objectstore
Only use REALM_ENABLE_SYNC
Work-in-progress
WIP
Merge branch 'master' into cm/use-objectstore-syncmanager
WIP
Remove java state classes. Error handling goes through SyncManager. Updated to latest Core version.
Merge branch 'master' into cm/use-objectstore-syncmanager
Add support for client thread listener
Stop all Java sessions before reset
Add tests for multiple logged in users.
Merge branch 'master' into cm/syncuser-currentuser-throws
Merge branch 'cm/syncuser-currentuser-throws' into cm/use-objectstore-syncmanager
Fix merge mistake
Reset through SyncManager
Use proper OS version
Fix unit test + throw correct exception type
Fix unit test
Remove unnecessary imports.
Merge branch 'cm/syncuser-currentuser-throws' into cm/use-objectstore-syncmanager
Merge branch 'master' into cm/use-objectstore-syncmanager
Merge branch 'master' into cm/use-objectstore-syncmanager
Fix merge mistake
Fixing native crash caused by concurrently closing the RelamConfig
Fix mips compilation
implement refresh access_token logic
update OS branch
Fixing refresh token logic
Merge remote-tracking branch 'origin/releases' into nh/objectstore-syncmanager
fixes SyncManager
update version of ROS test
Fixing tests, using latest OS
PR feedback
PR feedback
PR feedback
Using double check lock
Fixing double check lock
remove obsolete comment
fix some bugs in test and remove 'methodParams'
no need to add 'realm.checkIfValid();' to RealmQuery.isValid()
Merge branch 'releases' into my/issue4228
WIP
Merge branch 'master' of https://github.com/realm/realm-java into nh/user_account_lookup
adding UT
remove typo
PR feedback
PR feedback
update doc
Merge branch 'master' of https://github.com/realm/realm-java into nh/user_account_lookup
fixes #5008
add missing class
fixing tests
PR feedback
Merge branch 'master' of https://github.com/realm/realm-java into nh/fixes_5008_user_info
PR feedback
fix crash when authentication error happens (#4726)
add a null check to addChangeListener and removeChangeListener in Realm and DynamicRealm (fixes #2772)
reflect review comments
Implement CompactOnLaunch.
Throw an exception if it is read-only Realm.
Add readOnly_compactOnLaunch_throws
Fix a wrong signature.
Add Javadoc.
Updated CHANGELOG>md
Fix a typo
PR feedback.
PR feedback: Improve tests.
PR feedback.
PR feedback.
PR feedback: Remove 2 createConfiguration.
PR feedback
Improve Javadoc.
PR feedback: Add a test to check a bug.
PR feedback
PR: fix a test.
Implement getInstanceAsync
Fix javadoc
PR fix
Trigger collection listeners when commit
Fix test
Fix using RealmModel as a field
Add support for lists with non-null values in RealmQuery.oneOf
Fix unit tests
fixes #4822
fix tests
Merge branch 'releases' of https://github.com/realm/realm-java into nh/fixes_4822
PR feedback
PR feedback
Merge branch 'releases' of https://github.com/realm/realm-java into nh/fixes_4822
Fix test
Added Migrations V2 proposal
Added note about new annotations.
Ideas for new API added.
Fixes #4540
PR feedback
Add to realmObjects when addChangeListener called
Fix dodgy code
Move JNI build to cmake
Fix mips linking, simplify the condition checking
Remove realm-jni
Update android tools plugin to beta1
ANDROID_NDK_HOME instead of NDK_HOME
Merge remote-tracking branch 'origin/releases' into mc/cmake
Update Android build to 2.2.0beta2
Merge remote-tracking branch 'origin/releases' into mc/cmake
Remove Version for javah
PR fix
Android cmake needs CMAKE_ANDROID_ARCH_ABI
Useless code
Fix readme
update cleanExternalBuildFiles task definition to respect 'dontCleanJniFiles' property
fix indentation
Merge remote-tracking branch 'origin/releases' into mc/cmake
Fix Dockerfile
Added first implementation of RealmCursor.
RealmCursor implemented. Added Stub unit tests.
First batch of test. Add support for change notifications.
Merge branch 'master' into cm-cursor
Fixed unit test
Added all unit tests.
Updated RealmCursor JavaDoc
Moved populateTestRealm to TestHelper
Merge branch 'master' into cm-cursor
Merge branch 'master' into cm-cursor
Added closed and position checks.
Added JavaDoc. Fixed unit tests.
Cleanup. Better unit tests.
Update AllTypes.java
Added isNull for LINK. Fixed spelling mistakes.
Cleanup. Removed warnings.
getColumnIndexOrThrow now support _id column as well.
Updated Javadoc
Merge branch 'master' into cm-cursor
Add support for ContentObservers.
Cleanup. Unregister content observers when closing Cursor.
Merge branch 'master' into cm-cursor
Use debug log level for transformer
Change log
Add detailed notifcation for RealmObject
Merge remote-tracking branch 'origin/master' into mc/object-notification
Rename RowObject
Format code
Clean interface
Remove useless code
Share RealmObject ObserverPairList with OsObject
Remove unrelated backlink tests
Detailed notifications for RealmObject
Fix javadoc
Add missing tests
Return String[0] if the object was deleted.
Fix javadoc
javadoc fix
Convert LogicError to ISE
T extends RealmModel for RealmObjectChangeListener
Add isFieldChanged
Add all fields change test
Doc fix
LogicError has been converted to ISE
PR fix
More fix for javadoc
Fix comments & javadoc
Merge remote-tracking branch 'origin/master' into mc/object-notification
Work around the memmove bug on sumsung device
3rd try, use kg's test and builtin fun
Logging if memmove() isn't broken
use __realm_memove for testing
use memmove impl from kernel
Work around the memmove bug on sumsung device
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Remove useless log
Only apply the hack to arm32
Switching to DRY libc11's implementations
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
fixing compilation error
Add unit test showing setting own list does not work.
Do not clear own list if given as input.
Clear in the correct place
Add test for insertOrUpdate bulk and non-bulk
Wrong spelling
Update changelog
Fix mistakes. Move check out of proxy classes.
Dont always check for managed objects
Always check for managed state.
Merge branch 'master' into cm/bug/assign-own-list
Optimize `insert` loops
More loop optimizations
Implement fine grained notification API
Fix tests and ObserverPair equals bug
PR fix
Fix javadoc format
Enable listeners on RealmList
Fix javadoc
Use int instead long for ChangeSet
Rename vars
Merge remote-tracking branch 'origin/mc/fine-grained-notification' into mc/realm-list-listener
PR fix
Merge remote-tracking branch 'origin/master' into mc/realm-list-listener
PR fix
Initial RFC for Import/Export
Let Object Store handle table creations
Remove unrelated code
Use phantom ref for Property
PR fix
Use buider pattern for OsObjectSchemaInfo
Oops
Rename vars
Merge remote-tracking branch 'origin/master' into mc/os-schema-table-initialization
PR fix
std::move
Merge remote-tracking branch 'origin/master' into mc/os-schema-table-initialization
Merge remote-tracking branch 'origin/master' into mc/os-schema-table-initialization
Merge remote-tracking branch 'origin/master' into mc/os-schema-table-initialization
Merge remote-tracking branch 'origin/master' into mc/os-schema-table-initialization
Returns a schema info map in mediator
Merge commit '7632433fb6d76e8b3bb6ac609407196365b5f676' as 'realm/realm-jni/object-store'
Squashed 'realm/realm-jni/object-store/' content from commit 91c87e4
Merge pull request #2915 from realm/mc/feature/os-subtree
Merge commit '2395585a0ab92192cf23a3723167b91f4109d37d' into feature/object-store
Squashed 'realm/realm-jni/object-store/' changes from 91c87e4..57ee591
Squashed 'realm/realm-jni/object-store/' changes from 57ee591..64e733e
Merge commit '9409cd68a3a7604ffe9ad688139328c36eb617a1' into feature/object-store
Adding object store and use C++14 to compile it (#2916)
gcc is overly paranoid (#2961)
Move JNI build to cmake
Build object store through cmake
Merge pull request #2997 from realm/mc/feature/os-cmake
Disable armeabi build for now (#2998)
Remove the os dir to add subtree later
Squashed 'realm/realm-library/src/main/cpp/object-store/' content from commit c16e841
Merge commit '270c80f6e16194ead7b17bf889f4401b45eeb56f' as 'realm/realm-library/src/main/cpp/object-store'
Merge pull request #3001 from realm/mc/feature/os-mv-subtree
Merge remote-tracking branch 'origin/master' into feature/object-store
release is ready before debug.
Remove SharedGroup
Move function to util.h
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Remove Group
Add cmake to docker (#3044)
Property and ObjectSchema initially integrated
Convert RealmFileException
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Use write_copy from object store
Exception for incompatible lock file changes
Revert args change
Remove useless macro
Catch exceptions if needed
Add shared realm compact
Test fix
No need to define exception kind twice for testing
Use JUnit4
Fix annotation processor tests
Auto is shorter
Work in progress
Calling handover APIs on SharedRealm
Add missing file
Build & warning fix
Use move and build error
Merge remote-tracking branch 'origin/master' into feature/object-store
Finalizer for BaseRealm
Fix findbugs
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Clean up Table
Make nativeCloseSharedRealm private
Use package protected getter for shared group pointer
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Update core to 1.2.0
Test cases for shared Realm
Remove Realm.hasChanged
WiP
Merge branch 'mc/feature/os-shared-realm' of github.com:realm/realm-java into kg/feature/os-schema
WiP
WiP
Adding createRealmObjectSchema() to proxy classes.
Merge remote-tracking branch 'origin/master' into feature/object-store
Merge remote-tracking branch 'origin/master' into feature/object-store
Update gradle to 2.14.1
Update core to 1.4.2
Use submodule instead of subtree
remove subtree
Merge remote-tracking branch 'origin/feature/object-store' into mc/feature/os-shared-realm
Adopt changes from OS
Remove subtree
Adopt OS changes
Can build under AS 2.2 beta
WiP
WiP
Making unit tests pass
Merge remote-tracking branch 'origin/master' into kg/feature/os-schema
fix build
WiP
All RealmObjectSchemaTests pass
@Require means not nullable!
WiP
Include all needed classes
Include all needed classes
Remember to advance iterator
Handling object store exceptions
Updating tests so we don't have any native crashes
Work on migration
WiP
Fake update of changelog
Fix spelling
Merge branch 'master' into feature/partial-sync
WIP
Merge branch 'master' into cm/partial-sync/subscribe-query
Add support for new states in OrderedChangeSet
Cleanup
Merge branch 'master' into cm/partial-sync/subscribe-query
Use object store branch in progress
Use updated Object Store commit
Upgrade to Sync 2.2.1
Fixes to integration tests
Upgrade sync
PR feedback
Disable hiding information. In some cases we depend on it.
Respect old listener behaviour.
Fix unit tests
Fix error reporting.
Move INCOMPLETE states to boolean instead
Add missing method
Cleanup states and their descriptions. Added more unit tests to verify notification behaviour.
Fix unit tests leaking Realms
Cleanup
Fix unit tests
Add support for named subscriptions
Fix tests and build
Merge branch 'next-major' into cm/partial-sync/subscribe-query
Missed file + test name cleanup
PR feedback
Merge branch 'cm/partial-sync/subscribe-query' into cm/partial-sync/named-subscriptions
Remove class not used
Remove delay
More PR feedback
Merge branch 'next-major' into cm/partial-sync/subscribe-query
Merge branch 'cm/partial-sync/subscribe-query' into cm/partial-sync/named-subscriptions
Fix unit tests for named subscriptions.
Revert timeout changes
Use correct version of ObjectStore
Support unsubscribe
Merge branch 'next-major' into cm/partial-sync/named-subscriptions
PR feedback
Fix compiler issue
Fix template specialization and merge error
Use proper version of ObjectStore
Merge branch 'cm/partial-sync/support-unsubscribe' into next-major
Fix bad merge
Use custom dynamic query
PR feedback
Support wait_for_changes
Add multi process examples.
TypeBasedNotificationsTest fix
Example fix
Test case fix
Send REALM_CHANGE manually for async transaction
Merge branch 'master' into mc-multi-process
Ranaming and java doc
Wait until daemon thread exit
Make mysterious test case simpler
Merge remote-tracking branch 'origin/master' into mc-multi-process
Add RealmAsyncTask.isDone to fix flaky test
Support clearing data using Partial Sync
disable delete methods when using partial sync
Merge branch 'next-major' into cm/bug/partial-sync/delete-all
Fix unit test
Update core to v0.89.7
Update core to v0.89.8
writeEncryptedCopyTo might throw RENSE
Fix issue #1507
fix unstable test
Revert "fix unstable test"
fix typo
Added RFC for querying backlinks
Backlink fields must now be enumerated. Added example using special RealmQuery methods for defining the backlinks.
Fixed mistakes in the examples.
Fixed invalid method calls.
Fixed named backlink syntax
Changed name to LinkingObjects. Added more motivation. Annotation now only accept one parameter.
Made examples more accurate
Spelling and layout
Added multiple backlink levels as a possible extension
Add test
Acquire a global ref of jstring for field changes
typo
Trigger collection listeners when commit
Fix test
Fix OsRealmSchema leak
move close to finally block
Merge remote-tracking branch 'origin/master' into mc/fix-leak
Fix merge issue
Remove out-dated comment
Stale local ref crash with Object listener
reset m_deleted
PR fix
Stupid me
update secure-store example
Fixes #2670 ProGuard configuration
Trying to reproduce #3130
Added dynamic design doc.
Line wrapping
Updated doc to match current state
Updated with new methods.
Add RealmQuery.equalToAny() (#841)
PR feedback: equalToAny -> in
PR feedback: apply 'beginGroup()' and 'endGroup()' on 'in' operator.
PR feedback: throws an IllegalArgumentException if values is an empty array.
Add a test, in_date()
Remove unnecessary tests.
Fix type fields in in_byte()
Add 3 tests, in_byte(), in_short() and in_int()
Update CHANGELOG.md for RealmQuery.in()
PR feedback: ++i -> i++
PR feedback: fix javadocs.
PR feedback: remove unnecessary parenthesises.
PR feedback: revert the variable arguments version.
PR feedback: fix javadocs and improve error messages.
PR feedback: Extract the constant string literal from the hard-coded error message.
PR feedback: Adopt boxed type API.
PR feedback: add null tests.
Fix row_isValid
Fix openPreNullWithRequired
PR feedback: update javadocs.
PR feedback: use NoPrimaryKeyNullTypes for testing instead of AllTypes.
PR feedback: Revert AllTypes.
Revert automatic formatting.
Revert auto-formatting again.
PR feedback: remove unnecessay empty lines.
PR feedback: generalize tests.
PR feedback: update javadocs.
Support empty input to in and two new predicates: alwaysTrue and alwaysFalse
Fix spelling mistakes in docs
Kotlin docs should match java docs
set the path of the directory of named pipes to fix #3140
update CHANGELOG
add a test for issue3140
update test
Merge branch 'releases' into my/issue3140
follow the chenges in object-store
skip an external storage test on the device where SELinux is not enforced
rename test
rename variable
update object-store
make SharedRealm#temporaryDirectory volatile
address findbugs error
mark constructor of RealmAsyncTask package protected
Only throw RealmException if absolutely needed.
Fix tests + changelog
Fix wrong changelog style
Proper casing of JSON in error messages.
Deprecate RealmConfiguration.setModules() in place of RealmConfiguration.modules().
Realm.createObject(Class,Object) have been made public
Fix unit tests
Fix unit test for real.
Merge remote-tracking branch 'origin/master' into cm/api-review/create-object-primarykey
Merge remote-tracking branch 'origin/master' into cm/api-review/create-object-primarykey
Null related tests for createObject with PK
Merge branch 'master' into cm/api-review/create-object-primarykey
Better Javadoc
Deprecated 3 field sort in Realm and RealmQuery
Merge branch 'master' into cm/api-review/sorted-methods
Merge branch 'master' into cm/api-review/sorted-methods
Merge branch 'master' into cm/api-review/sorted-methods
Merge branch 'master' into cm/api-review/sorted-methods
WIP
Merge branch 'master' into cm/bug/iterators
WIP
Merge branch 'master' into cm/bug/iterators
Cleanup current unit tests.
Javadoc fixes
Merge branch 'master' into cm/bug/iterators
Added support for RealmResults.listIterator() + unit tests.
Merge branch 'master' into cm/bug/iterators
Fix refreshing of tableviews.
Better error reporting from RunInLooperThread
HandlerController is always available.
Thread local notifactions are now triggered using the Looper instead of immediately
PR feedback
PR feedback
Refactor notify listeners
Merge branch 'cm/handler-notifications' into cm/bug/iterators
Backup
Backup
Fixed wrong object returned for deleted objects.
More unit test fixes.
Merge branch 'master' into cm/bug/iterators
Merge remote-tracking branch 'origin/master' into cm/handler-notifications
It's alive .... almost.
Merge branch 'master' into cm/bug/iterators
Merge branch 'master' into cm/bug/iterators
Unit test fixes
removed unecessary boolean
More unit test fixes.
Merge branch 'nh/refresh_send_realmchanged' into cm/bug/iterators
It's alive....finally.
Cleanup
Fix style issues.
More unit tests.
Added RealmCollection and OrderedRealmCollection interface. Refactored RealmList/RealmResults unit tests.
Merge branch 'master' into cm/collection-interfaces
Merge branch 'master' into cm/collection-interfaces
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Merge branch 'master' into cm/collection-interfaces
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Fix unit tests
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Fix unit tests.
Merge branch 'master' into cm/collection-interfaces
Cleanup
Merge branch 'master' into cm/collection-interfaces
Unit test fixes.
Merge branch 'master' into cm/collection-interfaces
Javadoc fixes
Fix unit test
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Fixing unit tests.
Merge branch 'master' into cm/bug/iterators
Combine unit tests in one class.
Begun unifying unit tests
More unit tests + all unsupported methods now throw UnsupportedOperation instead of RealmException
Remove replaced tests.
Cleanup
Fixed Findbugs errors
Fix check style
Merge branch 'master' into cm/bug/iterators
Merge branch 'master' into cm/bug/iterators
Pr comments
Remove description from UnsupportedOperation
Expand comment on depends_on_deleted_linklist
PR feedback
Add more ConcurrentModification unit tests.
Simplify test
More ConcurrentModification checks
PR feedback
Merge branch 'master' into cm/bug/iterators
Restricted visibility of constants
Merge branch 'master' into cm/bug/iterators
Cleanup changelog
Deprecated all Realm.allObjects*()/distinct*() and DynamicRealm.allObjects*()/distinct*() methods.
Fix JavaDoc + Changelog
Merge branch 'master' into cm/api-review/unify-query-methods
Made deprecated message better
Fix unit tests
#1594 RealmChangeListener should provide the changes object/realm/collection as well
Merge remote-tracking branch 'origin/master' into nh/RealmChangeWithArgument
Fixing examples & annotation processor tests
update CHANGELOG
PR feedback & fixing Javadoc errors
Add changelog
Made HandlerController package private.
Merge branch 'master' into cm/api-review/handlercontroller
Remove merge mistake
Merge branch 'master' into cm/api-review/handlercontroller
Exposing a `SyncConfiguration` that allows a user to open the backup Realm after the client reset (#4759).
PR feedback, added a method to obtain a SyncConfiguration in order to open the backup Realm later
Fix test
debugging CI
CI test
CI test
remove debugging message
Formatting
WIP
Merge branch 'releases' of https://github.com/realm/realm-java into nh/client_reset_fix_#4997
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
add option to set the `force_sync_history` option
remove un-used test & fixed flakiness from `downloadProgressListener_indefinitely` test
fix test
fix test
add @Nullable annotation
remove unnecessary variable in tests
PR feedback, add option to pass in the encryption key + test
 missing files
PR feedback
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
Use NPM to install integration test server
Merge branch 'master' into cm/use-npm
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
Use Node image instead of Ubuntu
Update to alpha27
Run ROS2 in integration tests WIP
Upgrade ROS to alpha.28 for testing
Use default admin user + disable SSL tests
Disable broken unit test
Attempt at new logic for detecting ROS is running
Fix test request
Merge branch 'master' into cm/use-npm
Fix local check + ignore more unit tests.
Disable event limit
Disable server logout. Remove event listeners
Use /health/ check to determine if ROS is running
Fix retrieveUserInfo endpoint.
Better lifecycle control for ROS processes
Ignore a lot of broken tests
fixed findbug issue. `obj` will be either not null or the statement will jump to the finally block in case of parsing error (`new JSONObject` will not return null value)
Using a custom ConnectionPool to control idleConnection (causing test suite incapable of stopping the ROS instance)
Fix for default admin user not being present.
No need to manually log users out.
Add sleep to overcome delay from ROS
Cleanup
returing a read-only RealmConfiguration
Merge remote-tracking branch 'origin/cm/use-npm' into nh/client_reset_fix_#4997
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
Remove the `force_sync_history` option to align with offline backup Realm
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
Merge remote-tracking branch 'origin/master' into nh/client_reset_fix_#4997
update changelog
Add to realmObjects when addChangeListener called
PR fix
Fix the broken kotlin example
Added RFC for querying backlinks
Backlink fields must now be enumerated. Added example using special RealmQuery methods for defining the backlinks.
Fixed mistakes in the examples.
Fixed invalid method calls.
Fixed named backlink syntax
Changed name to LinkingObjects. Added more motivation. Annotation now only accept one parameter.
Made examples more accurate
Added multiple backlink levels as a possible extension
Fixing unit tests for backlink queries. Introducing a native implementation of isNotEmpty().
A bit cleaning up
Getting closer
fixing query tests
Adding on how to reach to the results in the asserts.
Merge branch 'master' of github.com:realm/realm-java into kneth/query-backlink
Only queries are new
* All non-backlink tests passing; All non-test FIXMEs gone * Static analysis tests passing * Fix copy bug in ColumnIndices * Address PR comments * Code complete * Refactor ColumnInfo and ColumnIndices for better control
Merge branch 'master' into feature/backlinks
Merge branch 'master' into feature/backlinks
Merge branch 'master' into feature/backlinks
Removed Legacy FieldDescriptor. All tests pass
Merge branch 'master' into feature/backlinks
Linking Objects unit tests. (#4576)
Tests in; most fail.
Merge branch 'feature/backlinks' into feature/backlinks-tests
Standardize test timeouts
Several issues: - Duplicate code in FieldDescriptor has got to be fixed - Native isEmpty and isNotEmpty need to be taught about backlinks - There are other bugs, some may be in tests
Merge branch 'feature/backlinks' into feature/backlinks-tests
checkpoint
Merge branch 'feature/backlinks' into feature/backlinks-tests
Merge branch 'feature/backlinks' into feature/backlinks-tests
Merge branch 'feature/backlinks' into feature/backlinks-tests
Respond to comments
Revert createDynamicBacklinkResults signature
Remove single leading space on line 1206 ins RealmQueryTests.java
Unit test for chained distinct calls
Merge branch 'master' into stk/distinct_chainedcall
new distinct async
Merge branch 'master' into stk/distinct_chainedcall
WIP RealmResultsTest
Merge branch 'master' into stk/distinct_chainedcall
WIP RealmResultsTest
Merge branch 'master' into stk/distinct_chainedcall
distinct() modified according to core implementation
Print path for RealmFileException
Update to use MutableRealmIntegers
Merge branch 'master' into w/ex
Respond to comments
Merge branch 'master' of https://github.com/realm/realm-java
Merge branch 'master' of https://github.com/realm/realm-java
Merge remote-tracking branch 'origin/master' into nh/objectstore_userstore
PR feedback
Merge remote-tracking branch 'origin/master' into nh/objectstore_userstore
Update changelog
Switched to C++ exception
PR feedback
update PR
PR feedback
Add cause to RealmMigrationNeededException
PR fix
Try to create getFilesDir if it doesn't exist on startup. Otherwise throw IllegalStateException
Rename to filesDir
Better exception message
Preparing RealmMigration integration
Work around the memmove bug on sumsung device
stupid pointer mistake
3rd try, use kg's test and builtin fun
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Work around the memmove bug on sumsung device
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
PR fix
Merge remote-tracking branch 'origin/releases' into mc/bug/hack-memmove
Remove useless log
Switching to DRY libc11's implementations
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
fixing compilation error
Ignore exceptions
Merge branch 'releases' of github.com:realm/realm-java into kneth/clear-and-log-exception
Work around the memmove bug on sumsung device
stupid pointer mistake
3rd try, use kg's test and builtin fun
Logging if memmove() isn't broken
use __realm_memove for testing
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Work around the memmove bug on sumsung device
Use bcopy() from FreeBSD
PR fix
Merge remote-tracking branch 'origin/releases' into mc/bug/hack-memmove
Remove useless log
Only apply the hack to arm32
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
fixing compilation error
Let Object Store handle table creations
Remove unrelated code
Use phantom ref for Property
Merge remote-tracking branch 'origin/master' into mc/os-schema-table-initialization
changelog
PR fix
Use buider pattern for OsObjectSchemaInfo
Oops
Rename vars
Merge remote-tracking branch 'origin/master' into mc/os-schema-table-initialization
PR fix
std::move
Merge remote-tracking branch 'origin/master' into mc/os-schema-table-initialization
Merge remote-tracking branch 'origin/master' into mc/os-schema-table-initialization
Returns a schema info map in mediator
Run code formatter over all code
DynamicRealmObject.setList declaration fix
Work around the memmove bug on sumsung device
stupid pointer mistake
3rd try, use kg's test and builtin fun
Logging if memmove() isn't broken
use memmove impl from kernel
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
Work around the memmove bug on sumsung device
Use bcopy() from FreeBSD
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
PR fix
Remove useless log
Only apply the hack to arm32
Switching to DRY libc11's implementations
Merge branch 'mc/bug/hack-memmove' of github.com:realm/realm-java into mc/bug/hack-memmove
fixing compilation error
Required PrimaryKey tests are parameterized
Change log fix
Addressing review points
alternate deprecated api
WIP
Merge branch 'master' into cm/bug/iterators
WIP
Merge branch 'master' into cm/bug/iterators
Javadoc fixes
Merge branch 'master' into cm/bug/iterators
Added support for RealmResults.listIterator() + unit tests.
Added notification tests for none-synched RealmResults.
Merge branch 'master' into cm/bug/iterators
Fix refreshing of tableviews.
Better error reporting from RunInLooperThread
HandlerController is always available.
Thread local notifactions are now triggered using the Looper instead of immediately
Merge branch 'master' into cm/handler-notifications
PR feedback
PR feedback
Refactor notify listeners
Merge branch 'cm/handler-notifications' into cm/bug/iterators
Backup
Backup
Fixed wrong object returned for deleted objects.
More unit test fixes.
Merge branch 'master' into cm/bug/iterators
refresh send a REALM_CHANGED for looper thread
Merge remote-tracking branch 'origin/master' into cm/handler-notifications
It's alive .... almost.
Merge branch 'master' into cm/bug/iterators
Merge branch 'master' into cm/bug/iterators
Unit test fixes
removed unecessary boolean
More unit test fixes.
Merge branch 'nh/refresh_send_realmchanged' into cm/bug/iterators
It's alive....finally.
Cleanup
Paramaterized the iterator tests.
More unit tests.
Added RealmCollection and OrderedRealmCollection interface. Refactored RealmList/RealmResults unit tests.
Merge branch 'master' into cm/collection-interfaces
PR Feedback
Merge branch 'master' into cm/collection-interfaces
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Merge branch 'releases' into cm/collection-interfaces
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Merge branch 'master' into cm/collection-interfaces
Fix unit tests
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Fix unit tests.
Merge branch 'master' into cm/collection-interfaces
Cleanup
Merge branch 'master' into cm/collection-interfaces
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Unit test fixes.
Merge branch 'master' into cm/collection-interfaces
Cleanup javadoc + clarify contains behaviour
Cleanup unit tests
Fix unit test
Merge branch 'cm/collection-interfaces' into cm/bug/iterators
Merge branch 'master' into cm/bug/iterators
Fixing unit tests.
Merge branch 'master' into cm/bug/iterators
Combine unit tests in one class.
Begun unifying unit tests
Roar unit tests
Remove replaced tests.
Cleanup
Fixed Findbugs errors
Merge branch 'master' into cm/bug/iterators
Language and comment fixes.
Merge branch 'master' into cm/bug/iterators
Pr comments
Remove description from UnsupportedOperation
Expand comment on depends_on_deleted_linklist
Make comment more precise
Add more ConcurrentModification unit tests.
Simplify test
More ConcurrentModification checks
PR feedback
Restricted visibility of constants
Merge branch 'master' into cm/bug/iterators
update javadoc comments of JSON APIs in Realm class to mention available API level.
Refactors zookeeper dependencies and Kafka span receiver test
Update GitHub Issue Templates
Add static query linking
Fixes selected end time no effect
Add experimental takeback button to dependencies view
Fixes missing file for dependency view
back to plain thrift
Fixes QUERY_PORT and adds dev configuration to set it
Settles on endTs and lookback query parameters
fix ui bug
Fixes long service names
fixes collapse feature
Don't crash when local span is missing a timestamp
Adds lookback query support to redis
Moves zipkin-redis to its own repository
Fixes IE which can't use String.endsWith
Corrects search results to display total spans as "NN Spans"
Tolerate 128bit ids in json and http api by throwing out high bits
Tolerates 128bit trace ids in ZipkinRule
Supports querying traces with mixed-length trace IDs
Added ability to run zipkin-server as an executable jar, verified in local and PCF
allow escape key to close modal dialogs
Accepts Zipkin v2 Span format in all current transports
Forwards api base for the UI
Upgrade to Finatra 1.1.1
Add docroot flag to bin/web
Use Bintray Gradle plugin 1.3.1, fixing #559
Create, use custom configuration for collecting artifacts to upload
Fixes bad self-tracing configuration resulting in unknown serviceName
Squashes remaining missing parent bugs in the trace detail screen
fixes #2179, Shows dependency modal
Drops untested H2, PostgreSQL drivers; switches MySQL to MariaDB
Excludes scala dependencies from zipkin-cassandra-core
anormdb: fix span merging
Turn zipkin-web into a dumb proxy for -query. Prep for #1044
Fixes UI to not show 0% when all services are selected
Fixes trace view alignment
RabbitMQ collector
RabbitMQ collector
refactoring and docker deux
rename and compile thing
try newer testcontainers
Undoes lazy things
moar logging
adds rabbitmq travis service
Attempt to correct fallback logic
polish
feaix: explicit imports
feat: closing adminclient
fix: reduce size of bytecode by removing private access
fix: handle adminclient as volatile variable
refactor: simplify exceptions
Add snappy compression to redis
fix dev of web
Fixes CorrectForClockSkew which dropped local spans
Changes test getDependenciesAllInstrumented to run the query as of 'today', because Cassandra Spark job only saves computed dependencies as-of 'now' floored to a day.
Fixes selected end time no effect
Add experimental takeback button to dependencies view
Fixes text overflow for annotations
Routes ZK logging to slf4j
Reduce default query limit from 100 to 10
Renders client-originated traces in the dependencies diagram
Remove constraint that root span's trace id = span id
RabbitMQ collector
RabbitMQ collector
refactoring and docker deux
rename and compile thing
Undoes lazy things
moar logging
adds rabbitmq travis service
Attempt to correct fallback logic
polish
apply basic size optimizations to js output
Updates to Datastax Cassandra Driver 3.0
Fixed 'redirectedHeaderUsesOriginalHostAndPort' test to ensure that a relative URI is returned for a redirect to 'zipkin/' subpath.
Using 'contextRoot' as a code style conforming reference to the '__webpack_public_path__' global variable.
Using relative URIs for AJAX calls (which works thanks to the 'head>base' html). Appending '/' to the 'contextRoot' if not present.
Added readme regarding running behind a reverse proxy. Fixed running in a 'devServer' mode. Assuming the 'zipkin-server' runs at 'localhost:9411', execute:
Moves the zipkin UI under the path /zipkin
Fixes span name selector
Bundles scala config of collector and query services
Decouples HikariCP so that MySQL work can complete
Adds missing patch for #1273
Fixes query by binaryAnnotations in cassandra
Fix #1074: Don't distribute non-shadow jar for *-service
Don't publish non-shadow jar for zipkin-web
elasticsearch: add aws request signing capability
elasticseach: rename autoconfiguration classes
ci: update elasticsearch
Added a config file for Finatra which matches the other common configs (zookeeper on localhost) and doesn't override the query server Fixed the collector script to reference the scribe JAR rather than the server JAR
Added a config for Finatra of 'web-localhost' aligned with the other config for zipkin-server / zipkin-scribe (missed from last checkin - doh!)
Added quickstart doc for centos6
Fixed the "bin/sbt: line 16: [: too many arguments" as it was bugging me
Merge branch 'master' of https://github.com/twitter/zipkin into twitter
Removes duration query support from Cassandra 2.2
Removes httpvar config for collector sample rate
refresh extra custom date fields on page load
Fixes text overflow for annotations
Drops untested H2, PostgreSQL drivers; switches MySQL to MariaDB
Adds a query which might help users troubleshoot their data in MySQL
Drops untested H2, PostgreSQL drivers; switches MySQL to MariaDB
Migrate build system to Gradle
Removes v1 codebase
Fixes TODO about redirect
Adds V1 conversion library
To distinguish from the zipkin module.
Removes freemarker.sourceforge.net repository reference
To distinguish from the zipkin module.
Revert "Prevent's "Brian's bomb" by manually clearing metrics on each test class"
Rewrites Prometheus filter to neither double-register or double-count
Prevent's "Brian's bomb" by manually clearing metrics on each test class
Index page now shows message if searching is disabled.  This commit fixes #1893.
Adds ability to disable search for in-memory ES and cassandra v2 storage
Adds CASSANDRA_MAX_CONNECTIONS to control pooled connections per host
Decouples zipkin-elasticsearch-http from Elasticsearch 2.x libraries
Begins migration off Elasticsearch 2.x library (and Guava)
Adds Elasticsearch 5.x support via storage type: elasticsearch-http
removes listing dupe tags from UI (only if both key and value are the same)
make linters happy and added test
make eslint happy
Defined http.route key and ensures server span name is preferred
Migrate build system to Gradle
Hard limits ES queries to not lookback earlier than ES support was added
Fixes AWS signature which missed colon encoding
Cautiously writes error when bug found encoding json
Adds a date separator for elasticsearch index names
Add a date separator for elasticsearch index names
Code cleanup
Helvetica.
Cleanup dead css class
Rename service_name, span_name to serviceName, spanName
WIP new query ui
Merge branch 'master' of github.com:twitter/zipkin into complex_query
WIP
Merge branch 'master' of github.com:twitter/zipkin into complex_query
Merge branch 'master' of github.com:twitter/zipkin into complex_query
Add query side common structs
Rename QueryRequest -> QueryExtractor, more client side logic
Fix annotation/kv searching
Merge branch 'master' of github.com:twitter/zipkin into complex_query
Remove QueryAnnotation
Remove annotationsCounts, binaryAnnotationsCounts
Add ability to remove additional filters
Fix annotations,kv display in static linking
Merge branch 'master' of github.com:twitter/zipkin into complex_query
Revert messed up merge change
Remove unnecessary change
Cleanup
Fix bs
Pull out constant
Add QueryExtractorSpec
Add license header
Fix imports
Add ConfigSpec tests
Create SpanStore + cassie example
move query by trace ids stat to proper place
clarify factory vs impl
clarify reason for span store writer
more clarifications
fix up build file
add scala version
use resolvers for cassie location
split SpanStore validator
CassieSpanStore: Better handling of defaults
clarifying comment
s/location/dest/
TMP COMMIT  comment out redis
WIP Replace cassie with datastax cql driver #570  - remove all cassie classes  - remove Storage/Index/Aggregate classes. Zipkin now only supports the SpanStorage trait.  - remove the hadoop aggregation classes. (this needs to be rewritten from Cassie to using CqlInputFormat).  - introduce a new java "Repository" class that provides the persistence layer using the DataStax CQL driver.  - the Repository class sits in its own zipkin-cassandra-core subproject, a pure java dependency free artifact.  - the schema, found in cassandra-schema-cql3.txt, is automatically created during startup.  - minimal but incompatible changes to the schema as keyspace and table names are now all lowercase.  - comments have been added to cassandra-schema-cql3.txt as to how the datamodel can and should be improved.
SQUASH ME  - improves the error logs so that we trap full cql query string with arguments
Permits json null token on nullable fields
Fixes package of ImMemoryCollectorMetrics
InetAddress.getLocalHost requires the local hostname to be resolveable. It is safer to simply resolve "localhost".
New Cassandra schema may create hot spots #623  - restore bucketing approach  - number of buckets are hardcoded to 10  - buckets exist as a separate column in the partition key to maintain transparency ref: https://github.com/openzipkin/zipkin/issues/623
Resurrects Cassandra's DependencyStore
Support for running Zipkin behind a reverse proxy  - subfolder 'zipkin' is enforced  - rewrite of the 'base' tag in the 'index.html' file is required
Fixed 'redirectedHeaderUsesOriginalHostAndPort' test to ensure that a relative URI is returned for a redirect to 'zipkin/' subpath.
Using 'contextRoot' as a code style conforming reference to the '__webpack_public_path__' global variable.
Using relative URIs for AJAX calls (which works thanks to the 'head>base' html). Appending '/' to the 'contextRoot' if not present.
Added readme regarding running behind a reverse proxy. Fixed running in a 'devServer' mode. Assuming the 'zipkin-server' runs at 'localhost:9411', execute:
Moves the zipkin UI under the path /zipkin
Deletes self-referencing spans in conversion javascript
Fixes bad high port read on Elasticsearch
Serializes I64 numbers greater than 53bits as strings in json
Starting out
Add license headers
Fix #843: verify that all dependencies use friendly licenses
Fix #858, #859: add license info for deps as needed; enforce verification
settings.gradle: Merge include statements into a single one
Add gradle idea plugin
Migrate build system to Gradle
Removes duration query support from Cassandra 2.2
Moves to latest HikariCP and DB deps in efforts to reduce mysql errors
Defers checksums and uploads to last step
Fix java.lang.UnsupportedOperationException: empty.min error
Render the index/default page completely client-side
Client-side rendering of traces
remove unneeded import
remove duplicate declaration in javascript test
Format endpoint: default port should be 0
fix error that showed wrong span count
fix bug where the annotation name wasn't translated to human readable form
Bugfixes Scala->JavaScript rewrite
fix build
Added better support for Redis.
trying to fix build breaks due to travis not being publicly facing anymore
trying to fix a flaky build
removing travis repo since it doesn't exist anymore
zipkin-ui: fixed slow meaningless request in home page
fixed tests
zipkin-ui: relative interval-based lookback
make eslint happy
fix convertToApiQuery tests
move zipkin ui into its own submodule
Tweak zipkin ui settings for gradle etc.
zipkin-web serves static assets from zipkin-ui
[gradle] zipkin-ui: reorganize task dependencies
[gradle] zipkin-ui: remove another unneeded dependsOn
Fixes #1334: SQS collector auto configuration
Allows STORAGE_TYPE to be empty (defaulting to mem)
Prevents overlapping calls to health check
Tear down ZK server after test is finished
added interceptor for basic auth
calculate credentials once in interceptor constructor
rename variable to lessen confusion
apply Square style formatting
apply Square style formatting
simplify naming of basic auth username and password
apply Square style formatting
add variables for Elasticsearch username and password
add link to Elastic docs in interceptor
unit test 403 handling of BasicAuthInterceptor
adjust Elasticsearch credential variable naming
tweaks README
Merge branch 'master' into ElasticsearchBasicAuth
Customizes fileOrIndex logic to include cache max-time
Added an indicator of duration to the Firefox extension visualizations
Index chars limit used in ES SpanConsumer is inconsistent in docs and code (#1979)
Gives advice on how to handle cassandra's lack of duration support
Clarify the Scribe setup documentation. No need to push for the Twitter Scribe version
Franklin's fixes.
Adds ES_MAX_REQUESTS to control maximum in-flight Elasticsearch requests
Adds kafka property to control fetch.message.max.bytes
Seems the EB repo has moved. Updated the url
Adds a query which might help users troubleshoot their data in MySQL
Changes server README to encourage pre-built artifacts
Uses RetroLambda to get rid of IDE setup and cruft
Flags yellow for annotations that match case insensitive error
Made preprocessing more complete; now finds names and also has ability to do (id, name)
Fix merging from a fork
fix syntax
don't delete local/remote branches if it's a fork
Remove filtering of empty spans
Fix Cassandra closing
Cleaner summing of scribe batch size
Remove GlobalSampler dependency from WriteQueue(Worker)
Added a config for Finatra of 'web-localhost' aligned with the other config for zipkin-server / zipkin-scribe (missed from last checkin - doh!)
Add a note that it is possible to not use Scribe at all
Split out scribe specific collector classes
Cleanup unnecessary changes
Add duration to annotations. Useful for timing blocks of code or other operations that don't warrant a full Span.
Split Tracing RackHandler into own gem
Move zipkin-tracer gem to subdir
Move endpoint files back
Remove sketchy static assets code
Remove zipkin.thrift
Make zipkin-tracer/scribe configurable
Make sample rate configurable
Remove annotations in ScroogeThriftCodec
Removed leading space
Move Trace to zipkin-common (part 1)
Add license headers
Add some doc
Added WhaleReport and spec
Made minor edits to WhaleReport
Made imports absolute and removed MostCommonCalls because DependencyTree does exactly the same thing
Fixed minor nit
Move ZooKeeper configs/client service to common
Added metric for when we receive debug flag
Bump twitter lib versions
Merge branch 'master' of github.com:twitter/zipkin into bump_versions
Make js/css configs visible in web-dev.scala
Add license headers
Fix broken links after move
Tear down ZK server after test is finished
Use script and mirror as proxy
Lets try using the internal repo for sbt
Here be hack. Let's just force that travisci repo in there
No MOAR ram
MEGABYTE
DOH
Slash
How about this then
No? How about this way then
Revert "No? How about this way then"
Merge branch 'master' of github.com:twitter/zipkin into travisci
Clean it up and add env variable
Merge branch 'master' of github.com:twitter/zipkin into travisci
Enable sbt travis ci
Remove jdk6. We run on jdk7 now and can drop support for jdk6
Jdk7
Added build status to readme.
Add tracing to Finatra
Fix syntax error
Fix build.properties output package
zipkin-web: sort order fix
Seems the EB repo has moved. Updated the url
Move TraceSummary to zipkin-common
backbone WIP
Move inlineJs line from Views directly into templates
Merge branch 'master' of github.com:twitter/zipkin into backbone
Return an Option[QueryRequest] when parsing request
fix syntax errors
Style fixes
Make QueryRequest parsing less hairy
Remove scrooge generated code dependecy from TraceSpec
Move TraceSpec to common
bump finatra version. some fixes
Bump version again, more fixes
more fixes
Bump to 0.2.1
Merge branch 'master' of github.com:twitter/zipkin into bump_finatra
template fixes
Fix imports
Modified scripts to fix minor bug
Added WhaleReport to jobs to be run by run_all_jobs.sh
Convert scripts to ruby scripts
Added comments
Removed host name
Removed PreprocessedSpanSourceTest and increased parallelism for run_all_jobs
Remove ostrich processor from default processors
Add metric for batch size added to write queue
Fix time skew adjustment for client sends with 127.0.0.1 as host IP
zipkin-web: query result sorting
Move Trace to common to mitigate changes
Cleanup residuals of moving Trace
Add license headers, some doc
Added a section to the readme describing how to instrument a library/protocol
Fixes as per review
Bump to finatra 0.2.3
Merge branch 'master' of github.com:twitter/zipkin into finatra_fixes
Fix query endpoint
Fix timestamp in query results
Adding a few hadoop jobs
Work in progress
Don't run tests in parallel
Added scalding queries and their test files
Added Util.scala
Modified Util.scala
Added DependencyTree and its test file
Merge branch 'master' of github.com:twitter/zipkin into hadoop_jobs
Added javadocs for specs and used preprocessing unit
Merge branch 'hadoop_jobs' of https://github.com/twitter/zipkin into hadoop_jobs
Merge branch 'master' of https://github.com/twitter/zipkin into hadoop_jobs
removed old files
Added full preprocessing and removed some incomplete and test files
Added missing comments and preliminary edit distance stuff
Removed incomplete stuff
Timeouts accepts a command line argument determining type of error
modified TimeoutSpec
Indentation fixes, added comments and other minor changes
Removed bad import statements
Make commit author linkable
These are a bit much
Cleanup test dependencies
Add StatsProcessor
Move the ServerResponsetimeSpec into the correct directory
Added getTracesExist support
Minor modifications to tracesExist
more minor fixes to CassandraStorage
Fixed nits
link to zipkinQuery.thrift under Zipkin query daemon section of README to fix 404 (previously linked to zipkin.thrift which no longer exists)
Replace the word submit on the lookup page with something more relevant
Merge from other branch
Merge branch 'master', remote-tracking branch 'origin' into zipkin_scrooge
Remove Constants from Annotations, Fix constant case/styling
Add documentation for Adapter
Add license headers, some cleanup
Add AnnotationType, BinaryAnnotation ThriftAdapter tests
Two simple tests for the ServerResponsetime Hadoop jobs
Removed typo, added comment on top of run.sh
Add syntax highlighting to readme code blocks
Fix quotes
More syntax
More
Added a config file for Finatra which matches the other common configs (zookeeper on localhost) and doesn't override the query server Fixed the collector script to reference the scribe JAR rather than the server JAR
Added a config for Finatra of 'web-localhost' aligned with the other config for zipkin-server / zipkin-scribe (missed from last checkin - doh!)
Fixed the "bin/sbt: line 16: [: too many arguments" as it was bugging me
Merge branch 'master' of https://github.com/twitter/zipkin into add_endpoints
Debugging error
Added framework for postprocessing
Removed testing jobs
Added comments and header
Renamed ssnm stuff and added slightly more commenting
Using org.apache.common.StringUtils and other minor changes
Split out zipkin-query gem
Fix thrift rb namespacing
Update zipkin-web to use zipkin-query gem
Remove actual gems
Changes for Finatra 0.2.4
Merge branch 'master' of github.com:twitter/zipkin into finatra_0.2.4
Pull out msg from thrift struct in ScribeCollectorService
s/ui/UI/
Added ExpensiveEndpoints and test files
Minor changes to ExpensiveEndpoints.scala
Add finatra start script
Clarify the Scribe setup documentation. No need to push for the Twitter Scribe version
Franklin's fixes.
Add package dist name for zipkin-scribe
Readding counts by category. Useful for finding out when to turn of b3 but also for figuring out the hdfs issue
Merge Trace spans and sort by timestamp by default
QueryService refactor
Ensure that we can receive Scribe messages with endline at the end
Forgot to upgrade the Gemfile
Add release doc, changelog
add commands to release doc, update changelog
Fix NPE when querying for time annotations
Use the new finagle-thrift version with flags.
fixed zipkin-web to actually return values from servers
Fix tests
Add back error case if trace is too big
Fix span details modal on static trace page, remove unnecessary code
Sort annotations when dumping to json
Remove unnecessary github api call
Removed client side stuff and minor alterations to specs
Reduce the garbage generated in the collector a bit
Added preliminary script stuff for hadoop jobs
Abstract processor, use FanoutProcessor in worker
Add FanoutProc, ProcFilter tests
Merge branch 'master' of github.com:twitter/zipkin into scribe_processor
Rip scribe logic out into Scribe Processor Filter
Move ResilientZKNode to zipkin-scribe
Update readme with zipkin-scribe instructions, module diagram
Update module diagram
Add base64 test back
Revert unnecessary changes
Add documentation
Add more docs
Grep by annotations value. Useful for finding particular trace ids
License header
Move BuildProperties, ZipkinConfig to common
Working basic server
Copy in application template
Some more stuff
Add resource resolving
Add Resources
Add rootUrl to config
Add export object
Remove test
Add vendor js files
Fix rootUrl
Remove erb templating for mustache
Add in template vars, helpers
Add js/css resources, broken templating
Remove more erb templating
Add datepicker
Fix rooturl
Add client side templates
Add service endpoint stubs, beginnign client code
Merge branch 'master' of github.com:twitter/zipkin into finatra
Optional ZK, working services api
Add query, spans, topAnnotations endpoints
Fix query endpoint, query ui
Add show.mustache template
Partial getTrace implm
Merge branch 'master' of github.com:twitter/zipkin into finatra
Fix show page
Merge branch 'master' of github.com:twitter/zipkin into finatra
Some json fixes
Cleanup
Add json adapter base
/api/get endpoint works!
Fix backend stuff
Front end fixes to match back end
Fix hostname/annotation names
Fix modal, annotation delta timestamps
serviceName needs to be a queryParam not in url since it may contain illegal chars
Fix modal timestamps
Fix null host
Fix clockskew button
Merge branch 'master' of github.com:twitter/zipkin into finatra
Make lib js/css symlinks instead of copying the files in
Revert "Make lib js/css symlinks instead of copying the files in"
Fix barwidth on index/query
Cleanup, get rid of `Globals` singleton
Merge branch 'master' of github.com:twitter/zipkin into finatra
Backport static page generation from zipkin-web
Use the same finagle version
Add doc
Add two simple startup scripts for the collector and query daemons
Doh. Correct directory names
Bump master to 0.3.0-SNAPSHOT
Added comments to existing scripts and added has-sampled.rb
Added tracesExist support to zipkin-query gem
Split common classes into zipkin-common
Add annotations to codecs too
Add license headers
Merge branch 'master' of github.com:twitter/zipkin into license_headers
Update docs for local development
Remove unnecessary controller method
Replace filter_submit with backbone-y code
Generate new query rb code from thrift, bump gem version
Upgrade to zipkin-query 0.0.3
Add ui support for annotation suggestions
Handle null case
Merge branch 'master' of github.com:twitter/zipkin into ui_annotation_suggestions
Generate new query rb code from thrift, bump gem version
Fix query service error counter
Minor refactoring of getValue approach and simplified ServiceNameSet
Made basic file postprocessing complete for now
Retries said Timeouts, removed unnecessary data structure
Removed commented stuff and println statement
Commenting and removed unused import statements
Using Mustaches for templating
Minor refactoring; removed zipkin URL
Made adding URL rows not use the full URL for the hyperlink and other minor bugs
Using LineResult instead of a list of strings and renamed mustache stuff to email
Fixed style things and shit
Fix the hadoop command, tools class no longer needed. Update readme
Uncomment spec assertion
Move scribe reference to zipkin-scribe, cleanup config
Allows elasticsearch-http to accept multiple hosts
Decouples maximum lookback from default lookback
Allows arbitrary overriding of Kafka consumer properties
gzip encodes messages between zipkin-query and zipkin-web
Use span name table instead of materialized view
Use span name table instead of materialized view
Fixes #1542: avoid blocking fetch in C* store
Clock skew correction is now applied.
Attempt to use semaphore as might be more reliable to read than queue size
Fix #858, #859: add license info for deps as needed; enforce verification
show {trace,span}-id in span details pane
Adds CASSANDRA_LOCAL_DC for latency-based load-balancing
Adds CASSANDRA_MAX_CONNECTIONS to control pooled connections per host
Cleans up InternalElasticsearchClient and fixes aggregation bug
add a button to view the raw json of a search query
Deprecates Endpoint.create(String,int,int) as it leads to null pointers
Allows no date separator in Elasticsearch
Adds support for Messaging Spans
Sums up parent-child dependency edges from multiple records
Switches cassandra3 to span2 model
Store DependencyLinks in the dependency table as-is, ie each field as a separate column.
Refactor `zipkin.storage.cassandra3` to `zipkin2.storage.cassandra3`
performance fixes:  - DeduplicatingExecutor around writes to span_by_service,  - 40k max queue length in cql driver,  - durable_writes disabled (no commitlog on disk),  - disable read repairs,  - lower gc_grace to 3 hours (match hint window),  - row cache span_by_service,  - increase server-side speculative retries…
change duration to be indexed as milliseconds
Allows customization of pooling options
Fixes tests
simplifies default schema name to zipkin2
Removes guava async composition as conflicts with spark
Adds bracing with ░ to ensure no accidental substring match
Fixes long service names
WIP http api documentation
Migrates metrics to Micrometer
Adds Http Request metrics for Undertow using Micrometer
polishing
Don't change constructor signature, add authPassword after ttl.
Moves the zipkin UI under the path /zipkin
Zipkin #1387 - Update SQL query for MySQL 5.7
Upgrade to MySQL 5.7 in CI
Adds ability to disable search for in-memory ES and cassandra v2 storage
Considers the translated table name in MySQL health checks
Clarifies Span.duration as positive; coerces Span.duration 0 -> null
Put assets in /static/ directory inside the zipkin-ui jar
Makes zipkin2 model objects final with serialization impl
Drops internal DependencyLinkSpan for Span2
Decouples v2 types from v1 types, in preparation of a new package
Adds Elasticsearch 6.x support using Span2 model
Adds zipkin.internal.Span2
Adds zipkin.internal.Span2Converter
Adds zipkin.internal.Span2Codec.JSON
Drops internal DependencyLinkSpan for Span2
Spikes ES support
Adds zipkin.internal.Span2
Adds v2 Call interface based on okhttp and retrofit
adds tests
Elasticsearch integration of v2 SpanStore Api
Removes double-conversion when collecting into Elasticsearch
WIP v2 http query api
Organizes v2 classes into corresponding internal packages
Adds zipkin.internal.Span2Converter
Accepts Zipkin v2 Span format in all current transports
Adds v2 SpanStore and a bridging adapter to v1
Adds v2 StorageComponent and allows the server to use it directly
Uses ES bulk api only when there's more than one span
Add two simple startup scripts for the collector and query daemons
Doh. Correct directory names
Makes java.util.logging route to log4j2 by default
really make "Expand All" the default view for a trace
do not use serviceName when linking to trace results
Defaults UI to expand all
cleanup first load events for service/span names
zipkin-web: sort order fix
Removes elasticsearch-aws which is moved to zipkin-aws
Add Zipkin version to /info endpoint
Fixes Cannot read property 'openChildren' of undefined
Switches javascript to use new Set()
Accepts json span names (previously broke ElasticSearch)
Adds constants for common binary annotation keys to http
Adds build note to readme.
change the default address/port to connect to the query server
adding a .gitignore entry for ensime just to make this whole thing happy
Supports backfilling timestamp for one-way spans
construct span name option list using jquery objects
Pass sort order as a query parameter.
DB error when trying to display 1000 items in the UI #698  - quick fix to enable limit on queries that use IN and ORDER BY (CASSANDRA-6722)
Fix #953: Run webpack before preparing resources for fat jar
Over-fetches cassandra trace indexes to improve UX
Fixes Cassandra indexes that lost traces in the same millisecond (#1153)
Fixes Cassandra indexes that lost traces in the same millisecond
fix cassandra search issue.
Zipkin #1387 - Update SQL query for MySQL 5.7
Upgrade to MySQL 5.7 in CI
Include missing field in groupBy
Split thrift files
Use original namespace
Fix import namespacing
Fix newlines at end of files
Disables scribe by default
Keep Cassandra storage working even if the annotations query is dropped.  ref: https://github.com/openzipkin/zipkin/pull/1902
Add basic auth security configuration
One level too deep on the yaml
Need a profile in order for tests to be able to run
move zipkin ui into its own submodule
Tweak zipkin ui settings for gradle etc.
zipkin-web serves static assets from zipkin-ui
[gradle] zipkin-ui: reorganize task dependencies
zipkin-web: Serve index.html by default
Skip filtering traces from result when STRICT_TRACE_ID is set to true (#1973)
Use span name table instead of materialized view
Makes elasticsearch index templates explicit
Added a section to the readme describing how to instrument a library/protocol
Fixes as per review
Merge branch 'master' of github.com:twitter/zipkin into collector_refactor
Merge branch 'master' of github.com:twitter/zipkin into collector_refactor
Make collector-core depend on server temporarily
Merge branch 'master' of github.com:twitter/zipkin into collector_refactor
Change collector-core dependency to cassandra
Add cassandra, collectorCore to sbt aggregate
Rename zipkin-scribe to zipkin-collector-scribe
Merge branch 'master' of github.com:twitter/zipkin into scribe_refactor
Create zipkin-cassandra and refactor
Move Util to zipkin-cassandra
Remove unnecessary dependency
Move collector service instantiation logic to zipkin-collector-service
UI: Add copy-webpack-plugin to copy files from static/
Skips indexing of non-string binary annotations in Elasticsearch
Adds start time element to the trace search screen, matching /dependency
cleanup first load events for service/span names
Added module to house a kafka 0.10 compatible collector. Made an initial pass at converting the 0.8 collector over to the new Kafka Consumer API. Still need to work on tests, which don't even compile at this point, and shake out issues withthe implementation.
Got tests working for Kafka 0.10 Collector. Added some logging and resource cleanup to the collector. There are still some outstanding todos and logging levels in the tests are probably a bit verbose.
Added auto-configure module for Kafka 0.10 collector. Still need to wire it into zipkin-server.
Wired Kafka 0.10 collector auto-configuration into zipkin-server.
Removed todo comment about adding max message size config point. Determined that this is not necessary. The new consumer will always fetch at least one message, even if it is larger than the configured maximum size per partition or per fetch. See in max.partition.fetch.bytes and fetch.max.bytes https://kafka.apache.org/documentation/#newconsumerconfigs. These settings can still be modified via overrides if there is a need to tune these soft limits on fetch sizes.
Added some documentation on configuration properties. Cleaned up some unused imports and variables.
Switched environment variables from KAFKA10_* to KAFKA_*.
Merged zipkin.collector.kafka10 configuration properties into zipkin.collector.kafka properties.
Updated test missed when merging zipkin.collector.kafka10 properties into zipkin.collector.kafka properties.
Replaced zipkin.collector.kafka.consumer-threads property with pre-existing zipkin.collector.kafka.streams property. Updated docs to better describe configuration opations for Kafka 0.10 collector. Added a todo for unit testing the collector with more than one consumer thread.
Pom version bumps to get caught up with changes from openzipkin/zipkin/master.
Added packaging of module jar to Kafka 0.10 autoconfigure module. Removed kafak10 collector dependency from zipkin-server.
Cleaned up log binding and configuration for zipkin-collector-kafka10 unit tests. Deleted unused log4j config file and made kafka consumer logging less verbose when running tests.
Verified that the kafka10 collector external module can be successfully loaded and run with zipkin-server. Moved documentation on running the kafka10 collector from the zipkin-server readme to the zipkin-autoconfigure-collector-kafka10 readme, and updated with explanation of how to use the external module.
kafka10 collector documentation fixes and tweaks.
Fixed spelling error.
Added test to verify kafka10 collector functions correctly with multiple consumer threads.
Attempting to fix failed test on CirleCI. The test checks to make that two different threads were used to consume span messages from Kafka. It previously made an assumption that the names of threads in the thread pool backing the executor service are unique. The theory is that is not always true and the check now looks for unique instances of Thread.
Cleaned up and expanded unit tests for configuration and connectivity failures with the kafka10 collector.
Second attempt to fix test for multi-threaded Kafka collector that fails intermittently. Added check to wait for all consumer threads to receive topic partitions assignments before producing messages. Without this check, whether the messages were consumed all by one thread or distributed across both depended on timing. If the first thread's Kafka consumer started and was assigned both partitions before the second thread's Kafka consumer was started and assigned a partition, the first thread could consume both messages.
Updated handling of thread interrupts in the kafak10 collector to be detected and handled in a more consistent way. Added some logging to capture the reason workers exit.
Changes based on code review feedback.
Version bumps to 1.25.1 to catch up with upstream/master.
Leniently reads span.annotations and span.binaryAnnotations in UI
Replaced for loop with while loop and function.
Fixed build error.
Fixed test error.
Added parenthesis for explicit operator precedence
Deleted errors.
Add gradle staff
Add test
Merge branch 'master' into add_gradle_project_and_test
Implement progress notifications for file uploads.
Merge remote-tracking branch 'loopj/master'
Cleanup and removed memory duplication
More cleanup
Implement progress notifications for file uploads.
Avoid reading whole files into memory
Eclipse added com.android.ide.eclipse.adt.LIBRARIES
Merge remote-tracking branch 'jensh/master'
Sending failure events correctly
Minor cleanup
Merge remote-tracking branch 'upstream/master'
catch ConnectTimeoutException and send back an error message in makeRequestWithRetries
catch RuntimeException in AsyncHttpClient.get when create HttpGet object
AsyncHttpClient: added setMaxRetries method; fixed a type;
handle error responses, that returned HTTP body (text or JSON)
fixing imports rearranged by mistake
fixing docs
remove import I added by mistake
Fix a call
Abstract ResponseHandlers, inline unneeded code
Changed AsyncHttpClient to allow for SSLSocketFactory to be passed in
Cleanup and removed memory duplication
More cleanup
Implement progress notifications for file uploads.
Avoid reading whole files into memory
Eclipse added com.android.ide.eclipse.adt.LIBRARIES
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'jensh/master'
Sending failure events correctly
Minor cleanup
Merge remote-tracking branch 'upstream/master'
Cleanup and removed memory duplication
More cleanup
Implement progress notifications for file uploads.
Avoid reading whole files into memory
Eclipse added com.android.ide.eclipse.adt.LIBRARIES
Sending failure events correctly
Minor cleanup
Merge remote-tracking branch 'upstream/master'
Cleanup and removed memory duplication
More cleanup
Implement progress notifications for file uploads.
Avoid reading whole files into memory
Eclipse added com.android.ide.eclipse.adt.LIBRARIES
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'jensh/master'
Sending failure events correctly
Merge remote-tracking branch 'upstream/master'
catch ConnectTimeoutException and send back an error message in makeRequestWithRetries
catch RuntimeException in AsyncHttpClient.get when create HttpGet object
Run on current thread if no looper is present.
Bad import :-P
Fix crash in RetryHandler
added POST method using HttpEntity parameters
remove unused imports
AsyncHttpClient: added setMaxRetries method; fixed a type;
Update AsyncHttpResponseHandler.java
Simple option to set the charset for the response string. Default is still "UTF-8".
Added JavaDoc.
Add CookieViewView
Changed AsyncHttpClient to allow for SSLSocketFactory to be passed in
Added HTTP PATCH support
Corrected some patch methods that called post internally
Updated readme to note that the httpclient JAR is required to support PATCH
added POST method using HttpEntity parameters
remove unused imports
Added removeHeader
Fix crash in RetryHandler
Update AsyncHttpResponseHandler.java
Simple option to set the charset for the response string. Default is still "UTF-8".
Added JavaDoc.
Add CookieViewView
Add the protected modifier to the binary response handler's sendResponseMessage method to match the change made to the parent class.
Convert tabs to spaces and fix some formatting in the JSON response handler class.
Implement progress notifications for file uploads.
Cleanup and removed memory duplication
Implement progress notifications for file uploads.
Avoid reading whole files into memory
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'jensh/master'
Sending failure events correctly
Minor cleanup
Merge remote-tracking branch 'upstream/master'
Fix crash in RetryHandler
added POST method using HttpEntity parameters
remove unused imports
Added removeHeader
AsyncHttpClient: added setMaxRetries method; fixed a type;
Update AsyncHttpResponseHandler.java
Added JavaDoc.
Add CookieViewView
Fix crash in RetryHandler
added POST method using HttpEntity parameters
remove unused imports
Added removeHeader
AsyncHttpClient: added setMaxRetries method; fixed a type;
Update AsyncHttpResponseHandler.java
Simple option to set the charset for the response string. Default is still "UTF-8".
Added JavaDoc.
Add CookieViewView
Adding FileAsyncHttpResponseHandler
Corrected some patch methods that called post internally
Updated readme to note that the httpclient JAR is required to support PATCH
setup
preparign to change to NoRedirectHttpClient.java
using NoRedirectHttpClient
backing to original sdk
Don't use weak reference for ResponderHandler
Added cancellable requests
Adding FileAsyncHttpResponseHandler
Fix crash in RetryHandler
added POST method using HttpEntity parameters
remove unused imports
Added removeHeader
AsyncHttpClient: added setMaxRetries method; fixed a type;
Update AsyncHttpResponseHandler.java
Simple option to set the charset for the response string. Default is still "UTF-8".
Added JavaDoc.
Add CookieViewView
BugFix : https://github.com/loopj/android-async-http/issues/486
Fix crash in RetryHandler
remove unused imports
Added removeHeader
AsyncHttpClient: added setMaxRetries method; fixed a type;
Update AsyncHttpResponseHandler.java
Simple option to set the charset for the response string. Default is still "UTF-8".
Added JavaDoc.
Add CookieViewView
More cleanup
Implement progress notifications for file uploads.
Avoid reading whole files into memory
Eclipse added com.android.ide.eclipse.adt.LIBRARIES
Merge remote-tracking branch 'jensh/master'
Sending failure events correctly
Minor cleanup
Merge remote-tracking branch 'upstream/master'
Check if entity's stream is really compressed.
add gradle build
Merge branch 'master' of github.com:loopj/android-async-http
add intellij files to gitignore
remove jar task and add change manifest version to 1.4.4
AsyncHttpClient: added setMaxRetries method; fixed a type;
remove unused imports
Added removeHeader
Fix crash in RetryHandler
Update AsyncHttpResponseHandler.java
Simple option to set the charset for the response string. Default is still "UTF-8".
Added JavaDoc.
Add CookieViewView
Cleanup and removed memory duplication
More cleanup
Implement progress notifications for file uploads.
Avoid reading whole files into memory
Eclipse added com.android.ide.eclipse.adt.LIBRARIES
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'jensh/master'
Sending failure events correctly
Merge remote-tracking branch 'upstream/master'
Adding FileAsyncHttpResponseHandler
added HEAD request capabilities
added POST method using HttpEntity parameters
Added removeHeader
AsyncHttpClient: added setMaxRetries method; fixed a type;
Update AsyncHttpResponseHandler.java
Simple option to set the charset for the response string. Default is still "UTF-8".
Added JavaDoc.
Add CookieViewView
Fix APP_ABI
Upgrade circle ci's ndk version to r17
Remove armeabi (Remove from NDK r17)
Update gradle properties
Upgrade circle ci's ndk version to r17b
Fix APP_ABI
Upgrade circle ci's ndk version to r17
Remove armeabi (Remove from NDK r17)
Update gradle properties
Upgrade circle ci's ndk version to r17b
Merge branch 'master' into fix_ndk
Add a new rounding method using View.setOutlineProvider
Do rounding at View level
Correct radius
Introduce a separate dropdown for rounding method
inline proguard rules
revert docs
Fixed typos
Fix broken link in documentation
Fixed typos
update 00-index for explicitness
OkHttp: Fix NetowkrOnMainThreadException while cancellation
Fix broken link in documentation
Fixed typos
Fix broken link in documentation
Split OkHttpNetworkFetcher's fetch method to make part of it reusable
Tweaked formatting based on PR feedback
add double tap to zoom
improve double tab to zoom code, fix potential crash problem
Split OkHttpNetworkFetcher's fetch method to make part of it reusable
Tweaked formatting based on PR feedback
Fixed typos
Fix broken link in documentation
Do not cache unknown format images to EncodedMemoryCache
Add test case for EncodedMemoryCache and fix CI build fail
Fixed typos
Fix broken link in documentation
Fix APP_ABI
Upgrade circle ci's ndk version to r17
Remove armeabi (Remove from NDK r17)
Update gradle properties
Upgrade circle ci's ndk version to r17b
Merge branch 'master' into fix_ndk
Enable use on 64-bit ARM and x86_64 devices.
Use jlong instead of long.
Updating java to use long instead of int for context, for PR #121
Merge remote-tracking branch 'origin/master' into 64bitclean
fix issue #2006: the wasImmediate should be obtained when dataSource get callback
Upgrade circle ci's ndk version to r17
Remove armeabi (Remove from NDK r17)
Update gradle properties
Upgrade circle ci's ndk version to r17b
Merge branch 'master' into fix_ndk
fix duplicate media variant entries
fix media variations not working if candidate not a jpeg image
Fix for #912 Not able to set hotspot on "overlayImage" drawable set in xml
- Incorporated pull request comment changes - Used For loop for iterating Drawable layers instead on Foreach
issue-1472:Add statement to check if mCacheStats isInitialized in getSize() and getCount(), if not, call maybeUpdateFileCacheSize().
Merge remote-tracking branch 'upstream/master' into issue-1472
Merge branches 'master' and 'issue-1472' into issue-1472
Add test case for EncodedMemoryCache and fix CI build fail
#1413: Remove incorrect cached data from caches.
switch to okhttp 3.6.0
modify target SDK to 25
[WIP] RetainingDataSourceSupplier
Fixed typos
Fix broken link in documentation
Fixed typos
Fix broken link in documentation
Update android-maven-gradle-plugin to version 2.0
Fixed typos
Fix broken link in documentation
Fixed #2122 - PooledByteBuffer.read() doesn't return int
changed ArrayList to ArrayDeque so that the runnables are LIFO-ed
changed tab indentation
Add image‘s origin info to DebugControllerOverlayDrawable
[WIP] RetainingDataSourceSupplier
Switch to libwebp 0.5.1
Fix GIF not shows static image without animated-gif dependency
Create WrapContentDraweeView
defaulting HttpUrlConnection timeout to 30 seconds
Implemented unit test to verify default HttpUrlConnection timeout to 30 seconds.
Replaced java assert with mock
ImagePipelineConfig is now configurable with a http connection timeout.
Added unit for http connection timeout value and declared mHttpNetworkTimeout as final
Fix broken link in documentation
Enable use on 64-bit ARM and x86_64 devices.
Use jlong instead of long.
Updating java to use long instead of int for context, for PR #121
Enable use on 64-bit ARM and x86_64 devices.
Use jlong instead of long.
Updating java to use long instead of int for context, for PR #121
Merge remote-tracking branch 'origin/master' into 64bitclean
Added SimpleDraweeView.setImageURI(@Nullable String) method
short if
fix #272
Gradle : switch from implementation to api. solves https://github.com/facebook/fresco/issues/2041 explanation : https://stackoverflow.com/questions/44413952/gradle-implementation-vs-api-configuration/44419574#44419574
switch to okhttp 3.6.0
modify target SDK to 25
Fixed typos
Fix broken link in documentation
fix issue #2007 use getPostprocessedBitmapCacheKey replace getBitmapCacheKey
#1518 declare custom attributes against SimpleDraweeView in attrs.xml to make auto-complete works
#1518 add parent for SimpleDraweeView in attrs.xml to make auto-complete works
Switch to OkHttp 3.8.0 for OKHTTP3 users
Fixed typos
Fix broken link in documentation
Enable use on 64-bit ARM and x86_64 devices.
Use jlong instead of long.
Updating java to use long instead of int for context, for PR #121
Enable use on 64-bit ARM and x86_64 devices.
Use jlong instead of long.
Updating java to use long instead of int for context, for PR #121
Fix issue: should not round null bitmap in RoundedBitmapDrawable
Add support for Stetho's dumpapp to the Fresco showcase app
Fix APP_ABI
Upgrade circle ci's ndk version to r17
Update gradle properties
Upgrade circle ci's ndk version to r17b
Fixed typos
Fix broken link in documentation
fix_1940: using postDelayed() for drawable scheduling in DraweeSpanStringBuilder.DrawableCallback (fixes playing of animated images); added animated image example into DraweeSpan showcase
[WIP] RetainingDataSourceSupplier
AbstractDraweeControllerBuilder#setDataSourceSupplier now returns BUILDER
Enable use on 64-bit ARM and x86_64 devices.
Use jlong instead of long.
Updating java to use long instead of int for context, for PR #121
Enable use on 64-bit ARM and x86_64 devices.
Use jlong instead of long.
Updating java to use long instead of int for context, for PR #121
Merge remote-tracking branch 'origin/master' into 64bitclean
Using "provided" rather than "compile" for annnotations libraries.
[WIP] RetainingDataSourceSupplier
Fix:closeableObject could be closed unsafely in MultiplexProducer.Multiplexer#onNextResult
update MultiplexProducerTest for fix MultiplexProducer [bf86b77a203cb1694dd0637c408ac9562c4acce1]
Fixed typos
Fix broken link in documentation
build jpegturbo as a shared library.
fresco-issue-1827-2: more robust alternative to svg solution implemented in branch fresco-issue-1827
fresco-issue-1827-2: cleanup
fresco-issue-1827-2: (ImageFormatCheckerUtils.java) fix containsPattern method
fresco-issue-1827-2: rm changes except for new ImageFormatCheckerUtils method
fresco-issue-1827-2: check header for '<svg' pattern when image header starts with '<?xml'; adhere to java formatting standards
fresco-issue-1827-2: rm unused imports
fresco-issue-1827-2: (PooledByteBufferInputStream.java, ImageFormatCheckerUtils.java, SvgDecoderExample.java) make requested changes
fresco-issue-1827-2: (ImageFormatChecker.java) undo change of order of operations. This change will be moved to a new PR
fresco-issue-1827-2: merge master + fix conflicts
FBF-1850: show restart message dialog when svg decoder switch is changed
Fix APP_ABI
Upgrade circle ci's ndk version to r17
Remove armeabi (Remove from NDK r17)
Update gradle properties
Merge branch 'master' into fix_ndk
Update versions
fix bug when using DownSample and RegionDecoder together
Fixed webp native memory leak
Fix LocalVideoThumbnailProducer#getLocalFilePath for videos from Android document provider.
[WIP] RetainingDataSourceSupplier
Fix APP_ABI
Upgrade circle ci's ndk version to r17
Remove armeabi (Remove from NDK r17)
Update gradle properties
Merge branch 'master' into fix_ndk
Fix broken link in documentation
changed ArrayList to ArrayDeque so that the runnables are LIFO-ed
changed tab indentation
added boundsFrom and boundsTo fields to InterpolatingScaleType. Change interpolated matrix calculation, to evaluate exactly between start and end matrix
DraweeTransform added
transition sample changed
pull request revision
rename DraweeTransform -> DraweeTransition
Use BufferType.SPANNABLE in setText of SimpleDraweeSpanStringBuilder
Check and handle if cache is external or internal
Update DiskStorage,java (issue 898)
Update FileCache,java (issue 898)
Update DefaultDiskStorage,java (issue 898)
Add getCount() method to get cached files count
Merge branch 'eldk-patch-fresco-issue-898'
fixed conflict for imagepipeline-base/src/main/java/com/facebook/cache/disk/DefaultDiskStorage.java and imagepipeline-base/src/main/java/com/facebook/cache/disk/DiskStorageCache.java
fixed mStorageSupplier.get().isExternal();
fixed mStorage.get().isExternal()
removed unnecessary try statements
override abstract method isExternal() in DiskStorage
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Add getCount() to FileCache interface
Merge remote-tracking branch 'upstream/master'
Change to handle external cache : check cache size limits as external/internal is used
Merge remote-tracking branch 'upstream/master'
put mIsExternal in constructor to compute this only once as suggested by plamenko
Merge remote-tracking branch 'upstream/master'
Add forgiven static to isExternal(File directory)
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
nits correction for imagepipeline-base/src/main/java/com/facebook/cache/disk/DefaultDiskStorage.java
removes trailing space in imagepipeline-base/src/main/java/com/facebook/cache/disk/DiskStorageCache.java
lasts nits removed
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Removed call to maybeUpdate ... as values are now initialized
Fix leaked reference in LocalExifThumbnailProducer.buildEncodedImage()
Fix APP_ABI
Upgrade circle ci's ndk version to r17
Remove armeabi (Remove from NDK r17)
Update gradle properties
Upgrade circle ci's ndk version to r17b
Merge branch 'master' into fix_ndk
Supplement heif header suffixes.
Fix APP_ABI
Upgrade circle ci's ndk version to r17
Remove armeabi (Remove from NDK r17)
Update gradle properties
Upgrade circle ci's ndk version to r17b
Merge branch 'master' into fix_ndk
OkHttp: Fix NetowkrOnMainThreadException while cancellation
Fixed typos
Fix broken link in documentation
Update EncodedImage documentation
Issue-1664: Prevent ConcurrentModificationException in Volley
Add rounding support for RTL languages
Handle exceptions during request creation
Fix for #1676, setRetainImageOnFailure does not work IncreasingQualityDataSourceSupplier when main image process failed immediately
Debug build from sources fails with error : use of undeclared identifier memset ndk : 16.1.4479499 android-studio : 3.01 solves : https://github.com/facebook/fresco/issues/2040
solves missing string.h when build with ndk r16
Add cache key for ImageCacheStatsTracker's onDiskCacheHit
Fix APP_ABI
Upgrade circle ci's ndk version to r17
Remove armeabi (Remove from NDK r17)
Update gradle properties
Upgrade circle ci's ndk version to r17b
Fix APP_ABI
Upgrade circle ci's ndk version to r17
Remove armeabi (Remove from NDK r17)
Update gradle properties
Upgrade circle ci's ndk version to r17b
Fix APP_ABI
Upgrade circle ci's ndk version to r17
Remove armeabi (Remove from NDK r17)
Upgrade circle ci's ndk version to r17b
Enable use on 64-bit ARM and x86_64 devices.
Use jlong instead of long.
Updating java to use long instead of int for context, for PR #121
Add a new OkHttp 3 imagepipeline backend. Deprecate the old OkHttp 2 one.
Add support configuring max bitmap size, roundup fraction by ResizeOptions
Remove obsolete method roundNumerator(float)
OkHttp: Fix NetowkrOnMainThreadException while cancellation
Add missing language for documentation
Remove deprecated flag: -fno-weak in mk files.
Make rounding for placeholder image optional .Issue #2154
Make rounding for placeholder image optional .Issue #2154
Make rounding for placeholder image optional .Issue #2154
Expose access to GIF's transparent's pixel
Implement recommendations from Pull Request review
#1492 forceRotation consider EXIF orientation tag
#1492 Add RotationOptions.disableRotation() method
#1492 Use RotationOptions.disableRotation() in deprecated setAutoRotationEnabled(false)
Fixed typos
Fix broken link in documentation
Issue#840
Add support configuring max bitmap size, roundup fraction by ResizeOptions
Remove obsolete method roundNumerator(float)
Using "provided" rather than "compile" for annnotations libraries.
OkHttp: Fix NetowkrOnMainThreadException while cancellation
Add support for windows ico image format
Tweaked formatting based on PR feedback
fresco-issue-1827-2: more robust alternative to svg solution implemented in branch fresco-issue-1827
fresco-issue-1827-2: cleanup
fresco-issue-1827-2: (ImageFormatCheckerUtils.java) fix containsPattern method
fresco-issue-1827-2: rm changes except for new ImageFormatCheckerUtils method
fresco-issue-1827-2: check header for '<svg' pattern when image header starts with '<?xml'; adhere to java formatting standards
fresco-issue-1827-2: rm unused imports
fresco-issue-1827-2, bugfix: (ImageFormatChecker.java)
fresco-issue-1827-2: (PooledByteBufferInputStream.java, ImageFormatCheckerUtils.java, SvgDecoderExample.java) make requested changes
fresco-issue-1827-2: (ImageFormatChecker.java) undo change of order of operations. This change will be moved to a new PR
Fixed typos
Fix broken link in documentation
Fix APP_ABI
Upgrade circle ci's ndk version to r17
Remove armeabi (Remove from NDK r17)
Update gradle properties
Upgrade circle ci's ndk version to r17b
Check and handle if cache is external or internal
Update DefaultDiskStorage,java (issue 898)
Update FileCache,java (issue 898)
Update DefaultDiskStorage,java (issue 898)
remove one forgotten log line
Maybe a fix for CacheStats getSize() returns -1
Add getCount() method to get cached files count
Merge branch 'eldk-patch-fresco-issue-898'
fixed conflict for imagepipeline-base/src/main/java/com/facebook/cache/disk/DefaultDiskStorage.java and imagepipeline-base/src/main/java/com/facebook/cache/disk/DiskStorageCache.java
fixed mStorageSupplier.get().isExternal();
fixed mStorage.get().isExternal()
removed unnecessary try statements
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Add getCount() to FileCache interface
Merge remote-tracking branch 'upstream/master'
Change to handle external cache : check cache size limits as external/internal is used
Merge remote-tracking branch 'upstream/master'
put mIsExternal in constructor to compute this only once as suggested by plamenko
Merge remote-tracking branch 'upstream/master'
Add forgiven static to isExternal(File directory)
sorry,
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
nits correction for imagepipeline-base/src/main/java/com/facebook/cache/disk/DefaultDiskStorage.java
removes trailing space in imagepipeline-base/src/main/java/com/facebook/cache/disk/DiskStorageCache.java
lasts nits removed
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Merge remote-tracking branch 'upstream/master'
Removed call to maybeUpdate ... as values are now initialized
Fixed typos
Fix broken link in documentation
[LocalResource] allow to build ImageRequest from local res id
Fix webp with alpha decoding in webp_bitmapfactory.cpp because the wrong colorspace usage
Throw RegistrationException when connection isn't present.
Fix ObjectMapper's treatment of static fields
check characterset
no message
update error messages
NPE check
switch to SQLCipher
Merge pull request #1 from ArikYa/check-charset
Add ability to toggle view inspection
check characterset
update error messages
NPE check
switch to SQLCipher
Merge pull request #1 from ArikYa/check-charset
Support for Dialogs without a DialogFragment
Detect all Android windows
Add ability to toggle view inspection
Added stetho for volley
Add details on OkHttp integration
Extended StethoTree with configurable options
Added stetho for volley
Upgrade latest gradle and sdk versions. Fix build error because of:   classpath 'com.github.jcandksolutions.gradle:android-unit-test:2.1.1'
Update Travis values.
Throw RegistrationException when connection isn't present.
basic maven support for EvenBus
fix can't display <init> tag in HOWTO.md #141
Fixes issue #76 - Subscribers are invoked for all events instead of registered events (https://github.com/greenrobot/EventBus/issues/76)
Stops NoClassDefFound exceptions on EventBus#register(Object)
Speeded up performance by only running getMethods once
Fixes issue #136
applied property equality fix
Added test for property equality
https://github.com/greenrobot/greenDAO/issues/79
ISSUE-287, when using loadAll, in the case where the table is empty, return a modifiable ArrayList
applied property equality fix
Added test for property equality
Adds leftJoin to QueryBuilder.
Add executeDelete to DeleteQuery Allows for deleted items to be removed form the identity scope
change queryForThreads to map and change key to Thread.currentThread().getId() avoid problem on some android framework Process.myTid() always return 0
change queryForThreads to map and change key to Thread.currentThread().getId() avoid problem on some android framework Process.myTid() always return 0
Applied generating loadDeep method with argument of the same type as entity's key
#486 issue fix.
import fail fixed.
import solved.
Merge branch '#486_issue' of https://github.com/RokolyA94/mybatis-3 into #486_issue
no message
StringUtils fixed.
initialization of cache instances with configuration variables
Fix an issue when using mybatis cursor on DB2
Support constructor-auto-mapping using super type #1240
Polishing #1240
fix issue #884 and add hamcrset dependency for test
Failing test for issue #72.
Fix for issue #72. Access to BaseExecutor is now synchronized.
Fix for incorrect test.
Upgrade to ognl 3.1.17 #1219
Added essential assert to emptycollections test to demonstrate the problem of #421
#376: Support the defaultFetchSize in config.xml
#376: Adjust the assertion of test case for the 3.2.x line
#359: Resolve thread-unsafe in MapperRegistry
Adding testcase for bug#807
 #369: Modify to use the Log#isDebugEnabled()
#356: Support flush statements via Mapper interface
fixes #723 Read properties first!
Add test cast for Issue #1274
Fix to refer the line separator from system property on ScriptRunnerTest #1230
resolve interface mapper generic return type
resolve interface mapper generic return type
refactor to comply with collection<?>
Adjust test code
Merge remote-tracking branch 'remotes/origin/correct-generic-return' into correct-generic-return
add a test record
restore
change test code variable
build test, why is cache null at sometimes?
restore
Improve handling of defaultStatementTimeout #503
Polishing handling of timeout and defaultStatementTimeout #503
* [android] Fix interctionTime
Change linked c++ library from libstdc++ to libc++
Initial JAXB converter factory.
remove '/' in PATH_SEGMENT_ENCODE_SET for etcd
Introduce @PartFile and TypedFile
Some additional java.io.File utilities in Files
Incorporate feedback from code review
Remove superfluous method; improve javadoc on build() method
Close OutputStream in finally block
More code review feedback, and set Git as VCS in IntelliJ
Added Files.sync(). Added NDK and JNI build support.
Moved Native into a top-level class (VM couldn't find method in the nested class). Added a test app.
[resolves #1192] Fixes the type passed to Jackson writer
Fixed copy-paste errors.
Issue 2292. Tried and failed to replicate issue with failing test case.
Allows Observable and Completable to be transformed before returning then from RxJavaCallAdapterFactory.
Refactored to TransformerProvider and fixed code style issues
More code style fixes
Additional rules for ProGuard
Keep classes with annotations
Merge branch 'master' into patch-1
Some additional java.io.File utilities in Files
Incorporate feedback from code review
Remove superfluous method; improve javadoc on build() method
Close OutputStream in finally block
More code review feedback, and set Git as VCS in IntelliJ
Some additional java.io.File utilities in Files
Incorporate feedback from code review
Remove superfluous method; improve javadoc on build() method
Close OutputStream in finally block
Some additional java.io.File utilities in Files
Incorporate feedback from code review
Remove superfluous method; improve javadoc on build() method
Close OutputStream in finally block
More code review feedback, and set Git as VCS in IntelliJ
Added Files.sync(). Added NDK and JNI build support.
Moved Native into a top-level class (VM couldn't find method in the nested class). Added a test app.
Add http response codes
Add Http Response Codes
Imports Http Response Codes
Add HttpResponseCodes
implemented basic rpc converting
fixed async calls & added tests
* for json-rpc methods do not juggle with '/', it's unnecessary
removed unnecessary converter
Removed whitespace character from an empty line
Removed some more whitespaces.
Modified approach for Void response. Now I use a custom response type named VoidResponse. It was not possible to work with generics and java.lang.Void. Added method documentation and fixed indention.
Reverted unnecessary formatting changes.
Add success method with headers to Response.
Address review feedback.
Implemented a LoganSquare JSON converter & added tests for it
List & Map support added for LoganSquare converter
Adds @Nullable and @NotNull (from org.jetbrains.annotations)
Add nullability annotations to public APIs
duplicate the license in the leaf pom.xml
Implemented support for Gzip'ed responses specifically for the ApacheClient implementation. Fixes #264
#562 Add support for multipart response
Fixes - Path encoding #1156
Fixed indentation.
Fixes - Path encoding #1156
Fixed indentation.
Added experimental support for OkHttp 2.0.0-RC1
Corrected style errors
Corrected formatting and the other improvments mentioned
support HTTP 201 semantics by allowing URI return type to be taken from the Location header, and URI parameters override Server.getUrl.
Some additional java.io.File utilities in Files
Incorporate feedback from code review
Remove superfluous method; improve javadoc on build() method
Close OutputStream in finally block
More code review feedback, and set Git as VCS in IntelliJ
fix Polymoph of Jackson
fix code-convention of checkstyle.
Support Iterable values by QueryMap
Moar useful info for exceptions!
Switch to daemon threads to avoid waiting for thread timeout.
Added a util method to simplify grabbing a RetrofitError response body
added inner RetrofitScheduler
removed unused imports
checkstyle fixes
migrated Scheduler into the Schedulers class for shared usage.
checkstyle
cleaned up comments as-per feedback.
Comment to end-of-line style
fix checkstyle
promoted RxSupport to retrofit.
as per @jhump's suggestions simplified executing a task. passed to the executor.
Comments cleanup
Moved away from Scheduler and Execute inside OnSubscribe.
comment clean up
Avoid adding multiple Content-Type headers.
Review changes. Wrapped if statements.
Introduce @PartFile and TypedFile
Remove superfluous method; improve javadoc on build() method
Close OutputStream in finally block
More code review feedback, and set Git as VCS in IntelliJ
Added Files.sync(). Added NDK and JNI build support.
Moved Native into a top-level class (VM couldn't find method in the nested class). Added a test app.
Support using Files directly as entities and form parts.
Some additional java.io.File utilities in Files
Close OutputStream in finally block
More code review feedback, and set Git as VCS in IntelliJ
Added Files.sync(). Added NDK and JNI build support.
Move Android-specific FS sync method to android module.
Added Files.sync(). Added NDK and JNI build support.
Some additional java.io.File utilities in Files
Incorporate feedback from code review
Remove superfluous method; improve javadoc on build() method
Close OutputStream in finally block
More code review feedback, and set Git as VCS in IntelliJ
added support for multivalue params in GET for example GET http://my-server/q?id=123&id=345
Added support in synchronous calling. The Callback object is from now optional and will be needed only when the method is for asynchronous use.
Improved comments
Updated the remark about background process when not using callbacks
Added support for multi value GET params
minor name change
RestAdapter and MethodInfo decoupling
#1367: allow access to raw original request call
Some additional java.io.File utilities in Files
Incorporate feedback from code review
Remove superfluous method; improve javadoc on build() method
Close OutputStream in finally block
More code review feedback, and set Git as VCS in IntelliJ
Added Files.sync(). Added NDK and JNI build support.
Fix crash when leaktrace size is 1
Document in sample that App.onCreate is called from multiple processes
Proposed fix for issue #643: java.util.MissingFormatArgumentException: Format specifier: 22ty
Removed replace in LeakCanary.leakInfo, done proper logging in DisplayLeakService
Fixed crash of DisplayLeakService when AnalysisReport is too big to fit Binder transaction. Now analysis report saved on the disk and loaded from it in DisplayLeakService. Fixes Issue #1067
Follow up on PR #1102
Remove old references to "__" prefixed resources initiated by #159
Revert CHANGELOG update
Use a foreground Service so that the background work can run on Android O+
Use the existing notification channel instead of creating a new one
Move blocking work to background thread
Whoops, cleanup unused import
Typo
Merge pull request #6 from nhachicha/patch-1
Update readme, goto SO
Merge pull request #14 from square/py/readme
Link to Slack / HipChat gist
Merge pull request #17 from square/py/slack
Ignoring 3 Android leaks
Merge pull request #24 from square/py/samsung_and_android_ignored
update changelog
Heap dumps on SD card
Customizable ExcludedRef
Merge pull request #27 from square/py/sdcard
Merge pull request #30 from square/py/custom_excluded_refs
Ignoring SpellCheckerSessionListenerImpl leak
Merge pull request #33 from square/py/issue4
Fix unit tests
Merge pull request #34 from square/py/fix_tests
Because Samsung
Merge pull request #35 from square/py/ignore_issue_32
explain name
Change DefaultAnalysisResultService to DisplayLeakService
Fix NPE on cleanup
Merge pull request #51 from square/py/null_check_file
Rename Ui to LeakCanaryUi
Add version name to leak info.
Update to HAHA 1.2
Merge pull request #59 from square/py/haha_no_properties
Merge pull request #50 from jimmithy/master
Merge pull request #38 from romainguy/rg/views
Don't save index file
Fix excludedrefs creation.
Merge pull request #67 from pepyakin/sp/fix-excluded-refs
Merge pull request #66 from square/py/no_index
down minSDK to 8, fix #57
Fix Strict mode violations
Merge pull request #68 from liaohuqiu/master
Fix build
More granularity for AndroidExcludedRefs
Lighter no-op dependency
Merge pull request #74 from square/py/no-op-light
Merge pull request #73 from square/py/excluded_enum
Pass all exceptions back
Merge pull request #78 from square/py/all_exception
adding leak info for ActivityChooserModelPolicy
Merge branch 'py/leak_info_ActivityChooserModelPolicy'
Update changelog for 1.3.1, way more details
Merge pull request #79 from square/py/changelog_1.3.1
Fix links to issues.
Merge pull request #80 from pepyakin/sp/fix-changelog
Updating docs
Merge pull request #81 from square/py/doc
fix build
INPUT_METHOD_MANAGER__SERVED_VIEW observed also on JELLY_BEAN
Detailed runtime info
Merge pull request #83 from square/py/moar_details
Ignore SpeechRecognizer leak
Merge pull request #89 from square/py/speech
more steps for AOSP issues
Merge pull request #90 from square/py/more_steps
more info in changelog
fix master
Display a Toast while heap dump is in progress
Merge pull request #96 from square/py/toast_while_dumping_heap
Ignore FrameDisplayEventReceiver message queue
Merge pull request #98 from square/py/message_queue
readme
Ignore SpeechRecognizer pre L
Merge pull request #36 from romainguy/rg/icons
update icon
Merge pull request #100 from square/py/update_icon
Ignore AccountManager leak
Merge pull request #103 from square/py/97
one more
Reporting failures
Merge pull request #104 from square/py/report_failure
Preparing next release
Merge pull request #105 from square/py/release_1.3.1
Updating changelog
Merge pull request #106 from square/py/statis
Moving Library to root
Merge pull request #107 from square/py/move_lib_to_root
Adding Travis
Ignore MediaScannerConnection leak
Merge pull request #111 from square/py/media_scanner
Add travis status badge to README.
Merge pull request #113 from square/py/user_manager_leak
Do not feed the troll
Merge pull request #114 from square/py/because_reasons
Better Android defaults
Merge pull request #115 from square/py/defaults_plus_one
Actually ignore ref
Add maven central repo to readme
Add SHA hash to leak info.
Fix links to KeyedWeakReference, AndroidExcludedRefs
Upgrade gradle/android tools
Merge pull request #123 from pepyakin/sp/sha-in-info
Merge pull request #124 from mortonfox/patch-1
Merge pull request #122 from square/py/maven_central
Merge pull request #125 from square/edenman/upgradle-2
Remove redundant android plugin defination.
Merge pull request #126 from pepyakin/sp/remove-buildscript-from-sample
Merge pull request #118 from square/py/typo
Merge pull request #121 from square/py/report_excluded
Add consumer ProGuard configuration
Merge pull request #134 from chalup/proguard-config
update changelog
Adding more customizing doc
Merge pull request #153 from square/py/customize
Fix NPE in HeapAnalyzerService
#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1"
typo
Merge pull request #145 from square/npe-fix
Updated README
Merge pull request #212 from square/py/update_readme_no-op
Readme: ProGuard conf
Merge pull request #213 from square/py/readme_proguard
#159 Renamed resources leading with "__" to resolve build errors in preview build tools "1.3.0 rc1" - Added resourcePrefix lint check to validate all resource names are correct.
Merge pull request #161 from ToxicBakery/master
Update changelog for #161
Show notification when trace analysis results in an excluded ref leak
Merge pull request #216 from jankovd/jankovd/sb_notify_ignored_leak
update changelog
Swiching to HAHA 2.0.2 / Perflib
Merge pull request #219 from square/py/perflib
Update CHANGELOG.md
Add fix suggestion for ClipboardUIManager leak. Fixes #133.
Fix lint warnings in res/layout/leak_canary_ref_row.xml
Added comment for setTheme() override.
Merge pull request #230 from agrieve/patch-1
Merge pull request #140 from pepyakin/sp/add-fix-clipboarduimanager
Don't crash when heap dump fails #226
Merge pull request #259 from square/py/crash_dump
Return early.
Merge pull request #237 from ErikHellman/master
ignore leakcanary issue #297; AOSP issue #188551
Always enable DisplayLeakActivity when leakcanary is enabled
Resolves #208
Add missing no-op static methods
down minSdkVersion to 8 for no-op project, fix #57
down minSDK to 8
Add the FOREGROUND_SERVICE for Android P
Update AndroidManifest.xml
Exclude AccessibilityNodeInfo on API 27
updated README.md with the Application from FAQ
Fixed crash of DisplayLeakService when AnalysisReport is too big to fit Binder transaction. Now analysis report saved on the disk and loaded from it in DisplayLeakService. Fixes Issue #1067
Merge remote-tracking branch 'trunk/master' into bug/transaction-too-large
Follow up on PR #1102
Fix square/leakcanary#934.
Fixed crash of DisplayLeakService when AnalysisReport is too big to fit Binder transaction. Now analysis report saved on the disk and loaded from it in DisplayLeakService. Fixes Issue #1067
Merge remote-tracking branch 'trunk/master' into bug/transaction-too-large
Follow up on PR #1102
If sharing leak info fails, try with a shorter string
Proposed fix for issue #643: java.util.MissingFormatArgumentException: Format specifier: 22ty
Removed replace in LeakCanary.leakInfo, done proper logging in DisplayLeakService
HUAWEI mLastSrvView leak happens on M
Use Gradle for build system
Fixes #733: Url with Spaces not working in picasso
Fixes #733: Url with Spaces not working in picasso
Fixes #733: Url with spaces not working in picasso
Added dynamic limit option to MarkableInputStream
Fixed error
Merge branch 'master' into fix-markableinputstream
Add ability to query only the local cache.
Handle URL Redirects.
Use Uri to handle resources loading.
Add support for loading images from assets
add new feature: face center crop
make FaceDetector global to the Picasso instance
Cache the result of RequestCreator.get.
Fixes sizing for EXIF-rotated images
Remove OkHttp3Downloader.
Add support annotations on public APIs, remote intelliJ annotations
Allow null path in invalidate() to match load()
Add missing nullchecks and fix a couple res annotations
Fix import
Fix message
Allow null uris to invalidate to match load()
Flip ifs
Update NetworkBitmapHunter.java
Fixing NPE in PicassoDrawable when debugging; issue #183
Code review change to fix indentation for #183
Adding Data URI scheme support
Setup unit test
fix `cannot find symbol` error in Test case
fix bugs to pass Unit test
fix bugs to pass Unit test
reformatted indent
fix code style
Material transition
Add a feature to globally disable fade
Use Gradle for build system
Hope and pray for travis
Add @Px annotations to resize
fixed issues #836
Use Gradle for build system
Add align gravity options to centerCrop() method
Adds complete callbacks an onComplete()
Uses WeakReference for callback instead of strong reference
Support EXIF orientation for network JPG/TIFF
Support EXIF orientation for network JPG/TIFF
Changed dependency to Sanselan
Fixes sizing for EXIF-rotated images
DispatchingQueue
PicasooFlingScrollListner; First UnitTests
Code styling
Making PicassoExecutorService pausable / resumable
Code styling
Removed newLine
Only run CleanupThread under Lollipop (#1894)
Only run CleanupThread under Lollipop (#1894)
DispatchingQueue
PicasooFlingScrollListner; First UnitTests
More unit testing
Samples with Scroll Listener
Sample with ViewPager
Making PicassoExecutorService pausable / resumable
Bugfix: If server returns null for a bitmap than performError will be called
Code styling
Removed newLine
gitignore
ignore gradle files
resizeOnlyIfBigger added for resize methods
added delayed request loader
accessing cache from outside
added custom generators. Generate a bitmap using custom scheme url
test passed
overTextureSize flag added in Request. calculation for max texture size added
Test case for texture size limitation
Merge remote-tracking branch 'origin/master' into texture-size
format fixed for check style
indent fixed
InSampleSize calculation added (find rounded down to the nearest power of 2 value)
overTextureSize requestCreator option added
extract repeated method as a common one.
remove TextureSizeCalculation method.
overTextureSize variable name is changed to ignoreTextureSizeLimit
divide width and height using sampleSize
options.inSampleSize, options.inSampleSize moved
Restrict Bitmap size to less than or equal to texture size
Do math right
Merge pull request #1 from JayH5/texture-size
update javadoc
Add required internet permission.
Add ability to fit image to a single dimension
Merge branch 'master' into fit-single-dimension
Ensure target dimensions set before resize
add new feature: face center crop
make FaceDetector global to the Picasso instance
Add ability to fit image to a single dimension
Merge branch 'master' into fit-single-dimension
Ensure target dimensions set before resize
Fixes sizing for EXIF-rotated images
Support EXIF orientation for network JPG/TIFF
Add RewindInputStream for inSampleSize decoding of HTTP.
Fixes sizing for EXIF-rotated images
Added dynamic limit option to MarkableInputStream
Fixed error
Merge branch 'master' into fix-markableinputstream
Add a feature to globally disable fade
Cache the result of RequestCreator.get.
PicasooFlingScrollListner; First UnitTests
More unit testing
Samples with Scroll Listener
Code styling
Sample with ViewPager
Making PicassoExecutorService pausable / resumable
Bugfix: If server returns null for a bitmap than performError will be called
Code styling
Removed newLine
