loading...: data4/diff4.valid.txt
loading...: data4/msg4.valid.txt
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ const NSInteger TRANSPARENT_NAVBAR_TAG = <UNK> ; - ( void ) setStyleOnAppearForViewController : ( UIViewController* ) viewController { + NSString *screenBackgroundColor = <UNK> [ @ <UNK> screenBackgroundColor <UNK> ] ; + if ( screenBackgroundColor ) + { + UIColor *color = screenBackgroundColor ! = ( id ) [ NSNull null ] ? [ RCTConvert UIColor : screenBackgroundColor ] : nil ; + <UNK> = color ; + } + NSString *navBarBackgroundColor = <UNK> [ @ <UNK> navBarBackgroundColor <UNK> ] ; if (
# result : Ability to set a screenBackgroundColor on iOS * To avoid white flash while component loads
# expect : Ability to set a screenBackgroundColor on iOS * To avoid white flash while component loads
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ const NSInteger TRANSPARENT_NAVBAR_TAG = <UNK> ; - ( void ) setStyleOnAppearForViewController : ( UIViewController* ) viewController { + NSString *screenBackgroundColor = <UNK> [ @ <UNK> screenBackgroundColor <UNK> ] ; + if ( screenBackgroundColor ) + { + UIColor *color = screenBackgroundColor ! = ( id ) [ NSNull null ] ? [ RCTConvert UIColor : screenBackgroundColor ] : nil ; + <UNK> = color ; + } + NSString *navBarBackgroundColor = <UNK> [ @ <UNK> navBarBackgroundColor <UNK> ] ; if (
# result : Ability to set a screenBackgroundColor on iOS * To avoid white flash while component loads
# expect : Merge branch <UNK> into ios-view-background
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ } `` ` + Also , add the following + + `` ` java + @ Override + public String getJSMainModuleName ( ) { + return `` index <UNK> ; + } + `` ` + + if you are using ` <UNK> ` as your entry point instead of ` <UNK> ` and ` <UNK> ` ( it is the default since React Native <UNK> ) . + Make sure that ` isDebug ` and ` createAdditionalReactPackages ` methods are
# result : android too <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ const NSInteger TRANSPARENT_NAVBAR_TAG = <UNK> ; @ property ( nonatomic , strong ) NSDictionary *originalNavBarImages ; @ property ( nonatomic , strong ) UIImageView *navBarHairlineImageView ; @ property ( nonatomic , weak ) id < UIGestureRecognizerDelegate > originalInteractivePopGestureDelegate ; + @ property ( nonatomic , strong ) RCTRootView *rootView ; @ end @ implementation RCCViewController @ @ <UNK> <UNK> @ @ const NSInteger TRANSPARENT_NAVBAR_TAG = <UNK> ; } - ( void ) commonInit : ( RCTRootView* ) reactView navigatorStyle : (
# result : Merge master into fix/rootview_bounds_iphone_x
# expect : Merge branch <UNK> into fix/rootview_bounds_iphone_x
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class NavigationApplication extends Application implements React public void onCreate ( ) { <UNK> ( ) ; instance = this ; - reactGateway = new ReactGateway ( this , isDebug ( ) , createAdditionalReactPackages ( ) ) ; + reactGateway = createReactGateway ( ) ; } + /** + * Subclasses of NavigationApplication may override this method to create the singleton instance + * of { @ link ReactGateway } . For example , subclasses may wish to provide a
# result : Prevent navigation from assertion crashing when restarting the app during the initialization phase
# expect : Allow subclasses of NavigationApplication to provide a custom <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; -import static <UNK> ; public class BottomTabsController extends ParentController implements <UNK> , NavigationOptionsListener { - private BottomTabs bottomTabs ; - private List < ViewController > tabs = new ArrayList < > ( ) ; + private
# result : Merge pull request <UNK> from <UNK>
# expect : Merge branch <UNK> of <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +package <UNK> ; + +import <UNK> ; + +import <UNK> ; + +import static <UNK> ; + +public class OverlayTest extends BaseTest { + + @ Test + public void testOverlayAlertAppear ( ) throws Exception { + elementByText ( `` PUSH OPTIONS SCREEN <UNK> ) <UNK> ( ) ; + elementByText ( `` SHOW ALERT <UNK> ) <UNK> ( ) ; + assertExists ( <UNK> ( `` test ! `` ) ) ; + elementByText ( `` OK
# result : remove useles files
# expect : <UNK> overlay skeleton <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +package <UNK> ; + +import <UNK> ; + +import <UNK> ; + +import static <UNK> ; + +public class OverlayTest extends BaseTest { + + @ Test + public void testOverlayAlertAppear ( ) throws Exception { + elementByText ( `` PUSH OPTIONS SCREEN <UNK> ) <UNK> ( ) ; + elementByText ( `` SHOW ALERT <UNK> ) <UNK> ( ) ; + assertExists ( <UNK> ( `` test ! `` ) ) ; + elementByText ( `` OK
# result : remove useles files
# expect : rm useless files
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ class FloatingActionButtonCoordinator { FloatingActionButton fab = new FloatingActionButton ( <UNK> ( ) ) ; <UNK> ( <UNK> ( ) ) ; <UNK> ( icon ) ; + <UNK> ( <UNK> ) ; return fab ; } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @
# result : Merge branch <UNK> of <UNK> into feat-add-modal-tabs
# expect : <UNK> enable fab icon scaling <UNK>
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ -package <UNK> ; - -import <UNK> ; -import <UNK> ; - -import static <UNK> ; - -public class DeepLinkHandler { - private static Uri deepLink ; - - static void saveDeepLinkData ( Uri deepLink ) { - <UNK> = deepLink ; - } - - static boolean hasDeepLinkData ( ) { - return deepLink ! = null ; - } - - static void setDeepLinkData ( Intent intent ) { - if ( deepLink ! = null )
# result : improved markThreadAsRead behavior
# expect : When starting the <UNK> pass through extras included in the launch intent
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - ( RNNUIBarButtonItem* ) buildButton : ( NSDictionary* ) dictionary { NSString* buttonId = dictionary [ @ <UNK> id <UNK> ] ; NSString* title = dictionary [ @ <UNK> title <UNK> ] ; + NSString* component = dictionary [ @ <UNK> component <UNK> ] ; if ( ! buttonId ) { @ throw [ NSException exceptionWithName : @ <UNK> NSInvalidArgumentException <UNK> reason : [ @ <UNK> button id is not specified `` stringByAppendingString : title ] userInfo : nil ] ;
# result : Update <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - ( RNNUIBarButtonItem* ) buildButton : ( NSDictionary* ) dictionary { NSString* buttonId = dictionary [ @ <UNK> id <UNK> ] ; NSString* title = dictionary [ @ <UNK> title <UNK> ] ; + NSString* component = dictionary [ @ <UNK> component <UNK> ] ; if ( ! buttonId ) { @ throw [ NSException exceptionWithName : @ <UNK> NSInvalidArgumentException <UNK> reason : [ @ <UNK> button id is not specified `` stringByAppendingString : title ] userInfo : nil ] ;
# result : Update <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import static <UNK> ; public class EventEmitter { - private static final String onAppLaunched = `` <UNK> <UNK> ; - private static final String componentDidAppear = `` <UNK> <UNK> ; - private static final String componentDidDisappear = `` <UNK> <UNK> ; - private static final String nativeEvent = `` <UNK> <UNK> ; - private static final String commandCompleted = `` <UNK> <UNK> ; - private static final String buttonPressedEvent = `` buttonPressed <UNK> ; + private static final
# result : update android bridge
# expect : Merge branch <UNK> into eventRegistryRework
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import static <UNK> ; public class EventEmitter { - private static final String onAppLaunched = `` <UNK> <UNK> ; - private static final String componentDidAppear = `` <UNK> <UNK> ; - private static final String componentDidDisappear = `` <UNK> <UNK> ; - private static final String nativeEvent = `` <UNK> <UNK> ; - private static final String commandCompleted = `` <UNK> <UNK> ; - private static final String buttonPressedEvent = `` buttonPressed <UNK> ; + private static final
# result : update android bridge
# expect : register only once
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ ` setRoot ( simpleApi : any ) : any ` - [ source ] ( https : <UNK> # <UNK> ) + [ source ] ( https : <UNK> # <UNK> ) -- - @ @ <UNK> <UNK> @ @ ` setDefaultOptions ( options : any ) : void ` - [ source ] ( https : <UNK> # <UNK> ) + [ source ] ( https : <UNK> # <UNK> ) -- - @ @ <UNK> <UNK> @ @ `
# result : Merge branch <UNK> of <UNK> into eventRegistryRework
# expect : fixed <UNK> tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ ` setRoot ( simpleApi : any ) : any ` - [ source ] ( https : <UNK> # <UNK> ) + [ source ] ( https : <UNK> # <UNK> ) -- - @ @ <UNK> <UNK> @ @ ` setDefaultOptions ( options : any ) : void ` - [ source ] ( https : <UNK> # <UNK> ) + [ source ] ( https : <UNK> # <UNK> ) -- - @ @ <UNK> <UNK> @ @ `
# result : Merge branch <UNK> of <UNK> into eventRegistryRework
# expect : Merge branch <UNK> into eventRegistryRework
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ export class Navigation { } /** + * Utility helper function like registerComponent , + * wraps the provided component with a react-redux Provider with the passed redux store + */ + public registerComponentWithRedux ( componentName : string , getComponentClassFunc : ComponentProvider , reduxStore : any ) : ComponentType < any > { + return <UNK> ( componentName , getComponentClassFunc , reduxStore ) ; + } + + /** * Reset the app to a new layout */ public setRoot (
# result : Update <UNK>
# expect : the people have spoken
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ describe ( <UNK> style ' , ( ) = > { await elementById ( <UNK> ) <UNK> ( ) ; await expect ( elementById ( <UNK> ) ) <UNK> ( ) ; await elementById ( <UNK> ) <UNK> ( ) ; - await expect ( elementById ( <UNK> ) ) <UNK> ( ) ; + await expect ( elementById ( <UNK> ) ) <UNK> ( ) ; } ) ; test ( <UNK> menu visibility - right ' , async (
# result : Fix <UNK> Check if the button the sidemenu is no longer visible
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ } - ( void ) applyOn : ( UIViewController * ) viewController { + UIViewController* topViewController = [ self parentTabController : viewController ] ; if ( <UNK> || <UNK> || <UNK> ) { - UITabBarItem* tabItem = <UNK> ; + UITabBarItem* tabItem = <UNK> ; <UNK> = [ self getSelectedIconImage ] ; <UNK> = [ self getIconImage ] ; @ @ <UNK> <UNK> @ @ [ self appendTitleAttributes : tabItem ] ; - [ viewController setTabBarItem : tabItem ] ; +
# result : Merge branch <UNK> into refactorOptions
# expect : fixes tabBarItem
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ } - ( void ) applyOn : ( UIViewController * ) viewController { + UIViewController* topViewController = [ self parentTabController : viewController ] ; if ( <UNK> || <UNK> || <UNK> ) { - UITabBarItem* tabItem = <UNK> ; + UITabBarItem* tabItem = <UNK> ; <UNK> = [ self getSelectedIconImage ] ; <UNK> = [ self getIconImage ] ; @ @ <UNK> <UNK> @ @ [ self appendTitleAttributes : tabItem ] ; - [ viewController setTabBarItem : tabItem ] ; +
# result : Merge branch <UNK> into refactorOptions
# expect : tests fix
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ } - ( void ) applyOn : ( UIViewController * ) viewController { + UIViewController* topViewController = [ self getTabControllerFirstChild : viewController ] ; if ( <UNK> || <UNK> || <UNK> ) { - UITabBarItem* tabItem = <UNK> ; + UITabBarItem* tabItem = <UNK> ; <UNK> = [ self getSelectedIconImage ] ; <UNK> = [ self getIconImage ] ; @ @ <UNK> <UNK> @ @ [ self appendTitleAttributes : tabItem ] ; - [ viewController setTabBarItem : tabItem ] ; +
# result : Revert <UNK> <UNK> shared element <UNK>
# expect : Merge branch <UNK> into refactorOptions
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class EventEmitter { } <UNK> ( ) <UNK> ( eventId , arguments ) ; } + + public void sendEvent ( String eventId ) { + if ( ! <UNK> ( ) ) { + return ; + } + <UNK> ( ) <UNK> ( eventId , <UNK> ( ) ) ; + } } diff -- git <UNK>
# result : Merge branch <UNK> into snackbarEnhancements
# expect : Snackback can be displayed statically from Navigation
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + + < <UNK> align= <UNK> center <UNK> > + < img src= <UNK> <UNK> <UNK> / > < br > + React Native Navigation + < <UNK> > + + [ ! [ NPM Version ] ( https : <UNK> ? style=flat ) ] ( https : <UNK> ) + [ ! [ NPM Downloads ] ( https : <UNK> ? style=flat ) ] ( https
# result : Improve identity key scanning strings
# expect : Initial commit
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ dependencies { // third party compile `` <UNK> : <UNK> <UNK> compile <UNK> : <UNK> + compile <UNK> : <UNK> // tests testCompile `` junit : <UNK> <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class NavigationReactModule extends ReactContextBaseJavaModule { } @ ReactMethod + public void setTitleBarButtonBadgeByIndex ( String screenInstanceId , Integer index , Integer badge ) { + <UNK> ( screenInstanceId , index , badge ) ;
# result : Added title bar button badge
# expect : Updated ActionItemBadge version
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ buck-out/ <UNK> android/app/libs <UNK> <UNK> <UNK> <UNK> <UNK> \ No newline at end of file diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +package <UNK> ; + + +import <UNK> ; + +public class ButtonOptions { + + public static ButtonOptions parse ( JSONObject json ) { + ButtonOptions options = new ButtonOptions ( ) ; + if ( json == null ) return new ButtonOptions (
# result : fix test
# expect : merge <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ buck-out/ <UNK> android/app/libs <UNK> <UNK> <UNK> <UNK> <UNK> \ No newline at end of file diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +package <UNK> ; + + +import <UNK> ; + +public class ButtonOptions { + + public static ButtonOptions parse ( JSONObject json ) { + ButtonOptions options = new ButtonOptions ( ) ; + if ( json == null ) return new ButtonOptions (
# result : fix test
# expect : WIP
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> # BUCK buck-out/ <UNK> + + # IDE files android/app/libs <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> + diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class OverlayTest extends BaseTest { @ Test public void testOverlayAlertAppear ( ) throws Exception { elementByText ( `` PUSH OPTIONS SCREEN <UNK> ) <UNK> ( ) ; - elementByText ( `` SHOW ALERT <UNK> ) <UNK>
# result : snackbar
# expect : drop FAB for now
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ dependencies { compile `` <UNK> : react-native : + <UNK> // third party - compile `` <UNK> : <UNK> <UNK> compile <UNK> : <UNK> // tests diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +package <UNK> ; + +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK>
# result : update gradle
# expect : Merge branch <UNK> into develop
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> ( { <UNK> } `` ` + + ? > On iOS , you can avoid overriding the tab icons color with ` tabBarButtonColor ` and keep the original icons colors by using the settings below : + + `` ` js <UNK> ( { + tabs : [ <UNK> ] , + appStyle : { + <UNK> + tabBarDisableIconTint : true , + tabBarDisableSelectedIconTint : true + } , + <UNK> + } + `` ` diff -- git
# result : Merge branch <UNK> into master
# expect : Merge branch <UNK> into master
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class StyleParams { public Color topBarColor ; public CollapsingTopBarParams collapsingTopBarParams ; public boolean topBarHidden ; + public boolean topBarElevationShadowEnabled ; public boolean topTabsHidden ; public boolean drawScreenBelowTopBar ; diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class StyleParamsParser { <UNK> = new CollapsingTopBarParamsParser ( params ) <UNK> ( ) ; <UNK> = getBoolean ( `` titleBarHidden <UNK> , getDefaultTopBarHidden ( ) ) ; <UNK> = getBoolean ( ``
# result : Add topBarElevationShadowEnabled style property
# expect : Add topBarElevationShadowEnabled style property
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +import React , { Component } from <UNK> ' ; +import { + StyleSheet , + View , + TouchableOpacity , + Text , + Image + } from <UNK> ' ; + + +export default class CustomNavBar extends Component { + + constructor ( props ) { + super ( props ) ; + <UNK> = { + } ; + } + + render ( ) { + return ( + < View style= { <UNK>
# result : comment custom nav bar code from example project
# expect : add custom navigation bar to example project
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class SideMenu extends DrawerLayout { } public static Side fromString ( String side ) { - return `` left <UNK> <UNK> ( <UNK> ( ) ) ? Left : Right ; + return ( side == null ) || `` left <UNK> <UNK> ( <UNK> ( ) ) ? Left : Right ; } } @ @ <UNK> <UNK> @ @ public class SideMenu extends DrawerLayout { setDrawerLockMode ( <UNK> , <UNK> ) ; } } - } \ No
# result : Merge branch <UNK> into <UNK>
# expect : Make <UNK> the default <UNK> for <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class CollapsingViewPagerScreen extends ViewPagerScreen { public void destroy ( ) { <UNK> ( ) ; for ( ContentView contentView : contentViews ) { - ( ( CollapsingContentView ) contentView ) <UNK> ( ) ; + if ( contentView instanceof CollapsingContentView ) { + ( ( CollapsingContentView ) contentView ) <UNK> ( ) ; + } } } } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ function addNavigatorButtons (
# result : Use a HashMap to fix it
# expect : Fix Fab
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class LightBox extends Dialog implements <UNK> } public void destroy ( ) { - <UNK> ( ) ; + // FIXME : https : <UNK> + // This is a temp fix and will leak memory by never unmounting react + // lightbox components , we only remove them from the native view heirarchy . + // <UNK> ( ) ; dismiss ( ) ; } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @
# result : <UNK> apply temp fix for <UNK> <UNK>
# expect : <UNK> apply temp fix for <UNK> <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + # import `` <UNK> <UNK> + + @ interface Bool : Param + +- ( BOOL ) get ; + +- ( NSNumber * ) getValue ; + +- ( BOOL ) getWithDefaultValue : ( BOOL ) value ; + + @ end diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + # import `` <UNK> <UNK> + + @ interface Bool (
# result : Fixes unit tests
# expect : Fixes default values
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ @ interface RNNBasePresenter : NSObject -- ( void ) present : ( RNNNavigationOptions * ) options onViewControllerDidLoad : ( UIViewController * ) viewController ; -- ( void ) present : ( RNNNavigationOptions * ) options onViewControllerWillAppear : ( UIViewController * ) viewController ; + @ property ( nonatomic , weak ) UIViewController* bindedViewController ; + +- ( void ) bindViewController : ( UIViewController * ) bindedViewController ; + +- ( void ) present : ( RNNNavigationOptions * ) options ; @
# result : bind viewController to presenters using bindViewController
# expect : Merge options to the specific provided layout
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + # import `` <UNK> <UNK> + + @ interface Bool : Param + +- ( BOOL ) get ; + +- ( NSNumber * ) getValue ; + +- ( BOOL ) getWithDefaultValue : ( BOOL ) value ; + + @ end diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + # import `` <UNK> <UNK> + + @ interface Bool (
# result : Fixes unit tests
# expect : Recrusively setDefaultOptions on rootViewController tree
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ } `` ` + Also , add the following + + `` ` java + @ Override + public String getJSMainModuleName ( ) { + return `` index <UNK> ; + } + `` ` + + if you are using ` <UNK> ` as your entry point instead of ` <UNK> ` and ` <UNK> ` ( it is the default since React Native <UNK> ) . + Make sure that ` isDebug ` and ` createAdditionalReactPackages ` methods are
# result : android too <UNK>
# expect : android too <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class BottomTabsLayout extends BaseLayout implements <UNK> for ( int i = 0 ; i < <UNK> ( ) ; i++ ) { screenStacks [ i ] <UNK> ( screenInstanceId , styleParams ) ; } + + <UNK> ( styleParams ) ; } @ Override diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK>
# result : Merge branch <UNK> into master
# expect : Merge pull request <UNK> from wix/master
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; */ public abstract class BaseReactActivity extends AppCompatActivity implements DefaultHardwareBackBtnHandler { + protected static final String KEY_ANIMATED = `` animated <UNK> ; + protected static final String KEY_HIDDEN = `` hidden <UNK> ; + protected static final String KEY_TAB_INDEX = `` tabIndex <UNK> ; + protected static final String KEY_TITLE = `` title <UNK> ; private static final String TAG = `` BaseReactActivity <UNK> ; private static final String REDBOX_PERMISSION_MESSAGE = `` Overlay permissions needs to be granted in
# result : Wire up tab show/hide and tab selection
# expect : Wire up tab show/hide and tab selection
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; */ public abstract class BaseReactActivity extends AppCompatActivity implements DefaultHardwareBackBtnHandler { + protected static final String KEY_ANIMATED = `` animated <UNK> ; + protected static final String KEY_BADGE = `` badge <UNK> ; + protected static final String KEY_HIDDEN = `` hidden <UNK> ; + protected static final String KEY_TAB_INDEX = `` tabIndex <UNK> ; + protected static final String KEY_TITLE = `` title <UNK> ; private static final String TAG = `` BaseReactActivity <UNK> ; private static final
# result : Fix reference
# expect : Restore super call for modal back
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; */ public abstract class BaseReactActivity extends AppCompatActivity implements DefaultHardwareBackBtnHandler { + protected static final String KEY_ANIMATED = `` animated <UNK> ; + protected static final String KEY_BADGE = `` badge <UNK> ; + protected static final
# result : Fix custom menu icon not displaying
# expect : Add left drawer for Android
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class WelcomeScreen extends Component { < Button <UNK> ' testID= { <UNK> } onPress= { <UNK> } / > < Button <UNK> Id ' testID= { <UNK> } onPress= { <UNK> } / > < Button <UNK> Layout ' testID= { <UNK> } onPress= { <UNK> } / > + < Button <UNK> screen after async action ' onPress= { <UNK> } / > < Text style= { <UNK> } > { ` <UNK> = $ { <UNK> } ` }
# result : Push screen after async action
# expect : Merge branch <UNK> of <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class TitleBar extends Toolbar { leftButton = new LeftButton ( getContext ( ) , leftButtonParams , leftButtonOnClickListener , navigatorEventId , overrideBackPressInJs ) ; setNavigationOnClickListener ( leftButton ) ; - setNavigationIcon ( leftButton ) ; + + if ( <UNK> ! = null ) { + setNavigationIcon ( <UNK> ) ; + } else { + setNavigationIcon ( leftButton ) ; + } } public void hide ( ) {
# result : Support customize icon for left nav button in android
# expect : Merge branch <UNK> into master
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; +import <UNK> ; public class ImageLoader { - public interface ImageLoadingListener { - void onComplete ( @ NonNull Drawable drawable ) ; + public interface ImagesLoadingListener { + void onComplete ( @ NonNull List < Drawable > drawable ) ; void onError ( Throwable error ) ; } private static final String FILE_SCHEME = `` file <UNK> ; - public void loadIcon ( final Context context
# result : Merge branch <UNK> of <UNK> into implement_images_loader
# expect : removed redundant checks for testId
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ const NSInteger TRANSPARENT_NAVBAR_TAG = <UNK> ; [ viewController setNeedsStatusBarAppearanceUpdate ] ; } + NSNumber *tabBarHidden = <UNK> [ @ <UNK> tabBarHidden <UNK> ] ; + BOOL tabBarHiddenBool = tabBarHidden ? [ tabBarHidden boolValue ] : NO ; + if ( tabBarHiddenBool ) { + UITabBar *tabBar = <UNK> ; + <UNK> = CGAffineTransformMakeTranslation ( 0 , <UNK> ) ; + } + NSNumber *navBarHidden = <UNK> [ @ <UNK> navBarHidden <UNK> ] ; BOOL navBarHiddenBool = navBarHidden ? [ navBarHidden boolValue
# result : added tabBarHidden property to navigatorStyle
# expect : Merge branch <UNK> into master
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ @ implementation RNNBackButtonOptions - ( void ) applyOn : ( UIViewController * ) viewController { - if ( <UNK> & & ! [ <UNK> boolValue ] ) { - <UNK> = @ <UNK> <UNK> ; - } - + UIBarButtonItem *backItem = [ [ UIBarButtonItem alloc ] init ] ; + if ( <UNK> ) { UIImage *image = <UNK> ; [ <UNK> setBackIndicatorImage : [ UIImage new ] ] ; [ <UNK> setBackIndicatorTransitionMaskImage : [ UIImage new ] ] ;
# result : Fix ability to add color for back button
# expect : Change docs because color can be used with iOS too
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ describe ( <UNK> style ' , ( ) = > { ) ; test ( - <UNK> Tab Bar when pressing on Hide Top Bar and shows it when pressing on Show Top Bar ' , + <UNK> TopBar when pressing on Hide TopBar and shows it when pressing on Show TopBar ' , async ( ) = > { await elementById ( <UNK> ) <UNK> ( ) ; await elementById ( <UNK> ) <UNK> ( ) ; diff -- git
# result : Merge branch <UNK> into optionsRewrite
# expect : Merge branch <UNK> into optionsRewrite
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> # BUCK buck-out/ <UNK> + + # IDE files android/app/libs <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> \ No newline at end of file <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class OverlayTest extends BaseTest { @ Test public void testOverlayAlertAppear ( ) throws Exception { elementByText ( `` PUSH OPTIONS SCREEN <UNK>
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ describe ( <UNK> style ' , ( ) = > { await expect ( elementByLabel ( ` Two ` ) ) <UNK> ( ) ; } ) ; + test ( <UNK> button is tapable ' , async ( ) = > { + await elementById ( <UNK> ) <UNK> ( ) ; + await expect ( elementByLabel ( ` Two ` ) ) <UNK> ( ) ; + await elementByLabel ( ` Two ` ) <UNK> ( ) ; +
# result : fixes custom buttons
# expect : Merge branch <UNK> into customButtonFix
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class NavigationActivity extends AppCompatActivity implements DefaultHard @ Override public void onActivityResult ( int requestCode , int resultCode , Intent data ) { - <UNK> ( ) <UNK> ( requestCode , resultCode , data ) ; + <UNK> ( ) <UNK> ( this , requestCode , resultCode , data ) ; } @ Override diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class NavigationReactGateway implements ReactGateway { getReactInstanceManager (
# result : Merge feature/styling into <UNK>
# expect : Merge branch <UNK> of <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public interface ReactGateway { void onBackPressed ( ) ; - void onActivityResult ( int requestCode , int resultCode , Intent data ) ; boolean hasStartedCreatingContext ( ) ; + void onActivityResult ( Activity activity , int requestCode , int resultCode , Intent data ) ; } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # import < <UNK> > # import < <UNK> > + @ interface RCCTitleView : UIView
# result : Merge branch <UNK> into feature/styling
# expect : Merge branch <UNK> into feature/styling
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ static NSString* const setDefaultOptions = @ <UNK> setDefaultOptions <UNK> ; UIViewController *vc = [ _controllerFactory createLayout : layout [ @ <UNK> root <UNK> ] saveToStore : _store ] ; - <UNK> = vc ; - [ <UNK> makeKeyWindow ] ; + [ UIApplication sharedApplication ] <UNK> = vc ; + [ _eventEmitter sendOnNavigationCommandCompletion : setRoot params : @ { @ <UNK> layout <UNK> : layout } ] ; completion ( ) ; } @ @ <UNK> <UNK> @ @ static NSString*
# result : Merge branch <UNK> into fixOverlays
# expect : Fixes <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ function registerScreen ( screenID , generator ) { <UNK> ( screenID , generator ) ; } -function registerComponent ( screenID , generator , store = undefined , Provider = undefined ) { +function registerComponent ( screenID , generator , store = undefined , Provider = undefined , client= undefined ) { if ( store & & Provider ) { - return _registerComponentRedux ( screenID , generator , store , Provider ) ; + return _registerComponentRedux ( screenID , generator , store
# result : Added support for passing client prop to Provider wrapper component
# expect : Merge branch <UNK> of <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class NavigationReactModule extends ReactContextBaseJavaModule { } @ ReactMethod - public void setScreenButtons ( String screenInstanceId , String navigatorEventId , - ReadableArray rightButtonsParams , ReadableMap leftButtonParams , ReadableMap fab ) { + public void setScreenButtons ( String screenInstanceId , String navigatorEventId , ReadableArray rightButtonsParams , + ReadableMap leftButtonParams , ReadableMap fab ) { if ( rightButtonsParams ! = null ) { setScreenTitleBarRightButtons ( screenInstanceId , navigatorEventId , rightButtonsParams ) ; } @ @ <UNK> <UNK> @ @ public class NavigationReactModule extends
# result : iOS indent
# expect : first try for android
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class NavigationReactModule extends ReactContextBaseJavaModule { } @ ReactMethod - public void dismissAllModals ( ) { - <UNK> ( ) ; + public void dismissAllModals ( Promise promise ) { + <UNK> ( promise ) ; } @ ReactMethod - public void dismissTopModal ( final ReadableMap params ) { - <UNK> ( <UNK> ( <UNK> ( params ) ) ) ; + public void dismissTopModal ( final ReadableMap params , Promise promise ) { + <UNK> ( <UNK> ( <UNK> (
# result : Update <UNK>
# expect : Update <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ @ implementation RNNBackButtonOptions - ( void ) applyOn : ( UIViewController * ) viewController { - if ( <UNK> & & ! [ <UNK> boolValue ] ) { - <UNK> = @ <UNK> <UNK> ; + UIBarButtonItem *backItem = [ [ UIBarButtonItem alloc ] init ] ; + + <UNK> = <UNK> ; + + if ( <UNK> ) { + <UNK> = [ RCTConvert UIColor : <UNK> ] ; } - - if ( <UNK> ) { - UIImage *image
# result : Looks like the if is not needed
# expect : Remove title setting because it is in setBackItem
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ @ interface RCCCustomTitleView : UIView - ( instancetype ) initWithFrame : ( CGRect ) frame subView : ( UIView* ) subView alignment : ( NSString* ) alignment ; - +- ( void ) viewWillTransitionToSize : ( CGSize ) size withTransitionCoordinator : ( id < UIViewControllerTransitionCoordinator > ) coordinator ; @ end diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ @ interface RCCCustomTitleView ( ) @ property ( nonatomic , strong
# result : Now allowing the custom nav bar to take up the whole space on iOS
# expect : Now allowing the custom nav bar to take up the whole space on iOS
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; public class SideMenuParams extends BaseScreenParams { public boolean disableOpenGesture ; public <UNK> side ; + public int fixedWidth ; } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class SideMenuParamsParser extends Parser { <UNK> = <UNK> ( `` screenId <UNK> ) ; <UNK> = new NavigationParams ( <UNK> ( `` navigationParams <UNK> ) ) ; <UNK> = <UNK> ( `` disableOpenGesture <UNK> , false ) ; +
# result : Added optional fixedWidth property to the Android side menu
# expect : Added optional fixedWidth property to the Android side menu
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> is written in Test Driven Development . We have a test for every feature inclu | showModal | ✅ | ✅| | dismissModal | ✅ | ✅| | showOverlay | [ Contribute ] ( <UNK> ) | WIP @ <UNK> | -| dismissOverlay | [ Contribute ] ( <UNK> ) | [ Contribute ] ( <UNK> ) | +| dismissOverlay | [ Contribute ] ( <UNK> ) | WIP @ <UNK> | | customTransition | ✅ | [ Contribute ]
# result : tests
# expect : other
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> is written in Test Driven Development . We have a test for every feature inclu | showModal | ✅ | ✅| | dismissModal | ✅ | ✅| | showOverlay | [ Contribute ] ( <UNK> ) | WIP @ <UNK> | -| dismissOverlay | [ Contribute ] ( <UNK> ) | [ Contribute ] ( <UNK> ) | +| dismissOverlay | [ Contribute ] ( <UNK> ) | WIP @ <UNK> | | customTransition | ✅ | [ Contribute ]
# result : tests
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ const NSInteger TRANSPARENT_NAVBAR_TAG = <UNK> ; if ( screenBackgroundImageName ) { UIImage *image = [ UIImage imageNamed : screenBackgroundImageName ] ; - [ <UNK> setBackgroundColor : [ UIColor colorWithPatternImage : image ] ] ; + <UNK> = ( __bridge id _Nullable ) ( <UNK> ) ; } NSString *navBarBackgroundColor = <UNK> [ @ <UNK> navBarBackgroundColor <UNK> ] ;
# result : Merge branch <UNK> into master
# expect : Make screen background image stretch when using screenBackgroundImageName
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class StyleParams { public Color topBarColor ; public CollapsingTopBarParams collapsingTopBarParams ; public boolean topBarHidden ; + public boolean topBarElevationShadowEnabled ; public boolean topTabsHidden ; public boolean drawScreenBelowTopBar ; diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class StyleParamsParser { <UNK> = new CollapsingTopBarParamsParser ( params ) <UNK> ( ) ; <UNK> = getBoolean ( `` titleBarHidden <UNK> , getDefaultTopBarHidden ( ) ) ; <UNK> = getBoolean ( ``
# result : Add topBarElevationShadowEnabled style property
# expect : Add topBarElevationShadowEnabled style property
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ / > `` ` + Also , add the following + + `` ` java + @ Override + public String getJSMainModuleName ( ) { + return `` index <UNK> ; + } + `` ` + + if you are using ` <UNK> ` as your entry point instead of ` <UNK> ` and ` <UNK> ` ( it is the default since React Native <UNK> ) . +
# result : android too
# expect : android too
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ReactView extends ReactRootView implements <UNK> } private void start ( ) { - setEventListener ( new <UNK> ( ) { - - @ Override - public void onAttachedToReactInstance ( final ReactRootView reactRootView ) { - <UNK> ( null ) ; - isAttachedToReactInstance = true ; - } - } ) ; + setEventListener ( reactRootView - > { + <UNK> ( null ) ; + isAttachedToReactInstance = true ; + } ) ; final Bundle opts = new Bundle
# result : Merge branch <UNK> into topbar
# expect : rm doc
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android { } testLogging { events `` passed <UNK> , `` skipped <UNK> , `` failed <UNK> , `` standardOut <UNK> , `` standardError <UNK> + showStandardStreams true } afterSuite { desc , result - > if ( ! <UNK> ) { // will match the outermost suite @ @ <UNK> <UNK> @ @ dependencies { testImplementation <UNK> : <UNK> testImplementation <UNK> : <UNK> testImplementation <UNK> : <UNK> - testImplementation <UNK> : <UNK> + testImplementation <UNK> : <UNK> } diff --
# result : fix handling of <UNK> <UNK> <UNK> <UNK> URIs
# expect : fix tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> . * ; @ RunWith ( <UNK> ) public abstract class BaseTest { - static final String PACKAGE_NAME = `` <UNK> <UNK> ; - private static final long TIMEOUT = <UNK> ; - - @ Before - public void beforeEach ( ) throws Exception { - device ( ) <UNK> ( ) ; - device ( ) <UNK> ( ) ; - launchTheApp ( ) ; - assertMainShown ( ) ; - } - - @ After -
# result : more refactoring
# expect : merge <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> . * ; @ RunWith ( <UNK> ) public abstract class BaseTest { - static final String PACKAGE_NAME = `` <UNK> <UNK> ; - private static final long TIMEOUT = <UNK> ; - - @ Before - public void beforeEach ( ) throws Exception { - device ( ) <UNK> ( ) ; - device ( ) <UNK> ( ) ; - launchTheApp ( ) ; - assertMainShown ( ) ; - } - - @ After -
# result : more refactoring
# expect : rm outdated
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ describe ( <UNK> style ' , ( ) = > { await elementByLabel ( <UNK> Options ' ) <UNK> ( ) ; await expect ( element ( <UNK> ( <UNK> Screen ' ) ) ) <UNK> ( ) ; } ) ; + + it ( <UNK> Tab Bar when pressing on Hide Top Bar and shows it when pressing on Show Top Bar ' , async ( ) = > { + await elementByLabel ( <UNK> Options Screen ' )
# result : Merge branch <UNK> into <UNK>
# expect : minor fix and topBarHideOnScroll
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> . In Xcode , in Project Navigator ( left pane ) , click on your project ( top ) , then click on your *target* row ( on the `` project and targets list <UNK> , which is on the left column of the right pane ) and select the ` Build Phases ` tab ( right pane ) . In the ` Link Binary With Libraries ` section add ` <UNK> ` ( [ screenshots ] ( https :
# result : Merge branch <UNK> into master
# expect : Added a missing iOS installation step
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ function _registerComponentNoRedux ( screenID , generator ) { constructor ( props ) { super ( props ) ; <UNK> = { - internalProps : { <UNK> props , <UNK> <UNK> ( <UNK> ) } + internalProps : { <UNK> props , <UNK> <UNK> ( <UNK> || <UNK> ) } } } componentWillReceiveProps ( nextProps ) { <UNK> ( { - internalProps : { <UNK> <UNK> ( <UNK> ) , <UNK> nextProps } + internalProps : { <UNK> <UNK> ( <UNK> ||
# result : Fix props loading from PropsRegistry in custom buttons
# expect : <UNK> custom button props over the bridge
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ function startTabBasedApp ( params ) { navigatorButtons , navigatorEventID } = _mergeScreenSpecificSettings ( <UNK> , screenInstanceID , tab ) ; - _processNavigatorButtons ( navigatorButtons ) ; + _saveNavigatorButtonsProps ( navigatorButtons ) ; + _saveNavBarComponentProps ( navigatorStyle ) ; <UNK> = { screenInstanceID , navigatorStyle , @ @ <UNK> <UNK> @ @ function startSingleScreenApp ( params ) { navigatorButtons , navigatorEventID } = _mergeScreenSpecificSettings ( <UNK> , screenInstanceID , screen ) ; - _processNavigatorButtons ( navigatorButtons ) ; + _saveNavigatorButtonsProps ( navigatorButtons
# result : Fix failed SMIL generation when part name is null
# expect : Save navBar component props
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> ( { left : { // optional , define if you want a drawer from the left screen : <UNK> ' , // unique ID registered with <UNK> passProps : { } , // simple serializable object that will pass as props to all top screens ( optional ) + disableOpenGesture : false // optional , can the drawer be opened with a swipe instead of button } , right : { // optional , define if you want a
# result : Merge branch <UNK> into cm/transformer-speed
# expect : Update documentation on disableOpenGesture
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ const NSInteger TRANSPARENT_NAVBAR_TAG = <UNK> ; ) { for ( UIBarButtonItem *item in <UNK> ) { - [ item setTitleTextAttributes : navButtonTextAttributes forState : UIControlStateNormal ] ; - if ( <UNK> > 0 ) { - [ item setTitleTextAttributes : leftNavButtonTextAttributes forState : UIControlStateNormal ] ; + NSDictionary *previousAttributes = [ item titleTextAttributesForState : UIControlStateNormal ] ; + NSMutableDictionary *mergedAttributes ; + + if ( <UNK> > 0 ) { + mergedAttributes = [ leftNavButtonTextAttributes mutableCopy ] ; + } else
# result : Merge branch <UNK> into dont-override-button-styles
# expect : Ensure that styles set on individual buttons are not <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> is written in Test Driven Development . We have a test for every feature inclu | sideMenu | ✅ | ✅ | | tabs | ✅ | ✅ | | External Component | ✅ | ✅ | -| splitView | [ Contribute ] ( <UNK> ) | [ Contribute ] ( <UNK> ) | +| splitView | ✅ | [ Contribute ] ( <UNK> ) | # # # Screen API @ @ <UNK> <UNK> @ @ <UNK> is written
# result : Merge branch <UNK> of <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import { CommandsObserver } from <UNK> ' ; import { Constants } from <UNK> ' ; import { ComponentType } from <UNK> ' ; import { ComponentEventsObserver } from <UNK> ' ; +import { LayoutRoot , Layout } from <UNK> ' ; +import { Options } from <UNK> ' ; export class Navigation { public readonly Element : <UNK> < { elementId : any ; resizeMode ? : any ; } > ; @ @ <UNK> <UNK> @ @ export class
# result : Merge branch <UNK> into <UNK>
# expect : Optional fields
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ Push a new screen into this screen <UNK> navigation stack . <UNK> ( { screen : <UNK> ' , // unique ID registered with <UNK> title : undefined , // navigation bar title of the pushed screen ( optional ) + subtitle : undefined , // navigation bar subtitle of the pushed screen ( optional ) titleImage : require ( <UNK> ' ) , // iOS only . navigation bar title image instead of the title text of the pushed screen
# result : Document subtitle parameter for screen push
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ class FloatingActionButtonCoordinator { FloatingActionButton fab = new FloatingActionButton ( <UNK> ( ) ) ; <UNK> ( <UNK> ( ) ) ; <UNK> ( icon ) ; + <UNK> ( <UNK> ) ; return fab ; } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @
# result : Merge branch <UNK> of <UNK> into feat-add-modal-tabs
# expect : <UNK> enable fab icon scaling <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> ( { title : <UNK> One ' , // title of the screen as appears in the nav bar ( optional ) titleImage : require ( <UNK> ' ) , // iOS only . navigation bar title image instead of the title text of the pushed screen ( optional ) navigatorStyle : { } , // override the navigator style for the tab screen , see `` Styling the navigator <UNK> below ( optional ) , - navigatorButtons : {
# result : Merge remote-tracking branch <UNK> into feat-add-modal-tabs
# expect : Merge branch <UNK> into feat-add-modal-tabs
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ dependencies { implementation <UNK> : <UNK> implementation <UNK> : <UNK> implementation <UNK> : <UNK> + implementation <UNK> : <UNK> + // node_modules //noinspection GradleDynamicVersion diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +package <UNK> ; + + +import <UNK> ; +import <UNK> ; + +import <UNK> ; + +public class FabMenuOptions implements DEFAULT_VALUES { + + public static FabMenuOptions parse ( JSONObject json ) { + FabMenuOptions
# result : fab menu
# expect : size
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> ( <UNK> , { } } } ) ; + `` ` + + # # Peek and Pop ( iOS <UNK> ) + +react-native-navigation supports the [ Peek and pop ] ( +https : <UNK> # <UNK> ) feature in iOS <UNK> and newer . + +This works by passing a ref a componentent you would want to transform into a peek view . We have included a handly component to handle all the touches and ref for you
# result : Merge branch <UNK> of <UNK> into <UNK>
# expect : Added tests for touchablePreview event
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class LayoutFactory { } private ViewController createSideMenuRoot ( LayoutNode node ) { - SideMenuController sideMenuController = new SideMenuController ( activity , childRegistry , <UNK> , parseNodeOptions ( node ) ) ; + SideMenuController sideMenuController = new SideMenuController ( activity , childRegistry , <UNK> , parseNodeOptions ( node ) ) ; + ViewController childControllerCenter = null , childControllerLeft = null , childControllerRight = null ; + for ( LayoutNode child : <UNK> ) { - ViewController childController = create ( child
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ function addNavigationStyleParams ( screen ) { <UNK> = <UNK> ( { } , <UNK> , <UNK> ) ; } -function showSnackbar ( params ) { +function showSnackbar ( navigator , params ) { const adapted = <UNK> ( params ) ; if ( <UNK> ) { <UNK> = processColor ( <UNK> ) ;
# result : <UNK> single <UNK> in SQLite entries for message backups
# expect : fix show snackbar
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ function addNavigationStyleParams ( screen ) { <UNK> = <UNK> ( { } , <UNK> , <UNK> ) ; } -function showSnackbar ( params ) { +function showSnackbar ( navigator , params ) { const adapted = <UNK> ( params ) ; if ( <UNK> ) { <UNK> = processColor ( <UNK> ) ;
# result : <UNK> single <UNK> in SQLite entries for message backups
# expect : Merge branch <UNK> into fix/show-snackbar
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android { <UNK> { dimension `` <UNK> <UNK> } + <UNK> { + dimension `` <UNK> <UNK> + } } } diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ -package <UNK> ; - -import <UNK> ; -import <UNK> ; -import <UNK> ; - -import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ;
# result : Merge branch <UNK> into <UNK>
# expect : add support for react-native <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android { <UNK> { dimension `` <UNK> <UNK> } + <UNK> { + dimension `` <UNK> <UNK> + } } } diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ -package <UNK> ; - -import <UNK> ; -import <UNK> ; -import <UNK> ; - -import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ;
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ @ interface RNNModalManager : NSObject - @ property ( nonatomic , strong ) UIViewController* toVC ; + @ property ( nonatomic , strong ) UIViewController < RNNRootViewProtocol > * toVC ; - ( instancetype ) initWithStore : ( RNNStore* ) store ; - ( void ) showModal : ( UIViewController* ) viewController completion : ( RNNTransitionCompletionBlock ) completion ; diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - ( void
# result : Added first changes to support updating recipients without recreating <UNK>
# expect : adresses <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ @ interface RNNModalManager : NSObject - @ property ( nonatomic , strong ) UIViewController* toVC ; + @ property ( nonatomic , strong ) UIViewController < RNNRootViewProtocol > * toVC ; - ( instancetype ) initWithStore : ( RNNStore* ) store ; - ( void ) showModal : ( UIViewController* ) viewController completion : ( RNNTransitionCompletionBlock ) completion ; diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - ( void
# result : Added first changes to support updating recipients without recreating <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + # import `` <UNK> <UNK> + + @ interface Bool : Param + +- ( BOOL ) get ; + +- ( NSNumber * ) getValue ; + +- ( BOOL ) getWithDefaultValue : ( BOOL ) value ; + + @ end diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + # import `` <UNK> <UNK> + + @ interface Bool (
# result : Fixes unit tests
# expect : Recrusively setDefaultOptions on rootViewController tree
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ export default class CustomTopBar extends Component { render ( ) { return ( < View style= { <UNK> } > - < TouchableOpacity stye= { <UNK> } onPress= { ( ) = > <UNK> ( <UNK> , <UNK> for that : ) ' ) } > - < Text style= { <UNK> } > Press Me < /Text > + < TouchableOpacity style= { <UNK> } onPress= { ( ) = > <UNK> ( <UNK> , <UNK> custom btn : )
# result : Merge branch <UNK> into master
# expect : Added mix of native btns and custom component on the Custom TopBar screen of the example project
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ static NSString *MMDrawerOpenSideKey = @ <UNK> MMDrawerOpenSide <UNK> ; # pragma mark - iOS <UNK> Status Bar Helpers - ( UIViewController* ) childViewControllerForStatusBarStyle { - return [ self childViewControllerForSide : <UNK> ] ; + return [ self childViewControllerForSide : MMDrawerSideNone ] ; } - ( UIViewController* ) childViewControllerForStatusBarHidden { - return [ self childViewControllerForSide : <UNK> ] ; + return [ self childViewControllerForSide : MMDrawerSideNone ] ; } - ( void ) setNeedsStatusBarAppearanceUpdateIfSupported {
# result : Merge branch <UNK> into master
# expect : Merge branch <UNK> into master
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ Check out [ this link ] ( https : <UNK> # # # redux-persist Boilerplate for integrating redux-persist can be found [ here ] ( https : <UNK> ) . + + # # # Splash Screen Tutorial +A detail tutorial about how to correctly implement Splash Screen with RNN : [ Article Link ] ( https : <UNK> @ <UNK> ) . +Note : The article use third-party tool name RN-Toolbox ( optional ) to generate Splash Screen assets .
# result : Add splash screen tut in third party lib support list
# expect : Revert the old drawer commit
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class NavigationReactGateway implements ReactGateway , ReactInstanceManage private ReactInstanceManager createReactInstanceManager ( ) { <UNK> builder = <UNK> ( ) + <UNK> ( true ) <UNK> ( <UNK> ) <UNK> ( <UNK> ( ) ) <UNK> ( <UNK> ( ) )
# result : Merge branch <UNK> of <UNK>
# expect : Set to use old bridge for compatibility with <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ var Controllers = { } <UNK> ( id , `` setTitle <UNK> , params ) ; } , + setStyle ( params = { } ) { + var style = <UNK> ( { } , params ) ; + _processProperties ( style ) ; + if ( <UNK> === <UNK> ' ) { + <UNK> ( id , `` setStyle <UNK> , style ) ; + } else { + <UNK> ( ` Setting style <UNK> supported on $ {
# result : Fixes setStyle function
# expect : Fixes setStyle function
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public interface ReactGateway { void onBackPressed ( ) ; - void onActivityResult ( int requestCode , int resultCode , Intent data ) ; boolean hasStartedCreatingContext ( ) ; + void onActivityResult ( Activity activity , int requestCode , int resultCode , Intent data ) ; } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # import < <UNK> > # import < <UNK> > + @ interface RCCTitleView : UIView
# result : Merge branch <UNK> into feature/styling
# expect : Merge branch <UNK> into feature/styling
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # import < <UNK> > # import < <UNK> > + @ interface RCCTitleView : UIView + + @ property ( nonatomic , strong ) UILabel *titleLabel ; + + @ property ( nonatomic , strong ) UILabel *subtitleLabel ; + + @ end + @ interface RCCTitleViewHelper : NSObject diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # import `` <UNK> <UNK> # import `` <UNK> <UNK> + #
# result : Merge master into feature/styling
# expect : Fixed merged <UNK> file
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class StyleParams { public int titleBarHeight ; public boolean backButtonHidden ; public Font titleBarButtonFontFamily ; + public int titleBarTopPadding ; public Color topTabTextColor ; public Color topTabIconColor ; diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class StyleParamsParser { <UNK> = getInt ( `` titleBarHeight <UNK> , getDefaultTitleBarHeight ( ) ) ; <UNK> = getBoolean ( `` backButtonHidden <UNK> , getDefaultBackButtonHidden ( ) ) ; <UNK> = getBoolean
# result : Update documentation
# expect : Add paddingTop to android <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ describe ( <UNK> ' , ( ) = > { expect ( <UNK> [ 0 ] <UNK> ) <UNK> ( <UNK> ' ) ; } ) ; + it ( <UNK> not generate unique id when already provided ' , ( ) = > { + const node = { id : <UNK> defined id ' , type : <UNK> } ; + <UNK> ( node ) ; + expect ( <UNK> ) <UNK> ( <UNK> defined id ' ) ;
# result : generate id only when not already provided
# expect : allows passing id
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ const Utils = require ( <UNK> ' ) ; -const elementByLabel = <UNK> ; +const { elementByLabel , elementById } = Utils ; describe ( <UNK> style ' , ( ) = > { beforeEach ( async ( ) = > { @ @ <UNK> <UNK> @ @ describe ( <UNK> style ' , ( ) = > { await elementByLabel ( <UNK> Tab Badge ' ) <UNK> ( ) ; await expect ( element ( <UNK> ( <UNK> ' )
# result : setButtons for iOS
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android { dependencies { compile fileTree ( dir : `` libs <UNK> , include : [ `` <UNK> <UNK> ] ) - compile <UNK> : <UNK> - compile `` <UNK> : <UNK> <UNK> + compile <UNK> : <UNK> + compile `` <UNK> : <UNK> <UNK> // node_modules compile `` <UNK> : react-native : + <UNK>
# result : Merge branch <UNK> into sdk/android-appcompat
# expect : android AppCompat & Design libs from <UNK> to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; public abstract class SplashActivity extends AppCompatActivity { public static boolean isResumed = false ; + public static SplashActivity instance = null ; public static void start ( Activity activity ) { Intent intent = <UNK> ( ) <UNK> ( <UNK> ( ) ) ; @ @ <UNK> <UNK> @ @ public abstract class SplashActivity extends AppCompatActivity { @ Override protected void onCreate ( @ Nullable Bundle savedInstanceState ) { <UNK> ( savedInstanceState ) ; + instance = this
# result : Merge branch <UNK> into android-splashscreen-redbox
# expect : Merge branch <UNK> into android-splashscreen-redbox
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ `` lodash <UNK> : `` <UNK> <UNK> } , `` devDependencies <UNK> : { - `` react-native <UNK> : `` <UNK> <UNK> , - `` react <UNK> : `` <UNK> <UNK> , + `` react-native <UNK> : `` <UNK> <UNK> ,
# result : Bump react-native version to <UNK>
# expect : Bump react-native version to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class LightBox extends Dialog implements <UNK> } } - private void createContent ( final Context context , LightBoxParams params ) { + private void createContent ( final Context context , final LightBoxParams params )
# result : Merge branch <UNK> into fix-android-lightbox
# expect : <UNK> Fix an issue with incorrect Lightbox <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + + < <UNK> align= <UNK> center <UNK> > + < img src= <UNK> <UNK> <UNK> / > < br > + React Native Navigation + < <UNK> > + + [ ! [ NPM Version ] ( https : <UNK> ? style=flat ) ] ( https : <UNK> ) + [ ! [ NPM Downloads ] ( https : <UNK> ? style=flat ) ] ( https
# result : Improve identity key scanning strings
# expect : Initial commit
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ } UIImage *iconImageSelected = nil ; id selectedIcon = tabItemLayout [ @ <UNK> props <UNK> ] [ @ <UNK> selectedIcon <UNK> ] ; - if ( selectedIcon ) iconImageSelected = [ RCTConvert UIImage : selectedIcon ] ; + if ( selectedIcon ) { + iconImageSelected = [ RCTConvert UIImage : selectedIcon ] ; + } else { + iconImageSelected = [ RCTConvert UIImage : icon ] ; + } <UNK> = [ [ UITabBarItem alloc ] initWithTitle : title image :
# result : Fixing issue <UNK>
# expect : Fixing issue <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import React from <UNK> ' ; import PropTypes from <UNK> ' ; import { StyleSheet , View , Text , TouchableHighlight , Platform } from <UNK> ' ; -function Row ( { title , onPress , platform , testID } ) { - if ( platform & & platform ! == <UNK> ) { - return < View / > ; - } +class Row extends <UNK> { + render ( ) { + const { title , onPress , onPressIn
# result : Merge branch <UNK> of <UNK> into feature/preview-peek-pop
# expect : Moved from passProps to actionParams
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> ( { backButtonTitle : undefined , // override the back button title ( optional ) backButtonHidden : false , // hide the back button altogether ( optional ) navigatorStyle : { } , // override the navigator style for the pushed screen ( optional ) - navigatorButtons : { } // override the nav buttons for the pushed screen ( optional ) + navigatorButtons : { } , // override the nav buttons for the pushed screen ( optional )
# result : Merge branch <UNK> into feature/preview-peek-pop
# expect : Documentation update for peek and pop
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ describe ( <UNK> style ' , ( ) = > { ) ; test ( - <UNK> Tab Bar when pressing on Hide Top Bar and shows it when pressing on Show Top Bar ' , + <UNK> TopBar when pressing on Hide TopBar and shows it when pressing on Show TopBar ' , async ( ) = > { await elementById ( <UNK> ) <UNK> ( ) ; await elementById ( <UNK> ) <UNK> ( ) ; diff -- git
# result : Merge branch <UNK> into optionsRewrite
# expect : Merge BottomTabs options
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class NavigationActivity extends AppCompatActivity implements DefaultHard public void run ( ) { <UNK> ( ) ; <UNK> ( ) ; + + Object devSupportManager = <UNK> ( getReactGateway ( ) <UNK> ( ) , `` mDevSupportManager <UNK> ) ; + if ( <UNK> ( devSupportManager , `` mRedBoxDialog <UNK> ) ! = null
# result : Merge branch <UNK> into <UNK>
# expect : Add support for react-native <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class NavigationActivity extends AppCompatActivity implements DefaultHard public void run ( ) { <UNK> ( ) ; <UNK> ( ) ; + + Object devSupportManager = <UNK> ( getReactGateway ( ) <UNK> ( ) , `` mDevSupportManager <UNK> ) ; + if ( <UNK> ( devSupportManager , `` mRedBoxDialog <UNK> ) ! = null
# result : Merge branch <UNK> into <UNK>
# expect : Refactore a bit
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class NavigationActivity extends AppCompatActivity implements DefaultHard public void run ( ) { <UNK> ( ) ; <UNK> ( ) ; + + Object devSupportManager = <UNK> ( getReactGateway ( ) <UNK> ( ) , `` mDevSupportManager <UNK> ) ; + if ( <UNK> ( devSupportManager , `` mRedBoxDialog <UNK> ) ! = null
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; */ public abstract class BaseReactActivity extends AppCompatActivity implements DefaultHardwareBackBtnHandler { + protected static final String KEY_ANIMATED = `` animated <UNK> ; + protected static final String KEY_BADGE = `` badge <UNK> ; + protected static final String KEY_HIDDEN = `` hidden <UNK> ; + protected static final String KEY_TAB_INDEX = `` tabIndex <UNK> ; + protected static final String KEY_TITLE = `` title <UNK> ; private static final String TAG = `` BaseReactActivity <UNK> ; private static final
# result : Fix reference
# expect : Fix boolean test
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class NavigationActivity extends AppCompatActivity implements DefaultHard public void run ( ) { <UNK> ( ) ; <UNK> ( ) ; + + Object devSupportManager = <UNK> ( getReactGateway ( ) <UNK> ( ) , `` mDevSupportManager <UNK> ) ; + if ( <UNK> ( devSupportManager , `` mRedBoxDialog <UNK> ) ! = null
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ } + ( void ) sendTabEvent : ( NSString * ) event controller : ( UIViewController* ) viewController body : ( NSDictionary* ) body { - if ( [ <UNK> isKindOfClass : [ RCTRootView class ] ] ) { - RCTRootView *rootView = ( RCTRootView * ) <UNK> ; + + UIView *theView = <UNK> ; + if ( [ viewController isKindOfClass : [ RCCViewController class ] ] ) { + RCCViewController *rccvc = ( RCCViewController * ) viewController ; +
# result : Merge branch <UNK> into refactorOptions
# expect : Fix bottomTabSelected events for iOS
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ -target <UNK> <UNK> <UNK> <UNK> <UNK> - # Package Files # <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> -/bin/ -/bin/ -/bin/ <UNK> <UNK> <UNK> +_site <UNK> <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + [ submodule `` patterns <UNK> ] + path = patterns + url = https : <UNK> + branch = master + [ submodule `` programming-principles <UNK> ] + path = programming-principles
# result : Updated code and added new <UNK>
# expect : Updated Code for all the important classes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class DbCustomerDao implements CustomerDao { Connection connection ; try { connection = getConnection ( ) ; - PreparedStatement statement = <UNK> ( `` SELECT * FROM CUSTOMERS <UNK> ) ; + PreparedStatement statement = <UNK> ( `` SELECT * FROM CUSTOMERS <UNK> ) ; //NOSONAR ResultSet resultSet = <UNK> ( ) ; return <UNK> ( new <UNK> < Customer > ( <UNK> , <UNK> ) {
# result : <UNK> show sent checkmark for outgoing calls
# expect : <UNK> SonarQube reports bugs
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + + # # Intent +Efficient cache result is a high-performance framework for saving cached <UNK> tries to solve the performance +problems of some algorithms in high concurrency situations . + ! [ UML ] ( <UNK> ) + + # # Explanation +It almost does not lock to complete the results cache and get the <UNK> the case of concurrency , +when need a result , the result is taken immediately if it has already been calculated
# result : add all missing
# expect : Try to fix the bug
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +target <UNK> <UNK> <UNK> <UNK> <UNK> + # Package Files # <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> +/bin/ +/bin/ +/bin/ <UNK> <UNK> <UNK> \ No newline at end of file diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + + # # Intent +Efficient cache result is a high-performance framework for saving cached <UNK> tries to solve the performance +problems of some algorithms
# result : add new pattern
# expect : code review
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +target <UNK> <UNK> <UNK> <UNK> <UNK> + # Package Files # <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> <UNK> +/bin/ +/bin/ +/bin/ <UNK> <UNK> <UNK> \ No newline at end of file diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + + # # Intent +Efficient cache result is a high-performance framework for saving cached <UNK> tries to solve the performance +problems of some algorithms
# result : add new pattern
# expect : Code Review
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public final class RGBLuminanceSource extends LuminanceSource { // In order to measure pure decoding speed , we convert the entire image to a greyscale array // up front , which is the same as the Y channel of the YUVLuminanceSource in the real app . - luminances = new byte [ width * height ] ; - for ( int y = 0 ; y < height ; y++ ) { - int offset = y * width ; - for
# result : Merge branch <UNK> of <UNK> into performance
# expect : Simplify conversion RGB -> luminance
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + + < LinearLayout xmlns : android= <UNK> http : <UNK> <UNK> + xmlns : tools= <UNK> http : <UNK> <UNK> + android : layout_width= <UNK> match_parent <UNK> + android : layout_height= <UNK> wrap_content <UNK> + android : gravity= <UNK> right <UNK> + android : orientation= <UNK> horizontal <UNK> + android : paddingTop= <UNK> <UNK> <UNK> + android : paddingLeft= <UNK> <UNK> <UNK> +
# result : Fix <UNK> resend all & verify button appearance
# expect : Re-enable resend button after a failed resend
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class MmsDatabase extends MessagingDatabase { } } - <UNK> ( ADDRESS ) ; + <UNK> ( ADDRESS , <UNK> ( ) <UNK> ( ) <UNK> ( ) ) ; long messageId = insertMediaMessage ( masterSecret , addresses , <UNK> ( ) , <UNK> ( ) , contentValues ) ; diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ;
# result : Check for identity key <UNK> too
# expect : Keep error state as long as there are errors
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + + < LinearLayout xmlns : android= <UNK> http : <UNK> <UNK> + xmlns : tools= <UNK> http : <UNK> <UNK> + android : layout_width= <UNK> match_parent <UNK> + android : layout_height= <UNK> wrap_content <UNK> + android : gravity= <UNK> right <UNK> + android : orientation= <UNK> horizontal <UNK> + android : paddingTop= <UNK> <UNK> <UNK> + android : paddingLeft= <UNK> <UNK> <UNK> +
# result : Fix <UNK> resend all & verify button appearance
# expect : Fix MediaPreviewActivity not showing image sender
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +package <UNK> ; + +import <UNK> ; + +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; + +public class OrderEnforcer < E > { + + private final E [ ] stages ; + private final Map < E , Integer > stageIndices ; + private final Map < E , List < Runnable > > actions ; + private final boolean [ ] completion ; + + public OrderEnforcer ( @ NonNull E
# result : Turned SingleUseBlobProvider into <UNK>
# expect : Added OrderEnforcer class to schedule ordered <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < menu xmlns : android= <UNK> http : <UNK> <UNK> > < item android : title= <UNK> @ string/conversation_button_context__menu_send_unencrypted <UNK> android : id= <UNK> @ +id/menu_context_send_unencrypted <UNK> / > + < item android : title= <UNK> @ string/conversation_button_context__menu_send_sms <UNK> + android : id= <UNK> @ +id/menu_context_send_sms <UNK> / > < /menu > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < string name= <UNK> preferences__allow_sms_fallback <UNK> > Erlaube Rückgriff auf
# result : - Fix <UNK> where push message is marked as sent without really sending
# expect : - force push option with control
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < meta-data android : name= <UNK> <UNK> <UNK> android : value= <UNK> @ integer/google_play_services_version <UNK> / > + < meta-data android : name= <UNK> <UNK> <UNK> + android : value= <UNK> GlideModule <UNK> / > + < activity android : name= <UNK> <UNK> <UNK> android : theme= <UNK> @ <UNK> <UNK> android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ dependencies { compile
# result : remove now-unused method in PartAuthority
# expect : refactor glide request code
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < meta-data android : name= <UNK> <UNK> <UNK> android : value= <UNK> @ integer/google_play_services_version <UNK> / > + < meta-data android : name= <UNK> <UNK> <UNK> + android : value= <UNK> GlideModule <UNK> / > + < activity android : name= <UNK> <UNK> <UNK> android : theme= <UNK> @ <UNK> <UNK> android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ dependencies { compile
# result : remove now-unused method in PartAuthority
# expect : use custom transform to avoid storing aspect ratio
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < meta-data android : name= <UNK> <UNK> <UNK> - android : value= <UNK> <UNK> <UNK> / > + android : value= <UNK> <UNK> <UNK> / > < meta-data android : name= <UNK> <UNK> <UNK> android : value= <UNK> @ integer/google_play_services_version <UNK> / > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : summary= <UNK> @ string/ApplicationPreferencesActivity_touch_to_make_signal_your_default_sms_app <UNK> / > < <UNK> - android : defaultValue= <UNK> false <UNK> +
# result : Merge remote-tracking branch <UNK>
# expect : Merge remote-tracking branch <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < meta-data android : name= <UNK> <UNK> <UNK> - android : value= <UNK> <UNK> <UNK> / > + android : value= <UNK> <UNK> <UNK> / > < meta-data android : name= <UNK> <UNK> <UNK> android : value= <UNK> @ integer/google_play_services_version <UNK> / > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : summary= <UNK> @ string/ApplicationPreferencesActivity_touch_to_make_signal_your_default_sms_app <UNK> / > < <UNK> - android : defaultValue= <UNK> false <UNK> +
# result : Merge remote-tracking branch <UNK>
# expect : Merge commit <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ApplicationContext extends MultiDexApplication implements Dependenc add ( `` <UNK> <UNK> ) ; // Samsung Galaxy <UNK> # <UNK> add ( `` Xperia SP <UNK> ) ; // Sony Xperia SP # <UNK> add ( `` Nexus <UNK> <UNK> ) ; // Nexus <UNK> + add ( `` ONE <UNK> <UNK> ) ; // OnePlus X } } ; Set < String > OPEN_SL_ES_BLACKLIST = new HashSet < String > ( ) { {
# result : Blacklist OnePlus X from hardware AEC
# expect : Blacklist OnePlus X from hardware AEC
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> Binary files <UNK> and /dev/null differ diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> Binary files <UNK> and /dev/null differ diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> Binary files <UNK> and /dev/null differ diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> Binary files <UNK> and /dev/null differ
# result : Remove unused icon
# expect : Remove unused icon
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class MmsDatabase extends MessagingDatabase { } } - <UNK> ( ADDRESS ) ; + <UNK> ( ADDRESS , <UNK> ( ) <UNK> ( ) <UNK> ( ) ) ; long messageId = insertMediaMessage ( masterSecret , addresses , <UNK> ( ) , <UNK> ( ) , contentValues ) ; diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ;
# result : Check for identity key <UNK> too
# expect : Check for identity key <UNK> too
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + + < LinearLayout xmlns : android= <UNK> http : <UNK> <UNK> + xmlns : tools= <UNK> http : <UNK> <UNK> + android : layout_width= <UNK> match_parent <UNK> + android : layout_height= <UNK> wrap_content <UNK> + android : gravity= <UNK> right <UNK> + android : orientation= <UNK> horizontal <UNK> + android : paddingTop= <UNK> <UNK> <UNK> + android : paddingLeft= <UNK> <UNK> <UNK> +
# result : Fix <UNK> resend all & verify button appearance
# expect : Fix <UNK> resend all & verify button appearance
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < menu xmlns : android= <UNK> http : <UNK> <UNK> > < item android : title= <UNK> @ string/conversation_button_context__menu_send_unencrypted <UNK> android : id= <UNK> @ +id/menu_context_send_unencrypted <UNK> / > + < item android : title= <UNK> @ string/conversation_button_context__menu_send_sms <UNK> + android : id= <UNK> @ +id/menu_context_send_sms <UNK> / > < /menu > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < ! -- conversation_button_context -- > < string name= <UNK>
# result : - <UNK> <UNK> forces a unencrypted sms - <UNK> Menu item to send a sms
# expect : - <UNK> <UNK> forces a unencrypted sms - <UNK> Menu item to send a sms
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ContactsDatabase { put ( LABEL_COLUMN , <UNK> ) ; } } ; - String excludeSelection = <UNK> + `` NOT IN ( `` + - `` SELECT <UNK> FROM raw_contacts , view_data data WHERE <UNK> = <UNK> AND `` + - `` <UNK> = ' <UNK> + CONTACT_MIMETYPE + `` ' ) <UNK> ; + String formattedNumber = `` REPLACE ( REPLACE ( REPLACE ( REPLACE ( <UNK> , ' ' , <UNK> ) , <UNK> ' , <UNK>
# result : update contact query
# expect : update contact query
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < TextView android : layout_width= <UNK> match_parent <UNK> android : layout_height= <UNK> wrap_content <UNK> style= <UNK> @ <UNK> <UNK> - android : text= <UNK> @ string/import_fragment__import_encrypted_backup <UNK> / > + android : text= <UNK> @ string/import_fragment__restore_encrypted_backup <UNK> / > < TextView android : layout_width= <UNK> match_parent <UNK> android : layout_height= <UNK> wrap_content <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < string name= <UNK> ConversationFragment_confirm_message_delete <UNK> > Confirm message
# result : Change <UNK> to <UNK>
# expect : Merge remote-tracking branch <UNK> into storage
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < activity android : name= <UNK> <UNK> <UNK> android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > + < activity + android : name= <UNK> <UNK> <UNK> + android : configChanges= <UNK> keyboardHidden|orientation|screenSize <UNK> + android : label= <UNK> @ string/preferences__contacts_title <UNK> + android : launchMode= <UNK> singleTop <UNK> > + < /activity > + < service android : enabled= <UNK> true <UNK> android : name= <UNK> <UNK> <UNK> / > < service android : enabled= <UNK> true <UNK> android : name=
# result : Add option to customize vibrate pattern
# expect : Add option to customize vibrate pattern
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + < LinearLayout android : layout_height= <UNK> wrap_content <UNK> + xmlns : android= <UNK> http : <UNK> <UNK> + android : id= <UNK> @ +id/CustomVibrateLinearLayout <UNK> + android : layout_width= <UNK> fill_parent <UNK> + android : orientation= <UNK> vertical <UNK> + android : paddingLeft= <UNK> <UNK> <UNK> + android : paddingRight= <UNK> <UNK> <UNK> > + < ScrollView + android : id= <UNK> @
# result : Fix formatting
# expect : Add setting migration
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < /intent-filter > < /activity > + < activity android : name= <UNK> <UNK> <UNK> + android : theme= <UNK> @ <UNK> <UNK> + android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > + + < activity android : name= <UNK> <UNK> <UNK> + android : theme= <UNK> @ <UNK> <UNK> + android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > + < activity android : name= <UNK> <UNK> <UNK> / > < service android : enabled= <UNK> true <UNK> android : name=
# result : Fix mute icon alignment and actionbar <UNK>
# expect : Fix mute icon alignment and actionbar <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < /intent-filter > < /activity > + < activity android : name= <UNK> <UNK> <UNK> + android : theme= <UNK> @ <UNK> <UNK> + android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > + + < activity android : name= <UNK> <UNK> <UNK> + android : theme= <UNK> @ <UNK> <UNK> + android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > + < activity android : name= <UNK> <UNK> <UNK> / > < service android : enabled= <UNK> true <UNK> android : name=
# result : Fix mute icon alignment and actionbar <UNK>
# expect : Fix title centering <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < /intent-filter > < /activity > + < activity android : name= <UNK> <UNK> <UNK> + android : theme= <UNK> @ <UNK> <UNK> + android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > + + < activity android : name= <UNK> <UNK> <UNK> + android : theme= <UNK> @ <UNK> <UNK> + android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > + < activity android : name= <UNK> <UNK> <UNK> / > < service android : enabled= <UNK> true <UNK> android : name=
# result : Fix mute icon alignment and actionbar <UNK>
# expect : Disable blocking for TS <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < /intent-filter > < /activity > + < activity android : name= <UNK> <UNK> <UNK> + android : theme= <UNK> @ <UNK> <UNK> + android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > + + < activity android : name= <UNK> <UNK> <UNK> + android : theme= <UNK> @ <UNK> <UNK> + android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > + < activity android : name= <UNK> <UNK> <UNK> / > < service android : enabled= <UNK> true <UNK> android : name=
# result : Fix mute icon alignment and actionbar <UNK>
# expect : No blocking for MMS groups <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : label= <UNK> @ string/AndroidManifest__media_preview <UNK> android : windowSoftInputMode= <UNK> stateHidden <UNK> android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > + + < activity android : name= <UNK> <UNK> <UNK> + android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > < activity android : name= <UNK> <UNK> <UNK> android : theme= <UNK> @ android : <UNK> <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ dependencies { } compile <UNK>
# result : Rebase onto AppCompat
# expect : Add reminder in muted threads
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + < LinearLayout xmlns : android= <UNK> http : <UNK> <UNK> + android : id= <UNK> @ +id/container <UNK> + android : layout_width= <UNK> wrap_content <UNK> + android : layout_height= <UNK> wrap_content <UNK> + android : orientation= <UNK> horizontal <UNK> > + + < ImageView android : id= <UNK> @ +id/message <UNK> + android : layout_width= <UNK> wrap_content <UNK> + android : layout_height= <UNK>
# result : Allow multi-copy with media <UNK>
# expect : Allow copying of text from media <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + < LinearLayout xmlns : android= <UNK> http : <UNK> <UNK> + android : id= <UNK> @ +id/container <UNK> + android : layout_width= <UNK> wrap_content <UNK> + android : layout_height= <UNK> wrap_content <UNK> + android : orientation= <UNK> horizontal <UNK> > + + < ImageView android : id= <UNK> @ +id/message <UNK> + android : layout_width= <UNK> wrap_content <UNK> + android : layout_height= <UNK>
# result : Allow multi-copy with media <UNK>
# expect : Only show copy if text is <UNK> remove newlines from copied <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : paddingBottom= <UNK> <UNK> <UNK> tools : text= <UNK> <UNK> mins <UNK> / > - < FrameLayout android : id= <UNK> @ +id/pending_indicator_stub <UNK> - android : layout_width= <UNK> wrap_content <UNK> - android : layout_height= <UNK> wrap_content <UNK> / > - - < ImageView android : id= <UNK> @ +id/sent_indicator <UNK> - android : layout_width= <UNK> wrap_content <UNK> - android : layout_height= <UNK> wrap_content <UNK> - android : layout_gravity= <UNK> center_vertical|end <UNK> - android : src= <UNK> @ <UNK> <UNK>
# result : Make sure the convo list gets updated on all changes
# expect : Add delivery status icons to the inbox
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > - < RelativeLayout xmlns : android= <UNK> http : <UNK> <UNK> android : layout_width= <UNK> match_parent <UNK> android : layout_height= <UNK> match_parent <UNK> android : background= <UNK> @ <UNK> <UNK> > - < <UNK> - android : id= <UNK> @ +id/image <UNK> - android : layout_width= <UNK> match_parent <UNK> - android : layout_height= <UNK> match_parent <UNK> - android : contentDescription= <UNK> @ string/media_preview_activity__image_content_description <UNK> / > + <
# result : Implement image draft <UNK> again
# expect : Fix memory leak
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and
# result : Add app icon
# expect : Fixed incompatibility that was introduced with <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < /LinearLayout > + + < ! -- displayed if message is longer than <UNK> -- > + < TextView android : id= <UNK> @ +id/conversation_item_message_too_long_indicator <UNK> + android : layout_width= <UNK> wrap_content <UNK> + android : layout_height= <UNK> wrap_content <UNK> + android : textAppearance= <UNK> ? android : attr/textAppearanceSmall <UNK> + android : layout_gravity= <UNK> right <UNK> + android : textColor= <UNK> ? conversation_sent_text_secondary_color <UNK> + android : visibility= <UNK> gone <UNK> + android : layout_marginRight= <UNK> <UNK> <UNK> +
# result : limit displayed message length to <UNK> <UNK>
# expect : limit displayed message length to <UNK> <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RedPhoneService extends Service implements CallStateListener , CallS } public void notifyBusy ( ) { - <UNK> ( `` RedPhoneService <UNK> , `` Got busy signal from responder ! `` ) ; + <UNK> ( TAG , `` Got busy signal from responder ! `` ) ; sendMessage ( <UNK> , getRecipient ( ) , null ) ; <UNK> ( ) ; @ @ <UNK> <UNK> @ @ public class RedPhoneService extends Service implements CallStateListener , CallS } public void
# result : fix redphone busy
# expect : fix redphone busy
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ConversationActivity extends PassphraseRequiredActionBarActivity @ Override public void onBackPressed ( ) { <UNK> ( TAG , `` onBackPressed ( ) <UNK> ) ; - if ( <UNK> ( ) ) <UNK> ( composeText ) ; - else <UNK> ( ) ; + if ( <UNK> ( ) ) { + <UNK> ( composeText ) ; + } else { + Intent it = new Intent ( this , <UNK> ) ; + finish ( ) ; + startActivity ( it
# result : <UNK> Fixed typos
# expect : Sending the user to the ConversationListActivity when he is in ConversationActivity
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : id= <UNK> @ +id/conversation_item <UNK> android : layout_width= <UNK> fill_parent <UNK> android : layout_height= <UNK> wrap_content <UNK> - android : paddingRight= <UNK> <UNK> <UNK> - android : orientation= <UNK> vertical <UNK> + android : orientation= <UNK> horizontal <UNK> android : background= <UNK> @ drawable/conversation_item_background <UNK> android : focusable= <UNK> true <UNK> android : nextFocusLeft= <UNK> @ +id/container <UNK> @ @ <UNK> <UNK> @ @ xmlns : tools= <UNK> http : <UNK> <UNK> xmlns : app= <UNK> http : <UNK>
# result : display message read status
# expect : apply workaround for Android <UNK> bug
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class AttachmentManager { } private static void selectMediaType ( Activity activity , String type , int requestCode ) { - Intent intent = new Intent ( <UNK> ) ; + final Intent intent ; + + if ( <UNK> > = <UNK> ) { + intent = new Intent (
# result : Use ACTION_OPEN_DOCUMENT for Android >= <UNK> Fixes <UNK>
# expect : Use ACTION_OPEN_DOCUMENT for Android >= <UNK> Fixes <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; + import <UNK> ; /** @ @ <UNK> <UNK> @ @ public class IncomingRinger { } public void start ( ) { - AudioManager audioManager = ( AudioManager ) <UNK> ( <UNK> ) ; + AudioManager audioManager = <UNK> ( context ) ; <UNK> ( new <UNK> ( ) { @ Override public void onAudioFocusChange ( int focusChange ) { } @ @ <UNK> <UNK> @ @ public class
# result : Failing unit tests for timeouts on HystrixCommands not causing thread interruptions
# expect : Reset audio mode & focus on incoming ringer stop
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class IncomingLollipopMmsConnection extends LollipopMmsConnection impleme <UNK> ( TAG , <UNK> ( ) + `` -byte response : `` ) ; // + <UNK> ( <UNK> ( ) ) ) ; - return ( RetrieveConf )
# result : Send m-notifyresp-ind <UNK> for retrieved MMS on Lollipop API
# expect : Send m-notifyresp-ind <UNK> for retrieved MMS on Lollipop API
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < uses-permission android : name= <UNK> <UNK> <UNK> / > < uses-permission android : name= <UNK> <UNK> <UNK> / > < uses-permission android : name= <UNK> <UNK> <UNK> / > + < uses-permission android : name= <UNK> <UNK> <UNK> / > < uses-permission android : name= <UNK> <UNK> <UNK> / > < permission android : name= <UNK> <UNK> <UNK> @ @ <UNK> <UNK> @ @ < activity android : name= <UNK> <UNK> <UNK> android : windowSoftInputMode= <UNK> stateUnchanged <UNK> android :
# result : delete temp encrypted file when draft media is replaced
# expect : encrypt files from direct camera capture
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ dependencies { compile <UNK> : <UNK> compile <UNK> : <UNK> compile <UNK> : <UNK> - compile ( <UNK> : <UNK> ' ) { + compile ( <UNK> : <UNK> ' ) { exclude module : <UNK> exclude module : <UNK> exclude module : <UNK> } compile <UNK> : <UNK> @ <UNK> - compile <UNK> : <UNK> + compile <UNK> : <UNK> compile <UNK> : <UNK> compile <UNK> : <UNK> compile <UNK> : <UNK> @ @ <UNK> <UNK> @ @ dependencyVerification {
# result : Merge branch <UNK> of <UNK>
# expect : updated <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : paddingBottom= <UNK> <UNK> <UNK> tools : text= <UNK> <UNK> mins <UNK> / > - < FrameLayout android : id= <UNK> @ +id/pending_indicator_stub <UNK> - android : layout_width= <UNK> wrap_content <UNK> - android : layout_height= <UNK> wrap_content <UNK> / > - - < ImageView android : id= <UNK> @ +id/sent_indicator <UNK> - android : layout_width= <UNK> wrap_content <UNK> - android : layout_height= <UNK> wrap_content <UNK> - android : layout_gravity= <UNK> center_vertical|end <UNK> - android : src= <UNK> @ <UNK> <UNK>
# result : Make sure the convo list gets updated on all changes
# expect : Rename the constant translation methods
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and
# result : Add app icon
# expect : Support for direct photo capture from <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : name= <UNK> <UNK> <UNK> android : layout_width= <UNK> match_parent <UNK> android
# result : Changed <UNK> <UNK> button to an option menu entry
# expect : - Removed <UNK> contact <UNK> from option menu - Added <UNK> to the attachment dialog to send a contact
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < meta-data android : name= <UNK> <UNK> <UNK> android : value= <UNK> @ integer/google_play_services_version <UNK> / > + < meta-data android : name= <UNK> <UNK> <UNK> + android : value= <UNK> GlideModule <UNK> / > + < activity android : name= <UNK> <UNK> <UNK> android : theme= <UNK> @ <UNK> <UNK> android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ dependencies { compile
# result : remove now-unused method in PartAuthority
# expect : refactor glide request code
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < string name= <UNK> RecipientPreferenceActivity_unblock <UNK> > Unblock < /string > < string name= <UNK> RecipientPreferenceActivity_enabled <UNK> > Enabled < /string > < string name= <UNK> RecipientPreferenceActivity_disabled <UNK> > Disabled < /string > + < string name= <UNK> RecipientPreferenceActivity_you_will_have_to_exchange_a_message_first <UNK> > You will have to exchange a message <UNK> < /string > < ! -- RedPhone -- > < string name= <UNK> RedPhone_answering <UNK> > Answering < /string > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++
# result : Disable verify button if no message was exchanged
# expect : Convert safety numbers to singular in constant
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : contentDescription= <UNK> @ string/conversation_item__secure_message_description <UNK> android : visibility= <UNK> gone <UNK> android : alpha= <UNK> <UNK> <UNK> - android : tint= <UNK> ? conversation_item_received_text_secondary_color <UNK> + android : tint= <UNK> <UNK> <UNK> android : tintMode= <UNK> multiply <UNK> tools : visibility= <UNK> visible <UNK> / > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : visibility= <UNK> gone <UNK> android : layout_gravity= <UNK> center_vertical|end <UNK> android :
# result : Change insecure indicator to red
# expect : Change Insecure icon to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < service android : enabled= <UNK> true <UNK> android : name= <UNK> <UNK> <UNK> / > < service android : enabled= <UNK> true <UNK> android : name= <UNK> <UNK> <UNK> / > < service android : enabled= <UNK> true <UNK> android : name= <UNK> <UNK> <UNK> / > + < service android : enabled= <UNK> true <UNK> android : name= <UNK> <UNK> <UNK> / > < service android : name= <UNK> <UNK> <UNK> android : permission= <UNK> <UNK> <UNK> diff --
# result : Transactional interface into <UNK>
# expect : Update copyright header and <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : contentDescription= <UNK> @ string/conversation_item__secure_message_description <UNK> android : visibility= <UNK> gone <UNK> android : alpha= <UNK> <UNK> <UNK> - android : tint= <UNK> ? conversation_item_received_text_secondary_color <UNK> + android : tint= <UNK> <UNK> <UNK> android : tintMode= <UNK> multiply <UNK> tools : visibility= <UNK> visible <UNK> / >
# result : Change insecure icon to <UNK>
# expect : Change insecure icon to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < string name= <UNK> ApplicationPreferencesActivity_touch_to_change_your_default_sms_app <UNK> > Touch to change your default SMS app < /string > < string name= <UNK> ApplicationPreferencesActivity_sms_disabled <UNK> > Incoming SMS Disabled < /string > < string name= <UNK> ApplicationPreferencesActivity_touch_to_make_textsecure_your_default_sms_app <UNK> > Touch to make TextSecure your default SMS app < /string > + < string name= <UNK> ApplicationPreferencesActivity_on <UNK> > on < /string > + < string name= <UNK> ApplicationPreferencesActivity_On <UNK> > On < /string > + < string name= <UNK> ApplicationPreferencesActivity_off <UNK> > off
# result : Disable verify button if no message was exchanged
# expect : refactor preferences into multiple PreferenceFragments
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + < selector xmlns : android= <UNK> http : <UNK> <UNK> > + < item android : state_enabled= <UNK> false <UNK> android : color= <UNK> # <UNK> <UNK> / > + < item android : color= <UNK> @ <UNK> <UNK> / > + < /selector > \ No newline at end of file diff -- git <UNK> <UNK> new file mode <UNK> index <UNK>
# result : use ProgressDialogAsyncTask instead of AsyncTask
# expect : <UNK> with a capital I
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + < selector xmlns : android= <UNK> http : <UNK> <UNK> > + < item android : state_enabled= <UNK> false <UNK> android : color= <UNK> @ <UNK> <UNK> / > + < item android : color= <UNK> @ <UNK> <UNK> / > + < /selector > \ No newline at end of file diff -- git <UNK> <UNK> new file mode <UNK> index <UNK>
# result : use ProgressDialogAsyncTask instead of AsyncTask
# expect : fix <UNK> indent
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class MmsSendHelper extends MmsCommunication { public static boolean hasNecessaryApnDetails ( Context context ) { try { ConnectivityManager connectivityManager = ( ConnectivityManager ) <UNK> ( <UNK> ) ; - String apn = <UNK> ( <UNK> ) <UNK> ( ) ; + NetworkInfo ni = <UNK> ( <UNK> ) ; + if ( ni == null ) {
# result : Fix outgoing group edit action marked as unread messages
# expect : <UNK> crashed at adding new <UNK> nexus <UNK> <UNK> without SIM
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android { defaultConfig { minSdkVersion <UNK> - targetSdkVersion <UNK> + targetSdkVersion <UNK> testInstrumentationRunner `` <UNK> <UNK> buildConfigField `` long <UNK> , `` BUILD_TIMESTAMP <UNK> , <UNK> ( ) + `` L <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK>
# result : categories and addPerson for single /and/ multi
# expect : gingerbread assets
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ContactsDatabase { Uri uri ; if ( ! <UNK> ( filter ) ) { - uri = <UNK> ( <UNK> , <UNK> ( filter ) ) ; + if ( <UNK> > = <UNK> ) { + uri = <UNK> ( <UNK> , <UNK> ( filter ) ) <UNK> ( ) <UNK> ( <UNK> , `` true <UNK> ) <UNK> ( ) ; + } else { + uri = <UNK> ( <UNK> , <UNK> ( filter ) )
# result : remove unnecessary whitespace
# expect : remove unnecessary whitespace
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ /** * Copyright ( C ) <UNK> Moxie Marlinpsike - * + * < p/ > * This program is free software : you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation , either version <UNK> of the License , or * ( at your option ) any later version . - * + * < p/ > * This program is distributed in the
# result : change scope of findContactName to private
# expect : fix code format and refactoring
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < uses-permission android : name= <UNK> <UNK> <UNK> / > < uses-permission android : name= <UNK> <UNK> <UNK> / > < uses-permission android : name= <UNK> <UNK> <UNK> / > + < uses-permission android : name= <UNK> <UNK> <UNK> / > < uses-permission android : name= <UNK> <UNK> <UNK> / > < permission android : name= <UNK> <UNK> <UNK> @ @ <UNK> <UNK> @ @ < activity android : name= <UNK> <UNK> <UNK> android : windowSoftInputMode= <UNK> stateUnchanged <UNK> android :
# result : delete temp encrypted file when draft media is replaced
# expect : Add camera preview to message composition
# source : diff -- git a/res/raw/disclaimer b/res/raw/disclaimer deleted file mode <UNK> index <UNK> -- - a/res/raw/disclaimer +++ /dev/null @ @ <UNK> <UNK> @ @ -Thank you for helping us test this BETA vesion of TextSecure . - -This is BETA software , please do not use it in situations where security is critical . - -Please report any problems at https : <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < string name= <UNK> preferences__conversation_length_limit <UNK> > Conversation length limit < /string > < string name= <UNK> preferences__trim_all_threads_now <UNK> >
# result : Moved Pebble functions to PebbleNotifier class and changed notification mechanism
# expect : Improve PebbleNotifier message retrieval and notification system
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; public class EmojiEditText extends AppCompatEditText { + private final Callback callback = new PostInvalidateCallback ( this ) ; + public EmojiEditText ( Context context ) { super ( context ) ; } @ @ <UNK> <UNK> @ @ public class EmojiEditText extends AppCompatEditText { final char [ ] chars = <UNK> ( codePoint ) ; final CharSequence text = <UNK> ( getContext ( ) ) <UNK>
# result : fixed <UNK> from tableName where id <UNK> from tableName wher id <UNK>
# expect : prevent early callback death
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < meta-data android : name= <UNK> <UNK> <UNK> android : resource= <UNK> @ drawable/icon <UNK> / > + < meta-data + android : name= <UNK> <UNK> <UNK> + android : resource= <UNK> @ xml/shortcuts <UNK> / > + < /activity-alias > < activity android : name= <UNK> <UNK> <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and
# result : Added my own <UNK> new strings and updated the <UNK>
# expect : New icon for create group shortcut
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class BitmapUtil { <UNK> ) ; final Resource < Bitmap > resource = <UNK> ( rough , <UNK> ( context ) <UNK> ( ) ) ; - final Resource < Bitmap > result = new FitCenter ( context ) <UNK> ( resource , width , height ) ; + final Resource < Bitmap > result =
# result : Use CheckedRow when creating a DynamicRealm <UNK>
# expect : Added alternative to failed <UNK> otherwise app becomes <UNK> This could be used by attacker to force use of less secure <UNK> and possibly other damage to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ConversationActivity extends PassphraseRequiredActionBarActivity private class QuickAttachmentToggleListener implements OnClickListener { @ Override public void onClick ( View v ) { - InputMethodManager input = ( InputMethodManager ) getSystemService ( <UNK> ) ; - <UNK> ( <UNK> ( ) , 0 ) ; - <UNK> ( ) ; - hideEmojiDrawer ( false ) ; - <UNK> ( ) ; + if ( ! <UNK> ( ) ) { + InputMethodManager input = ( InputMethodManager ) getSystemService ( <UNK> ) ; +
# result : <UNK> update convo items with group recipient data
# expect : when camera preview is <UNK> the preview toggle button will close the preview
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ
# result : Update <UNK>
# expect : launcher icon
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ
# result : add light theme to PassphrasePromptActivity
# expect : change lockscreen wm light
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK>
# result : change actionbar icon mdpi
# expect : Create icon_notification
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + < Button xmlns : android= <UNK> http : <UNK> <UNK> + android : layout_width= <UNK> match_parent <UNK> + android : layout_height= <UNK> wrap_content <UNK> + android : layout_gravity= <UNK> center <UNK> + android : background= <UNK> ? conversation_item_bubble_background <UNK> + android : textColor= <UNK> ? conversation_item_sent_text_primary_color <UNK> + android : text= <UNK> @ string/load_more_header__load_full_conversation <UNK> / > + diff -- git <UNK> <UNK>
# result : add unit for CursorRecyclerViewAdapter
# expect : only load partial conversation by default
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : padding= <UNK> <UNK> <UNK> / > < TextView + android : layout_width= <UNK> fill_parent <UNK> + android : layout_height= <UNK> wrap_content <UNK> + android : textAppearance= <UNK> ? android : attr/textAppearanceLarge <UNK> + android : paddingLeft= <UNK> <UNK> <UNK> + android : id= <UNK> @ +id/friend_verified <UNK> / > + + < TextView android : layout_width= <UNK> fill_parent <UNK> android : layout_height= <UNK> wrap_content <UNK> android : textAppearance= <UNK> ? android : attr/textAppearanceLarge <UNK> diff -- git <UNK> <UNK>
# result : Fixing typo
# expect : Adding contact name and number to what is verified
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> <UNK> bin/ -gen/ +gen/ \ No newline at end of file diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK>
# result : updated strings from latest transifex
# expect : adding in strings prefs
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < ! -- ReviewIdentitiesActivity -- > < string name= <UNK> ReviewIdentitiesActivity_unable_to_view_corrupted_identity_key_exclamation <UNK> > Unable to view corrupted identity key ! < /string > + < string name= <UNK> ReviewIdentitiesActivity_delete_identity_dialogtitle <UNK> > Delete identity ? < /string > + < string name= <UNK> ReviewIdentitiesActivity_delete_identity_are_you_sure_you_want_to_delete_this_identity_key <UNK> > Are you sure that you wish to permanently delete this identity key ? < /string > + < string name= <UNK> ReviewIdentitiesActivity_invalid_identity <UNK> > Invalid Identity ! < /string < ! -- SaveIdentityActivity -- > <
# result : Update <UNK>
# expect : Update <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class DatabaseFactory { private static final int INTRODUCED_CONVERSATION_LIST_THUMBNAILS_VERSION = <UNK> ; private static final int INTRODUCED_ARCHIVE_VERSION = <UNK> ; private static final int INTRODUCED_CONVERSATION_LIST_STATUS_VERSION = <UNK> ; - private static final int DATABASE_VERSION = <UNK> ; + private static final int MIGRATED_CONVERSATION_LIST_STATUS_VERSION = <UNK> ; + private static final int DATABASE_VERSION = <UNK> ; private static final String DATABASE_NAME = `` <UNK> <UNK> ; private static final Object lock = new Object ( ) ; @ @ <UNK> <UNK> @
# result : <UNK> no longer uses fontFamily <UNK> Sample updated to show new <UNK>
# expect : Do the migration in SQL
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < uses-permission android : name= <UNK> <UNK> <UNK> / > < uses-permission android : name= <UNK> <UNK> <UNK> / > < uses-permission android : name= <UNK> <UNK> <UNK> / > + < uses-permission android : name= <UNK> <UNK> <UNK> / > + < uses-permission android : name= <UNK> <UNK> <UNK> / > + < uses-permission android : name= <UNK> <UNK> <UNK> / > + < uses-permission android : name= <UNK> <UNK> <UNK> / > < permission android : name= <UNK> <UNK>
# result : Use a SyncAdapter to synchronize the directory <UNK> Android <UNK>
# expect : Use a SyncAdapter to synchronize the directory <UNK> Android <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + < layer-list xmlns : android= <UNK> http : <UNK> <UNK> > + < item android : drawable= <UNK> @ drawable/webrtc_control_background <UNK> / > + < item android : top= <UNK> <UNK> <UNK> + android : left= <UNK> <UNK> <UNK> + android : right= <UNK> <UNK> <UNK> + android : bottom= <UNK> <UNK> <UNK> + android : drawable= <UNK> @ drawable/quick_camera_rear <UNK> / >
# result : Russian translation
# expect : Add button to flip camera <UNK> vs <UNK> Fixes <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ConversationItem extends LinearLayout { <UNK> ( <UNK> , <UNK> ( ) ) ; <UNK> ( intent ) ; - } else if ( <UNK> ( ) ! = null ) { + } else { <UNK> builder = new <UNK> ( context ) ; <UNK> ( <UNK> ) ; <UNK> ( <UNK> ) ;
# result : Resize fast scroller when keyboard is shown
# expect : Revert thumbnail null check for non image media
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class PushDecryptJob extends ContextJob { if ( <UNK> ( ) & & ! <UNK> ( ) <UNK> ( ) ) { threadId = <UNK> ( masterSecret , <UNK> ( ) , body ) <UNK> ; } else { + if ( <UNK> ( ) <UNK> ( <UNK> ( context )
# result : Tint audio controls to be visible in dark theme
# expect : change the displayed direction of incoming <UNK> and suppress notifications
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> <UNK> bin/ -gen/ +gen/ \ No newline at end of file diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK>
# result : updated strings from latest transifex
# expect : udpated tx config for lang mapping
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + < LinearLayout xmlns : android= <UNK> http : <UNK> <UNK> + android : layout_width= <UNK> fill_parent <UNK> + android : layout_height= <UNK> wrap_content <UNK> + android : orientation= <UNK> vertical <UNK> + android : padding= <UNK> <UNK> <UNK> > + + < TextView android : id= <UNK> @ +id/description_text <UNK> + android : layout_width= <UNK> fill_parent <UNK> + android : layout_height= <UNK> wrap_content
# result : Russian translation
# expect : Russian translation
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class OutgoingRinger implements <UNK> , MediaPl <UNK> ( <UNK> ) ; <UNK> ( this ) ; <UNK> ( this ) ; + <UNK> ( loopEnabled ) ; String packageName = <UNK> ( ) ; Uri dataUri = <UNK> ( `` <UNK> : // <UNK> + packageName + `` / <UNK> + currentSoundID ) ; try { <UNK> ( context , dataUri ) ; + <UNK> ( ) ; } catch ( IllegalArgumentException | SecurityException | IllegalStateException | IOException e )
# result : fix OutgoingRinger crashes
# expect : fix OutgoingRinger crashes
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> Binary files <UNK> and /dev/null differ diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> Binary files <UNK> and /dev/null differ diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> Binary files <UNK> and /dev/null differ diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> Binary files <UNK> and /dev/null differ
# result : Remove unused icon
# expect : Remove unused icon
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : orientation= <UNK> vertical <UNK> android : padding= <UNK> <UNK> <UNK> > - < TextView android : id= <UNK> @ +id/description_text <UNK> + < <UNK> android : id= <UNK> @ +id/description_text <UNK> android : layout_width= <UNK> fill_parent <UNK> android : layout_height= <UNK> wrap_content <UNK> android :
# result : fixed issue with incorrect classname for bhobutton
# expect : one more <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> <UNK> bin/ -gen/ +gen/ \ No newline at end of file diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK>
# result : updated strings from latest transifex
# expect : updated localizations from transifex
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < meta-data android : name= <UNK> <UNK> <UNK> android : value= <UNK> GlideModule <UNK> / > + < meta-data android : name= <UNK> <UNK> <UNK> + android : resource= <UNK> @ xml/automotive_app_desc <UNK> / > + < activity android : name= <UNK> <UNK> <UNK> android : excludeFromRecents= <UNK> true <UNK> android : screenOrientation= <UNK> portrait <UNK> @ @ <UNK> <UNK> @ @ < /intent-filter > < /receiver > + < receiver android : name= <UNK> <UNK> <UNK> > + < intent-filter
# result : Merge branch <UNK> into android_auto
# expect : Adapt Android Auto Intents to upstream changes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < activity android : name= <UNK> <UNK> <UNK> > < intent-filter > < action android : name= <UNK> <UNK> <UNK> / > + < action android : name= <UNK> <UNK> <UNK> / > < category android : name= <UNK> <UNK> <UNK> / > + < category android : name= <UNK> <UNK> <UNK> / > < data android : scheme= <UNK> sms <UNK> / > < data android : scheme= <UNK> smsto <UNK> / > < data android : scheme= <UNK> mms
# result : add a space <UNK>
# expect : validate <UNK> no <UNK> recipients -> <UNK> style
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : orientation= <UNK> vertical <UNK> android : padding= <UNK> <UNK> <UNK> > - < TextView android : id= <UNK> @ +id/description_text <UNK> + < <UNK> android : id= <UNK> @ +id/description_text <UNK> android : layout_width= <UNK> fill_parent <UNK> android : layout_height= <UNK> wrap_content <UNK> android :
# result : fixed issue with incorrect classname for bhobutton
# expect : stringified <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> <UNK> bin/ -gen/ +gen/ \ No newline at end of file diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : orientation= <UNK> vertical <UNK> android : padding= <UNK> <UNK> <UNK> > - <
# result : Merge branch <UNK> of <UNK> into bho
# expect : Merge branch <UNK> of <UNK> into bho
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> <UNK> bin/ -gen/ +gen/ \ No newline at end of file diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK>
# result : updated strings from latest transifex
# expect : build stuff
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : label= <UNK> Access to TextSecure Secrets <UNK> android : protectionLevel= <UNK> signature <UNK> / > - < uses-permission android : name= <UNK> <UNK> <UNK> / > + < uses-permission android : name= <UNK> <UNK> <UNK> / > < uses-permission android : name= <UNK> <UNK> <UNK> / > < uses-permission android : name= <UNK> <UNK> <UNK> / > < uses-permission android : name= <UNK> <UNK> <UNK> @ @ <UNK> <UNK> @ @ android : label= <UNK> @ string/app_name <UNK> android
# result : revert <UNK> changes
# expect : move routing logic to all activities
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < string name= <UNK> preferences__pref_led_blink_title <UNK> > LED Blink Pattern < /string > < string name= <UNK> preferences__change_notification_blink_pattern <UNK> > Change notification LED blink pattern < /string > < string name= <UNK> preferences__pref_led_blink_dialogtitle <UNK> > Select LED Blink Pattern < /string > + < string name= <UNK> preferences__led_pattern_custom_title <UNK> > Set Custom LED Pattern < /string > + < string name= <UNK> preferences__led_pattern_set <UNK> > Custom LED blink pattern set ! < /string > < string name= <UNK> preferences__select_led_color <UNK> >
# result : Localize LedBlinkPattern preference dialog
# expect : Add Notifications Database
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < activity android : name= <UNK> <UNK> <UNK> android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > + < activity + android : name= <UNK> <UNK> <UNK> + android : configChanges= <UNK> keyboardHidden|orientation|screenSize <UNK> + android : label= <UNK> @ string/preferences__contacts_title <UNK> + android : launchMode= <UNK> singleTop <UNK> > + < /activity > + < activity + android : name= <UNK> <UNK> <UNK> + android : configChanges= <UNK> keyboardHidden|orientation|screenSize <UNK> + android : label= <UNK> @ string/preferences__contacts_title <UNK> + android :
# result : Remove empty string for AOSP
# expect : No need to for ConfigContacts to handle home key
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < /activity-alias > + < activity android : name= <UNK> <UNK> <UNK> + android : label= <UNK> @ string/AndroidManifeset_conversations_archive <UNK> + android : launchMode= <UNK> singleTask <UNK> + android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> + android : parentActivityName= <UNK> <UNK> <UNK> > + < meta-data + android : name= <UNK> <UNK> <UNK> + android : value= <UNK> <UNK> <UNK> / > + < /activity > + < activity android : name= <UNK> <UNK> <UNK> android : windowSoftInputMode= <UNK> stateUnchanged <UNK> android
# result : Fix batch unarchive snackbar text
# expect : Make the batch action unarchive when in the archive
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < /activity-alias > + < activity android : name= <UNK> <UNK> <UNK> + android : label= <UNK> @ string/AndroidManifeset_conversations_archive <UNK> + android : launchMode= <UNK> singleTask <UNK> + android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> + android : parentActivityName= <UNK> <UNK> <UNK> > + < meta-data + android : name= <UNK> <UNK> <UNK> + android : value= <UNK> <UNK> <UNK> / > + < /activity > + < activity android : name= <UNK> <UNK> <UNK> android : windowSoftInputMode= <UNK> stateUnchanged <UNK> android
# result : Fix batch unarchive snackbar text
# expect : Turn off swipe gestures when in batch selection mode
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : layout_width= <UNK> fill_parent <UNK> android : layout_height= <UNK> wrap_content <UNK> android : layout_marginBottom= <UNK> <UNK> <UNK> - android : text= <UNK> You have received a message from someone who supports TextSecure encrypted sessions . Would you like to initiate a key exchange so you can communicate securely ? `` / > + android : text= <UNK> @ string/you_have_received_a_message_from_someone_who_supports_textsecure <UNK> / > < LinearLayout android : layout_width= <UNK> fill_parent <UNK> android : layout_height= <UNK> wrap_content <UNK> @ @ <UNK> <UNK>
# result : extracted strings from java src and layout xml
# expect : extracted strings from java src and layout xml
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < /activity-alias > + < activity android : name= <UNK> <UNK> <UNK> + android : label= <UNK> @ string/AndroidManifeset_conversations_archive <UNK> + android : launchMode= <UNK> singleTask <UNK> + android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> + android : parentActivityName= <UNK> <UNK> <UNK> > + < meta-data + android : name= <UNK> <UNK> <UNK> + android : value= <UNK> <UNK> <UNK> / > + < /activity > + < activity android : name= <UNK> <UNK> <UNK> android : windowSoftInputMode= <UNK> stateUnchanged <UNK> android
# result : Fix batch unarchive snackbar text
# expect : Optionally show progress for long running operations
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ;
# result : Making the BloomFilter thread-safe & lock-free
# expect : add stable IDs to conversations
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ dependencyVerification { <UNK> : <UNK> ' , <UNK> : protobuf-java : <UNK> ' , <UNK> : <UNK> ' , - <UNK> : libphonenumber : <UNK> ' , + <UNK> : libphonenumber : <UNK> ' , <UNK> : <UNK> ' , ] } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ repositories { dependencies { compile <UNK> : <UNK> compile <UNK> : <UNK> - compile <UNK> : <UNK> + compile <UNK>
# result : new version of libphonenumber
# expect : canonical address db refactor
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : layout_gravity= <UNK> center_vertical <UNK> android : layout_weight= <UNK> <UNK> <UNK> android : visibility= <UNK> visible <UNK> + app : doc_titleColor= <UNK> ? conversation_item_received_text_primary_color <UNK> + app : doc_captionColor= <UNK> ? conversation_item_received_text_secondary_color <UNK> tools : visibility= <UNK> visible <UNK> / > < TextView android : id= <UNK> @ +id/date <UNK>
# result : Added outgoing MMS Preferencees
# expect : Fixed <UNK> Documents name not readable in dark theme
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class ConversationActivity extends PassphraseRequiredActionBarActivity <UNK> ( <UNK> ) <UNK> ( ) ; - OutgoingGroupMediaMessage outgoingMessage = new OutgoingGroupMediaMessage ( self , getRecipients ( ) , - context , null ) ; + OutgoingGroupMediaMessage outgoingMessage = new OutgoingGroupMediaMessage ( getRecipients ( ) , context , null ) ; <UNK> ( self
# result : Rename PartDatabase -> AttachmentDatabase
# expect : Refactor <UNK> to contain MMS/PDU madness to MMS code <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class SignalServiceNetworkAccess { put ( `` <UNK> <UNK> , new SignalServiceUrl [ ] { new SignalServiceUrl ( `` https : <UNK> <UNK> , APPSPOT_REFLECTOR_HOST , googleTrustStore ) , - baseAndroid } ) ; + baseAndroid } ) ; put ( `` <UNK> <UNK> , new SignalServiceUrl [ ] { new SignalServiceUrl ( `` https : <UNK> <UNK> , APPSPOT_REFLECTOR_HOST , @ @ <UNK> <UNK> @ @ public class SignalServiceNetworkAccess { put ( `` <UNK> <UNK> , new SignalServiceUrl [ ]
# result : Added Iran to domain fronting list
# expect : Added Iran to domain fronting list
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : layout_width= <UNK> fill_parent <UNK> android : layout_height= <UNK> wrap_content <UNK> android : layout_marginBottom= <UNK> <UNK> <UNK> - android : text= <UNK> You have received a message from someone who supports TextSecure encrypted sessions . Would you like to initiate a key exchange so you can
# result : added class to automate conversion of text views and edit texts with the bho <UNK> also added the TibConvert class to convert unicode entites when the time <UNK>
# expect : added class to automate conversion of text views and edit texts with the bho <UNK> also added the TibConvert class to convert unicode entites when the time <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> <UNK> bin/ -gen/ +gen/ \ No newline at end of file diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK>
# result : updated strings from latest transifex
# expect : removed unused view classes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : layout_width= <UNK> wrap_content <UNK> android : layout_height= <UNK> wrap_content <UNK> android : singleLine= <UNK> true <UNK> - android : ellipsize= <UNK> end <UNK> + android : ellipsize= <UNK> marquee <UNK> + android : marqueeRepeatLimit = <UNK> marquee_forever <UNK> + android : focusable= <UNK> true <UNK> + android : focusableInTouchMode= <UNK> true <UNK> + android : scrollHorizontally= <UNK> true <UNK> android : drawablePadding= <UNK> <UNK> <UNK> android : gravity= <UNK> center_vertical <UNK> android : layout_gravity= <UNK> center_vertical <UNK> diff --
# result : Revert <UNK> group name on incoming <UNK>
# expect : Revert <UNK> <UNK> group name on incoming <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class ConversationListActivity extends PassphraseRequiredActionBarActivit <UNK> ( this ) ; <UNK> ( this ) ; + + <UNK> ( searchAction , getText ( <UNK> ) ) ; } @ Override
# result : <UNK> check for local <UNK>
# expect : =Fixes <UNK> - Adding a long press icon description for the Search icon
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ConversationActivity extends PassphraseRequiredActionBarActivity } @ Override + public void setThreadId ( long threadId ) { + <UNK> = threadId ; + } + + @ Override public void onAttachmentChanged ( ) { initializeSecurity ( ) ; } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ConversationFragment extends ListFragment @ Override protected Void doInBackground ( MessageRecord <UNK> messageRecords ) { for ( MessageRecord messageRecord : messageRecords )
# result : <UNK> <UNK> now returns boolean <UNK> whether or not the thread was deleted by the <UNK> <UNK> <UNK> now returns boolean <UNK> whether or not deleting the message caused the message thread to be <UNK> <UNK> when deleting all messages in a thread ConversationFragment now <UNK> its own threadId along with the threadId of its parent activity ConversationActivity such that a <UNK> <UNK> state is <UNK>
# expect : moved listener notify and return false up into if block
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class CallAudioManager { } public void terminate ( ) { + <UNK> ( TAG , `` terminate <UNK> ) ; stop ( handle ) ; dispose ( handle ) ; } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ;
# result : synchronize run and terminate
# expect : remove class member variables
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class CameraView extends FrameLayout { super ( context , attrs , defStyle ) ; setBackgroundColor ( <UNK> ) ; - if ( isMultiCamera ( ) ) cameraId = <UNK> ; + if ( isMultiCamera ( ) ) cameraId = <UNK> ( context ) ; surface = new CameraSurfaceView ( getContext ( ) )
# result : PrimaryKey + Required annotation hotfix
# expect : let the quick camera remember front/back mode
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < string name= <UNK> preferences__change_your_passphrase <UNK> > Change your passphrase < /string > < string name= <UNK> preferences__enable_passphrase <UNK> > Enable passphrase < /string > < string name= <UNK> preferences__passphrase_summary <UNK> > Passphrase % s < /string > - < string name= <UNK> preferences__enable_lock_screen_for_messages <UNK> > Enable lock screen for messages < /string > + < string name= <UNK> preferences__lock_signal_and_message_notifications_with_a_passphrase <UNK> > Lock Signal and message notifications with a passphrase < /string > < string name= <UNK> preferences__screen_security <UNK> > Screen
# result : setting to disable notifications for new contacts
# expect : <UNK> Improve some strings in Privacy preferences
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> + * More precise controls for specifying under what conditions SMS/MMS messages are used . + * Fix for larger font sizes . + * Fix for using correct locale . + * Fix for getting a copy of outgoing messages sent to MMS groups . + * Allow for no LED notification light . + * Fix bug where push messages were <UNK> resending when connectivity returned in some situations . + +
# result : add <UNK> <UNK>
# expect : add <UNK> <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class ConversationListActivity extends PassphraseRequiredSherlockFragment } @ Override + protected void onNewIntent ( Intent intent ) { + <UNK> ( intent ) ; + setIntent ( intent ) ; + } + + @ Override public void onPostCreate ( Bundle bundle ) { <UNK> ( bundle ) ; <UNK> ( )
# result : Forgot a null <UNK>
# expect : Minor indentation <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : finishOnTaskLaunch= <UNK> true <UNK> / > < activity android : name= <UNK> <UNK> <UNK> - android : theme= <UNK> @ android : <UNK> <UNK> + android : theme= <UNK> @ <UNK> <UNK> android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > < activity android : name= <UNK> <UNK> <UNK> > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ dependencies { compile <UNK> : <UNK> compile <UNK> : <UNK> compile
# result : remove <UNK>
# expect : chain <UNK> methods
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : padding= <UNK> <UNK> <UNK> android : paddingRight= <UNK> 0dp <UNK> android : hint= <UNK> @ string/conversation_activity__type_message <UNK> - android : imeOptions= <UNK> actionSend|flagNoEnterAction <UNK> + android : imeOptions= <UNK> actionSend|flagNoEnterAction|flagNoExtractUi <UNK> android : inputType= <UNK> textShortMessage|textAutoCorrect|textCapSentences|textMultiLine <UNK> android : maxLength= <UNK> <UNK> <UNK> android : maxLines= <UNK> <UNK> <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : layout_height= <UNK> <UNK> <UNK> position= <UNK> bottom_right <UNK> android
# result : minor group and conversation ui fixes
# expect : Localize some group update strings
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; public class IncomingEncryptedPushMessage { + private static final String TAG = `` InEncryptedPushMessage <UNK> ; private static final int SUPPORTED_VERSION = <UNK> ; private static final int CIPHER_KEY_SIZE = <UNK> ; @ @ <UNK> <UNK> @ @ public class IncomingEncryptedPushMessage { } catch ( IllegalBlockSizeException e ) { throw new AssertionError ( e ) ; } catch ( BadPaddingException e ) { - <UNK> ( `` IncomingEncryptedPushMessage <UNK> , e ) ; + <UNK> (
# result : show when avatar is <UNK> more localizing
# expect : slight refactoring and avatar unset fixes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; public class IncomingEncryptedPushMessage { + private static final String TAG = `` InEncryptedPushMessage <UNK> ; private static final int SUPPORTED_VERSION = <UNK> ; private static final int CIPHER_KEY_SIZE = <UNK> ; @ @ <UNK> <UNK> @ @ public class IncomingEncryptedPushMessage { } catch ( IllegalBlockSizeException e ) { throw new AssertionError ( e ) ; } catch ( BadPaddingException e ) { - <UNK> ( `` IncomingEncryptedPushMessage <UNK> , e ) ; + <UNK> (
# result : show when avatar is <UNK> more localizing
# expect : prevent rapid tapping of update button
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < ! -- ThreadRecord -- > < string name= <UNK> ThreadRecord_left_the_group <UNK> > Left the group <UNK> < /string > - < string name= <UNK> TheadRecord_secure_session_ended <UNK> > Secure session <UNK> < /string > + < string name= <UNK> ThreadRecord_secure_session_ended <UNK> > Secure session <UNK> < /string > < string name= <UNK> ThreadRecord_draft <UNK> > Draft : < /string > + < string name= <UNK> ThreadRecord_sent <UNK> > You : < /string > < ! -- VerifyIdentityActivity -- > < string
# result : fixed indentation
# expect : Adding <UNK> " to conv list if last message is outgoing and fixing a typo
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ConversationAdapter extends CursorAdapter implements <UNK> public ConversationAdapter ( Context context , MasterSecret masterSecret , Handler failedIconClickHandler , boolean groupThread , boolean pushDestination ) { - super ( context , null , true ) ; + super ( context , null , 0 ) ; <UNK> = context ; <UNK> = masterSecret ; <UNK> = failedIconClickHandler ; @ @ <UNK> <UNK> @ @ public class ConversationAdapter extends CursorAdapter implements <UNK> } @ Override + public void changeCursor ( Cursor cursor
# result : use Loader when conversation is updated instead of requery
# expect : use Loader when conversation is updated instead of requery
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ApplicationContext extends MultiDexApplication implements Dependenc add ( `` <UNK> <UNK> ) ; // Samsung Galaxy <UNK> # <UNK> add ( `` Xperia SP <UNK> ) ; // Sony Xperia SP # <UNK> add ( `` Nexus <UNK> <UNK> ) ; // Nexus <UNK> + add ( `` ONE <UNK> <UNK> ) ; // OnePlus X } } ; Set < String > OPEN_SL_ES_BLACKLIST = new HashSet < String > ( ) { {
# result : Blacklist OnePlus X from hardware AEC
# expect : Blacklist OnePlus X from hardware AEC
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class AudioSlidePlayer implements SensorEventListener { private final @ NonNull AudioManager audioManager ; private final @ NonNull SensorManager sensorManager ; private final @ NonNull Sensor proximitySensor ; + private final @ NonNull WakeLock wakeLock ; private @ NonNull WeakReference < Listener > listener ; private @ Nullable MediaPlayerWrapper
# result : Disable screen during earpiece voice note playback
# expect : Disable screen during earpiece voice note playback
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : layout_weight= <UNK> <UNK> <UNK> android : orientation= <UNK> vertical <UNK> android : background= <UNK> ? conversation_background <UNK> + android : paddingTop= <UNK> ? attr/actionBarSize <UNK> android : gravity= <UNK> bottom <UNK> > < FrameLayout android : id= <UNK> @ +id/fragment_content <UNK>
# result : Support for quick reply from <UNK>
# expect : add padding to conversation activity to compensate for actionbar overlay mode
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : orientation= <UNK> vertical <UNK> android : gravity= <UNK> bottom <UNK> > + < LinearLayout + android : orientation= <UNK> horizontal <UNK> + android : layout_width= <UNK> match_parent <UNK> + android : layout_height= <UNK> wrap_content <UNK> + android : layout_gravity= <UNK> center_horizontal <UNK> + android : id= <UNK> @ +id/top_panel <UNK> + android : gravity= <UNK> center <UNK> > + + < Button + android : layout_width= <UNK> fill_parent <UNK> + android : layout_height= <UNK> wrap_content <UNK> + android :
# result : Added first changes to support updating recipients without recreating <UNK>
# expect : Revert <UNK> first changes to support updating recipients without recreating <UNK> This feature needs more time and another way of solving <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : name= <UNK> <UNK> <UNK> android : layout_width= <UNK> match_parent <UNK> android
# result : Changed <UNK> <UNK> button to an option menu entry
# expect : - Removed <UNK> contact <UNK> from option menu - Added <UNK> to the attachment dialog to send a contact
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ dependencies { compile <UNK> : <UNK> compile <UNK> : webrtc-android : <UNK> - compile `` <UNK> : <UNK> <UNK> + compile `` <UNK> : <UNK> <UNK> compile <UNK> : <UNK> compile <UNK> : <UNK> compile <UNK> : <UNK> @ @ <UNK> <UNK> @ @ dependencyVerification { <UNK> : libpastelog : <UNK> ' , <UNK> : <UNK> ' , <UNK> : <UNK> ' , - <UNK> : <UNK> ' , + <UNK> : ShortcutBadger : <UNK> ' , <UNK> : stickylistheaders :
# result : Update robolectricExample
# expect : Fix Unread Badger for Sony Launcher fixes <UNK> by using version <UNK> of ShortcutBadger
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ConversationActivity extends PassphraseRequiredActionBarActivity public static final String THREAD_ID_EXTRA = `` thread_id <UNK> ; public static final String DRAFT_TEXT_EXTRA = `` draft_text <UNK> ; public static final String DRAFT_IMAGE_EXTRA = `` draft_image <UNK> ; + public static final String DRAFT_GIF_EXTRA = `` draft_gif <UNK> ; public static final String DRAFT_AUDIO_EXTRA = `` draft_audio <UNK> ; public static final String DRAFT_VIDEO_EXTRA = `` draft_video <UNK> ; public static final String DISTRIBUTION_TYPE_EXTRA = `` distribution_type <UNK> ; @ @ <UNK> <UNK> @
# result : Periodically <UNK> the message <UNK> when GCM is disabled
# expect : fix external gif sharing
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + < FrameLayout xmlns : android= <UNK> http : <UNK> <UNK> + android : layout_width= <UNK> fill_parent <UNK> + android : layout_height= <UNK> wrap_content <UNK> > + + < CheckBox + android : id= <UNK> @ +id/checkbox <UNK> + style= <UNK> ? android : attr/textAppearanceMedium <UNK> + android : layout_width= <UNK> fill_parent <UNK> + android : layout_height= <UNK> wrap_content <UNK> + android : text=
# result : default preferences
# expect : Fix Outgoing MMS/SMS preference
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + < FrameLayout xmlns : android= <UNK> http : <UNK> <UNK> + android : layout_width= <UNK> fill_parent <UNK> + android : layout_height= <UNK> wrap_content <UNK> > + + < CheckBox + android : id= <UNK> @ +id/checkbox <UNK> + style= <UNK> ? android : attr/textAppearanceMedium <UNK> + android : layout_width= <UNK> fill_parent <UNK> + android : layout_height= <UNK> wrap_content <UNK> + android : text=
# result : default preferences
# expect : Merge remote-tracking branch <UNK> into outgoingMmsPreference
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> standalone= <UNK> no <UNK> ? > - < ! -- Generator : Adobe Illustrator <UNK> , SVG Export Plug-In . SVG Version : <UNK> Build 0 ) -- > - - < svg - xmlns : dc= <UNK> http : <UNK> <UNK> - xmlns : cc= <UNK> http : <UNK> # <UNK> - xmlns : rdf= <UNK> http : <UNK> # <UNK> - xmlns : svg=
# result : migrate AlertDialog to material-dialogs
# expect : update <UNK> otherwise install is failing on gingerbread devices with <UNK> LinearAlloc exceeded <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ The following steps should help you ( re ) build TextSecure from the command line . git clone https : <UNK> <UNK> . Make sure you have the [ Android SDK ] ( https : <UNK> ) installed somewhere on your system . <UNK> . Ensure the `` Android Support Repository <UNK> and `` Android SDK Build-tools <UNK> are installed from the Android SDK manager . <UNK> . Ensure that the following packages are installed from the Android SDK manager :
# result : add dependencies to <UNK>
# expect : remove version numbers
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < /intent-filter > < /activity > + < activity android : name= <UNK> <UNK> <UNK> + android : theme= <UNK> @ <UNK> <UNK> + android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > + + < activity android : name= <UNK> <UNK> <UNK> + android : theme= <UNK> @ <UNK> <UNK> + android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > + < activity android : name= <UNK> <UNK> <UNK> / > < service android : enabled= <UNK> true <UNK> android : name=
# result : Fix mute icon alignment and actionbar <UNK>
# expect : Fix mute icon alignment and actionbar <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < activity android : name= <UNK> <UNK> <UNK> android : configChanges= <UNK> touchscreen|keyboard|keyboardHidden|orientation|screenLayout|screenSize <UNK> / > + < activity + android : name= <UNK> <UNK> <UNK> + android : configChanges= <UNK> keyboardHidden|orientation|screenSize <UNK> + android : label= <UNK> @ string/preferences__contacts_title <UNK> + android : launchMode= <UNK> singleTop <UNK> > + < /activity > + < service android : enabled= <UNK> true <UNK> android : name= <UNK> <UNK> <UNK> / > < service android : enabled= <UNK> true <UNK> android : name=
# result : Add option to customize vibrate pattern
# expect : Add option to customize vibrate pattern
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < string name= <UNK> ApplicationMigrationService_import_in_progress <UNK> > Import in progress < /string > < string name= <UNK> ApplicationMigrationService_importing_text_messages <UNK> > Importing text messages < /string > < string name= <UNK> ApplicationMigrationService_import_complete <UNK> > Import complete < /string > - < string name= <UNK> ApplicationMigrationService_Signal_system_database_import_is_complete <UNK> > Signal system database import is <UNK> < /string > + < string name= <UNK> ApplicationMigrationService_system_database_import_is_complete <UNK> > System database import is <UNK> < /string > < ! -- KeyCachingService -- > < string name= <UNK>
# result : Improve the text
# expect : Clarify <UNK> import <UNK> notification text
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> import <UNK> import <UNK> import <UNK> +import <UNK> import <UNK> import <UNK> import <UNK> import <UNK> import <UNK> -class RuntimePermissionsElement ( e : TypeElement ) { +class RuntimePermissionsElement ( private val e : TypeElement ) { val typeName : TypeName = <UNK> ( <UNK> ( ) ) val ktTypeName = <UNK> ( ) <UNK> ( ) val typeVariables = <UNK> { <UNK> ( it ) } @ @ <UNK> <UNK> @ @ class RuntimePermissionsElement ( e : TypeElement )
# result : Fix test
# expect : Fix test
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ WEBSITE = https : <UNK> LICENCES = [ <UNK> ' ] # Plugin versions -GRADLE_PLUGIN_VERSION = <UNK> +GRADLE_PLUGIN_VERSION = <UNK> KOTLIN_VERSION = <UNK> BINTRAY_PLUGIN_VERSION = <UNK> CONFIG_PLUGIN_VERSION = <UNK> @ @ <UNK> <UNK> @ @ ROBOLECTRIC_VERSION = <UNK> COMMONS_IO_VERSION = <UNK> # Android configuration -COMPILE_SDK_VERSION = <UNK> -BUILD_TOOLS_VERSION = <UNK> -TARGET_SDK_VERSION = <UNK> +COMPILE_SDK_VERSION = <UNK> +BUILD_TOOLS_VERSION = <UNK> +TARGET_SDK_VERSION = <UNK> MIN_SDK_VERSION = <UNK> # Gradle parameters <UNK> = true <UNK> = -XX : <UNK> -XX : +CMSClassUnloadingEnabled -XX :
# result : reverted commenting out some publishing infrastructure
# expect : migrated to AndroidX
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : components : - tools - platform-tools - - <UNK> - - <UNK> + - <UNK> + - <UNK> - extra-google-google_play_services - <UNK> - extra-android-support diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ WEBSITE = https : <UNK> LICENCES = [ <UNK> ' ] # Plugin versions -GRADLE_PLUGIN_VERSION = <UNK> +GRADLE_PLUGIN_VERSION = <UNK> KOTLIN_VERSION = <UNK> BINTRAY_PLUGIN_VERSION = <UNK> CONFIG_PLUGIN_VERSION = <UNK> JFROG_PLUGIN_VERSION = <UNK> SUPPORT_LIBRARY_VERSION = <UNK> +ANDROIDX_LIBRARY_VERSION=
# result : updated <UNK> to platform <UNK>
# expect : updated <UNK> to platform <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : components : - tools - platform-tools - - <UNK> + - <UNK> - <UNK> - extra-google-google_play_services - <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ WEBSITE = https : <UNK> LICENCES = [ <UNK> ' ] # Plugin versions -GRADLE_PLUGIN_VERSION = <UNK> +GRADLE_PLUGIN_VERSION = <UNK> KOTLIN_VERSION = <UNK> BINTRAY_PLUGIN_VERSION = <UNK> CONFIG_PLUGIN_VERSION = <UNK> @ @ <UNK> <UNK> @ @ MOCKITO_VERSION = <UNK> POWERMOCK_VERSION = <UNK> COMPILE_TESTING_VERSION
# result : Move UAST-based Lint rules to dedicated package
# expect : Update Build Tools & Lint dependency versions
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ BINTRAY_PLUGIN_VERSION = <UNK> SUPPORT_LIBRARY_VERSION = <UNK> ANDROIDX_LIBRARY_VERSION= <UNK> JAVAPOET_VERSION = <UNK> -KOTLINPOET_VERSION = <UNK> +KOTLINPOET_VERSION = <UNK> JUNIT_VERSION = <UNK> MOCKITO_VERSION = <UNK> POWERMOCK_VERSION = <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinActivityProcessorUnit ( messager : Messager ) : KotlinBaseProcessorUnit ( override fun addShouldShowRequestPermissionRationaleCondition ( builder : <UNK> , permissionField : String , isPositiveCondition : Boolean ) { val condition = if ( isPositiveCondition ) `` <UNK>
# result : Temporal <UNK>
# expect : Fix compile <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ */ package <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import static <UNK> public abstract class AbstractSimpleOperatorBenchmark extends AbstractOperatorBenchmark { - protected static final JoinCompiler JOIN_COMPILER = new JoinCompiler ( ) ; + protected static final JoinCompiler JOIN_COMPILER = new JoinCompiler ( <UNK> ( ) , new FeaturesConfig ( ) )
# result : Use typeEquals for Slice types in JoinCompiler
# expect : Use IS NOT DISTINCT FROM for GROUP BY
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ */ package <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import static <UNK> public abstract class AbstractSimpleOperatorBenchmark extends AbstractOperatorBenchmark { - protected static final JoinCompiler JOIN_COMPILER = new JoinCompiler ( ) ; + protected static final JoinCompiler JOIN_COMPILER = new JoinCompiler ( <UNK> ( ) , new FeaturesConfig ( ) )
# result : Use typeEquals for Slice types in JoinCompiler
# expect : Add positionIsNotDistinctFromRow to SimplePagesHashStrategy
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import static <UNK> ; +import static <UNK> ; +import static <UNK> ; import static <UNK>
# result : Expressions with lambda arguments are not group expressions
# expect : Expressions with lambda arguments are not group expressions
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ExpressionAnalysis return <UNK> ( expression ) ; } - public Set < Expression > getColumnReferences ( ) + public boolean isColumnReference ( Expression node ) { - return columnReferences ; + return <UNK> ( node ) ; } public Set < InPredicate > getSubqueryInPredicates ( ) diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> ; import static <UNK> ; import static <UNK> ; import static
# result : Ensure type is known during analysis
# expect : Simplify trivial scope creation
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; -import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public final class ComparisonStatsCalculator { private ComparisonStatsCalculator ( ) { } - public static PlanNodeStatsEstimate comparisonExpressionToLiteralStats ( + public static Optional < PlanNodeStatsEstimate > comparisonExpressionToLiteralStats ( PlanNodeStatsEstimate inputStatistics , Optional < Symbol > symbol , SymbolStatsEstimate expressionStats , @ @ <UNK> <UNK> @ @ public final class ComparisonStatsCalculator return expressionToLiteralGreaterThan
# result : Propagate unknown expression stats filtering from leaf
# expect : Enforce calculated stats consistency
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/* + * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; + * you may not use this file except in compliance with the License . + * You may obtain a copy of the License at + * + * http : <UNK> + * + * Unless required by applicable law or agreed to in writing , software + * distributed under the License is distributed on an ``
# result : Add benchmark for map-to-map cast
# expect : <UNK> Construct proper literal for DECIMAL in <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class OperatorContext public void destroy ( ) { + // reset memory revocation listener so that OperatorContext does <UNK> hold any references to Driver instance + synchronized ( this ) { + memoryRevocationRequestListener = null ; + } + <UNK> ( ) ; if ( <UNK> ( ) ! = 0 ) {
# result : Print update types to stderr in batch mode
# expect : Reset memory revocation listener when OperatorContext is destroyed
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/* + * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; + * you may not use this file except in compliance with the License . + * You may obtain a copy of the License at + * + * http : <UNK> + * + *
# result : Add documentation for third party lib <UNK>
# expect : Implement forwarding access controls
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class HiveMetadata throw new TableNotFoundException ( <UNK> ( ) ) ; } + if ( ! <UNK> ( ) <UNK> ( ) <UNK> ( <UNK> ( ) ) ) { + throw new PrestoException ( NOT_SUPPORTED , `` Can not delete from non-managed Hive table <UNK> ) ; + } + if ( <UNK> ( ) <UNK> ( ) == 0 ) { - // only delete data for managed tables - if ( ! <UNK> ( ) <UNK> (
# result : Prevent deletion from non-managed Hive tables
# expect : Prevent deletion from non-managed Hive tables
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ as Hive . For example , converting the string `` <UNK> ' `` to a number , or converting the string `` <UNK> ' `` to a `` tinyint `` ( which has a maximum value of `` <UNK> `` ) . +Avro Schema Evolution + -- -- -- -- -- -- -- -- -- -- - + +Presto supports querying and manipulating Hive tables with Avro storage format which has the schema set +based on an Avro schema file/literal .
# result : Update error messages in Avro-Kafka support with proper capitalization
# expect : Add documentation for Avro schema evolution in Hive connector
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class BaseJdbcClient } @ Override - public List < JdbcColumnHandle > getColumns ( JdbcTableHandle tableHandle ) + public List < JdbcColumnHandle > getColumns ( ConnectorSession session , JdbcTableHandle tableHandle ) { try ( Connection connection = <UNK> ( ) ) { try ( ResultSet resultSet = getColumns ( tableHandle , <UNK> ( ) ) ) {
# result : Pass Session to <UNK>
# expect : Make <UNK> independent of JVM zone
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class ParquetHiveRecordCursor columns , useParquetColumnNames
# result : Add NestedFields into TableScanNode
# expect : Support Nested Schema Evolution in Parquet
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ExpressionAnalyzer private Type coerceToSingleType ( StackableAstVisitorContext < Context > context , Node node , String message , Expression first , Expression second ) { - Type firstType = null ; + Type firstType = UNKNOWN ; if ( first ! = null ) { firstType = process ( first , context ) ; } - Type secondType = null ; + Type secondType = UNKNOWN ; if ( second ! = null ) { secondType = process ( second
# result : Support for coercions to supertype for <UNK> <UNK> <UNK> CASE and IF expressions
# expect : Support for coercions to supertype for <UNK> <UNK> <UNK> CASE and IF expressions
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static <UNK> ; public class HiveMetadata @ @ <UNK> <UNK> @ @ public class HiveMetadata List < String > partitionedBy = getPartitionedBy
# result : Update Hive unit tests for table_type parameter
# expect : Add table_type Hive property for CTAS queries
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public abstract class AbstractTestHiveClient assertNull ( <UNK> ( index ) ) ; } else { - SqlTimestamp expected = new SqlTimestamp ( new DateTime ( <UNK> , <UNK> , <UNK> , <UNK> , <UNK> , <UNK> , <UNK> , timeZone ) <UNK> (
# result : Split TestDateTimeFunctions into variants based on isLegacyTimestamp
# expect : Add tests covering Time types representation
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public final class MapConstructor @ UsedByGeneratedCode public static Block createMap ( MapType mapType , MethodHandle keyEqual , MethodHandle keyHashCode , State state , Block keyBlock , Block valueBlock ) { + checkCondition ( <UNK> ( ) == <UNK> ( ) , INVALID_FUNCTION_ARGUMENT , `` Key and value arrays must be the same length <UNK> ) ; PageBuilder pageBuilder = <UNK> ( ) ; if ( <UNK> ( ) ) { <UNK> ( ) ; @ @ <UNK> <UNK> @ @ public
# result : Add FLOAT coercions
# expect : Close block builder before throwing
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class TransformCorrelatedScalarAggregationToJoin return <UNK> ( ) ; } - ScalarAggregationToJoinRewriter rewriter = new ScalarAggregationToJoinRewriter ( functionRegistry , <UNK> ( ) , <UNK> ( ) , <UNK> ( ) ) ; + ScalarSubqueryToJoinRewriter rewriter = new ScalarSubqueryToJoinRewriter ( functionRegistry , <UNK> ( ) , <UNK> ( ) ,
# result : Rename ScalarAggregationToJoinRewriter
# expect : Prepare sources and make join node in the same method
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public final class AverageAggregations private AverageAggregations ( ) { } @ InputFunction - public static void input ( LongAndDoubleState state , @ SqlType ( <UNK> ) long value ) + public static void bigintInput ( LongAndDoubleState state , @ SqlType ( <UNK> ) long value ) { <UNK> ( <UNK> ( ) + <UNK> ) ; <UNK> ( <UNK> ( ) + value ) ; } @ InputFunction - public static void input ( LongAndDoubleState state , @ SqlType ( <UNK>
# result : Add geometric_mean function support for interval types
# expect : Add avg function support for interval types
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class BenchmarkQueryRunner private final HttpClient httpClient ; private final List < URI > nodes ; private final JsonCodec < QueryResults > queryResultsCodec ; + private final JsonCodec < QuerySubmission > querySubmissionCodec ; private int failures ; @ @ <UNK> <UNK> @ @ public class BenchmarkQueryRunner <UNK> = debug ; <UNK>
# result : Support long prepared statements in QueryResults
# expect : Add tests for long prepared statements
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class <UNK> private void <UNK> ( @ Language ( `` SQL <UNK> ) String query ) { - String value = getOnlyElement ( computeActual ( query ) <UNK> ( ) ) ; + String value = ( String ) computeActual ( query ) <UNK> ( ) ; assertTrue ( <UNK> ( `` ( ? s : <UNK> ) CPU : . * , Input : . * , <UNK> ( ? s : . * ) <UNK> ) ,
# result : Fix <UNK>
# expect : Use <UNK> to retrieve scalar result
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public final class SystemSessionProperties public static final String ITERATIVE_OPTIMIZER = `` iterative_optimizer_enabled <UNK> ; public static final String ITERATIVE_OPTIMIZER_TIMEOUT = `` iterative_optimizer_timeout <UNK> ; public static final String EXCHANGE_COMPRESSION = `` exchange_compression <UNK> ; + public static final String LEGACY_TIMESTAMP = `` legacy_timestamp <UNK> ; public static final String ENABLE_INTERMEDIATE_AGGREGATIONS = `` enable_intermediate_aggregations <UNK> ; public static final String PUSH_AGGREGATION_THROUGH_JOIN = `` push_aggregation_through_join <UNK> ; public static final String PUSH_PARTIAL_AGGREGATION_THROUGH_JOIN = `` push_partial_aggregation_through_join <UNK> ; @ @ <UNK> <UNK> @ @
# result : Add config and session property <UNK>
# expect : Add config and session property <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public abstract class AbstractTestHiveClient assertNull ( <UNK> ( index ) ) ; } else { - SqlTimestamp expected = new SqlTimestamp ( new DateTime ( <UNK> , <UNK> , <UNK> , <UNK> , <UNK> , <UNK> , <UNK> , timeZone ) <UNK> (
# result : Split TestDateTimeFunctions into variants based on isLegacyTimestamp
# expect : Add new date time semantics to date time cast operators
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class HivePageSinkProvider private final NodeManager nodeManager ; private final EventClient eventClient ; private final HiveSessionProperties hiveSessionProperties ; + private final DateTimeZone storageTimeZone ; private final HiveWriterStats hiveWriterStats ; @ Inject @ @ <UNK> <UNK> @ @ public class HivePageSinkProvider <UNK> = requireNonNull ( typeManager , `` typeManager is null <UNK> ) ; <UNK> = <UNK> (
# result : Fix <UNK> to allow overallocated collections
# expect : Pass row count explicitly to MapBlock constructor
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ datasource : presto query-names : presto/tpcds/ $ { query } <UNK> runs : <UNK> prewarm-runs : <UNK> -before-execution : <UNK> +before-execution : <UNK> , <UNK> frequency : <UNK> database : hive <UNK> : <UNK> @ @ <UNK> <UNK> @ @ variables : <UNK> : query : <UNK> schema : $ { <UNK> } + join_reordering_strategy : ELIMINATE_CROSS_JOINS , COST_BASED + join_distribution_type : REPARTITIONED , AUTOMATIC <UNK> : query : <UNK> schema : $ { <UNK> } + join_reordering_strategy : ELIMINATE_CROSS_JOINS ,
# result : Add benchmark for ReorderJoins rule
# expect : Add ReorderJoins rule to pick the best join order
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class BenchmarkQueryRunner private StatementStats execute ( ClientSession session , String query , Consumer < QueryData > queryDataConsumer , Consumer < QueryError > queryErrorConsumer ) { // start query - try ( StatementClient client = new StatementClient ( okHttpClient , session , query )
# result : Add builder for TpchQueryRunner
# expect : Extract <UNK> method in TaskResource
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class PrestoPreparedStatement } @ Override + public void close ( ) + throws SQLException + { + <UNK> ( format ( `` DEALLOCATE PREPARE % s <UNK> , statementName ) ) ; + <UNK> ( ) ; + } + + @ Override public ResultSet executeQuery ( ) throws SQLException { diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import static <UNK> ; import static <UNK>
# result : Deallocate prepared statement on close
# expect : Deallocate prepared statement on close
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class ClientTypeSignature checkArgument ( ! <UNK> ( rawType ) <UNK> ( ) , `` Bad characters in rawType type : % s <UNK> , rawType ) ; checkArgument ( typeArguments ! = null , `` typeArguments is null <UNK> ) ; checkArgument ( literalArguments ! = null , `` literalArguments is
# result : Add mini-language to calculate return type parameter
# expect : Implement <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class QueryResults case DATE : case INTERVAL_YEAR_TO_MONTH : case INTERVAL_DAY_TO_SECOND : + case DECIMAL : return <UNK> ( value ) ; default : // for now we assume that only the explicit types above are passed diff -- git <UNK> <UNK> index
# result : Add decimal support in presto-orc
# expect : Extract common super type before binding literals
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < dependency > < groupId > <UNK> < /groupId > < artifactId > tpch < /artifactId > - < version > <UNK> < /version > + < version > <UNK> < /version > < /dependency > < dependency > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static <UNK>
# result : Pass BoundVariables instead of parameters list in SqlFunction#specialize
# expect : Explict declaration of long type parameter constraints for decimal functions
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < dependency > < groupId > <UNK> < /groupId > + < artifactId > presto-spi < /artifactId > + < /dependency > + + < dependency > + < groupId > <UNK> < /groupId > < artifactId > presto-parser < /artifactId > < /dependency > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK>
# result : Add SHOW CURRENT ROLES
# expect : Introduce ENABLED_ROLES view
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < dependency > < groupId > <UNK> < /groupId > + < artifactId > presto-spi < /artifactId > + < /dependency > + + < dependency > + < groupId > <UNK> < /groupId > < artifactId > presto-parser < /artifactId > < /dependency > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK>
# result : Add SHOW CURRENT ROLES
# expect : Product tests for SHOW ROLES
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < dependency > < groupId > <UNK> < /groupId > + < artifactId > presto-spi < /artifactId > + < /dependency > + + < dependency > + < groupId > <UNK> < /groupId > < artifactId > presto-parser < /artifactId > < /dependency > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK>
# result : Add SHOW CURRENT ROLES
# expect : Move parsePrivilege to MetastoreUtil
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < dependency > < groupId > <UNK> < /groupId > + < artifactId > presto-spi < /artifactId > + < /dependency > + + < dependency > + < groupId > <UNK> < /groupId > < artifactId > presto-parser < /artifactId > < /dependency > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK>
# result : Add SHOW CURRENT ROLES
# expect : Document role management
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class BasePickTableLayoutTest nationTableLayoutHandle = new TableLayoutHandle ( connectorId , <UNK> ( ) , - new TpchTableLayoutHandle ( ( TpchTableHandle ) <UNK> ( ) , <UNK> ( ) ) ) ; + new TpchTableLayoutHandle ( ( TpchTableHandle ) <UNK> ( ) , <UNK> ( ) ) ) ; } @ Test diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import
# result : Make predicate to always present in TpchRecordSet
# expect : Fix TPCH predicate pushdown when filtering column is pruned
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class JmxHistoricalData <UNK> ( lowerCaseTableName ) <UNK> ( row ) ; } - public synchronized List < List < Object > > getRows ( String tableName , List < Integer > selectedColumns ) + public synchronized List < List < Object > > getRows ( String objectName , List < Integer > selectedColumns ) { - String lowerCaseTableName = <UNK> ( ) ; - if ( ! <UNK> ( lowerCaseTableName ) ) { + String lowerCaseObjectName = <UNK> ( )
# result : Add support for wildcard patterns in JMX table name
# expect : Make JmxTableHandle support multiple objectNames
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class TestAnalyzer analyze ( `` SELECT * FROM ( VALUES array [ <UNK> , <UNK> ] ) a ( x ) FULL OUTER JOIN LATERAL ( VALUES x ) ON true <UNK> ) ; } - @ BeforeMethod ( alwaysRun = true ) + @ BeforeClass public void setup (
# result : Fix handling of DECIMAL literals with only integral or only fractional part
# expect : Speed up TestAnalyzer
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ Array Functions Sorts and returns the array `` x `` . The elements of `` x `` must be orderable . Null elements will be placed at the end of the returned array . <UNK> function : : array_sort ( array < T > , function < T , T , int > ) - > array < T > + + Sorts and returns the `` array `` based on the given comparator `` function `` . The comparator will
# result : Update <UNK> to snapshot version <UNK>
# expect : Add array_sort with lambda comparator
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; +import <UNK> ; +import static <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ import static <UNK> ; public class WebUiResource { @ GET - public Response redirectIndexHtml ( ) + public Response redirectIndexHtml ( + @ HeaderParam ( X_FORWARDED_PROTO ) String proto , + @ Context UriInfo uriInfo ) { +
# result : <UNK> removed unused <UNK> <UNK> corrected default value of <UNK>
# expect : Respect X-Forwarded-Proto header in / endpoint
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class KafkaMetadata <UNK> ( ) , <UNK> ( ) , getDataFormat ( <UNK> ( ) ) , - getDataFormat ( <UNK> ( ) ) ) ; + getDataFormat ( <UNK> ( ) ) , + <UNK> ( ) <UNK> ( KafkaTopicFieldGroup : <UNK> ) , + <UNK> ( ) <UNK> ( KafkaTopicFieldGroup
# result : Add TestingEnvironment
# expect : Add data schema to the decoder params
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class KafkaMetadata <UNK> ( ) , <UNK> ( ) , getDataFormat ( <UNK> ( ) ) , - getDataFormat ( <UNK> ( ) ) ) ; + getDataFormat ( <UNK> ( ) ) , + <UNK> ( ) <UNK> ( KafkaTopicFieldGroup : <UNK> ) , + <UNK> ( ) <UNK> ( KafkaTopicFieldGroup
# result : Add TestingEnvironment
# expect : Add Avro decoder to Redis
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ExpressionAnalyzer private Type handleResolvedField ( Expression node , ResolvedField resolvedField ) { - if ( scope ! = <UNK> ( ) ) { - throw new SemanticException ( NOT_SUPPORTED , node , `` Correlated queries not yet supported . Invalid column reference : ' % s ' <UNK> , node ) ; - } <UNK> ( node ) ; <UNK> ( node , <UNK> ( ) ) ; return <UNK> ( ) ; diff -- git <UNK> <UNK> index
# result : Use orders vs lineitem to make test pass faster
# expect : Make <UNK> output be more readable
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/* + * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; + * you may not use this file except in compliance with the License . + * You may obtain a copy of the License at + * + * http : <UNK> + * + * Unless required by applicable law or agreed to in writing , software + * distributed under the License is distributed on an ``
# result : Add benchmark for map-to-map cast
# expect : Introduce EnforceUniqueColumns plan node
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class BackgroundHiveSplitLoader } } else { - boolean splittable = isSplittable ( <UNK> ( ) , <UNK> ( <UNK> ( ) ) , <UNK> ( ) ) ; + boolean splittable = isSplittable ( <UNK> ( ) , + <UNK> ( <UNK> ( ) , session ) , + <UNK> ( ) ) ; CompletableFuture < ? > future = <UNK> ( createHiveSplits ( <UNK> ( ) , @ @ <UNK> <UNK> @ @ public class BackgroundHiveSplitLoader TupleDomain < HiveColumnHandle
# result : Cache <UNK> in <UNK>
# expect : Add AWS role as session property
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class PlanOptimizers new IterativeOptimizer ( stats , <UNK> ( + new RemoveRedundantIdentityProjections ( ) , new EvaluateZeroLimit ( ) , new PushLimitThroughProject ( ) , new MergeLimits ( ) , @ @ <UNK> <UNK> @ @ public class PlanOptimizers new ImplementBernoulliSampleAsFilter ( ) ) ) , new SimplifyExpressions ( metadata
# result : Add MergeAdjacentWindows rule to iterative optimizer
# expect : Add RemoveRedundantProjections rule
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class SymbolMapper { <UNK> < Symbol > symbols = <UNK> ( ) ; <UNK> < Symbol , SortOrder > orderings = <UNK> ( ) ; + Set < Symbol > seenCanonicals = new HashSet < > ( <UNK> ( ) <UNK> ( ) ) ; for ( Symbol symbol : <UNK> ( ) ) { Symbol canonical = map ( symbol ) ; - <UNK> ( canonical ) ; - <UNK> ( canonical , <UNK> ( ) <UNK> ( symbol
# result : Use static import for checkArgument
# expect : Fix ORDER BY with LIMIT expressions with same canonicals
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class EqualityInference // Current cost heuristic : // <UNK> ) Prefer fewer input symbols // <UNK> ) Prefer smaller expression trees - // <UNK> ) <UNK> ( ) - creates a stable consistent ordering ( extremely useful for unit testing ) + // <UNK> ) Sort the expressions alphabetically - creates a stable consistent ordering ( extremely useful for unit testing ) // TODO : be more precise in determining the cost of an expression return <UNK> ( ) <UNK>
# result : Add IdentityLinkedHashMap
# expect : Fix outdated comment in EqualityInference
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class EqualityInference // Current cost heuristic : // <UNK> ) Prefer fewer input symbols // <UNK> ) Prefer smaller expression trees - // <UNK> ) <UNK> ( ) - creates a stable consistent ordering ( extremely useful for unit testing ) + // <UNK> ) Sort the expressions alphabetically - creates a stable consistent ordering ( extremely useful for unit testing ) // TODO : be more precise in determining the cost of an expression return <UNK> ( ) <UNK>
# result : Add IdentityLinkedHashMap
# expect : Test that plan for TPC-H <UNK> is deterministic
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/* + * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; + * you may not use this file except in compliance with the License . + * You may obtain a copy of the License at + * + * http : <UNK> + * + * Unless required by applicable law or agreed to in writing , software + * distributed under the License is distributed on an ``
# result : Add benchmark for map-to-map cast
# expect : Add benchmark for JSON to array/map cast
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ -/* - * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; - * you may not use this file except in compliance with the License . - * You may obtain a copy of the License at - * - * http : <UNK> - * - * Unless required by applicable law or agreed to in writing , software - * distributed under the License is distributed on an ``
# result : Generalize expression extraction with predicates
# expect : Extract CommonPredicatesExpressionRewriter
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +package <UNK> ; + +import <UNK> ; +import <UNK> ; + +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; + +import static <UNK> ; +import static <UNK> ; + +/** + * Container for parameters of a JDBC connection . The class is also responsible for parsing Presto JDBC URL . + */ +final class ConnectionParameters + { + private static final String JDBC_URL_START =
# result : Introduce parameter in JDBC URL for connection via SSL
# expect : Add abstraction of parameters for JDBC connections
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class SubqueryPlanner <UNK> ( ) , subqueryNode , <UNK> ( <UNK> ( <UNK> ( ) ) ) , - <UNK> ) , + <UNK> , + query ) , <UNK> ( ) ) ; } @ @ <UNK> <UNK> @ @ class SubqueryPlanner root , subqueryNode , subqueryAssignments , - <UNK> ( <UNK> ( <UNK> ( ) ) ) ) , + <UNK> ( <UNK> ( <UNK> ( ) ) ) , + subquery ) , <UNK> ( ) ) ;
# result : Add originSubquery Node field to LateralJoinNode
# expect : Add originSubquery Node field to LateralJoinNode
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class QueryPlanner <UNK> ( ) , aggregations , groupingSymbols , + <UNK> ( ) , <UNK> , <UNK> ( ) , groupIdSymbol ) ; @ @ <UNK> <UNK> @ @ class QueryPlanner <UNK> ( ) , <UNK> ( ) , <UNK> ( <UNK> ( ) <UNK> ( ) ) , + <UNK> ( ) , <UNK> , <UNK> ( ) , <UNK> ( ) ) ) ; diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @
# result : Add AggregationNode#isStreamable
# expect : Preserve local properties of the probe when passing through a LEFT join
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public abstract class AbstractTestHiveClient assertNull ( <UNK> ( index ) ) ; } else { - SqlTimestamp expected = new SqlTimestamp ( new DateTime ( <UNK> , <UNK> , <UNK> , <UNK> , <UNK> , <UNK> , <UNK> , timeZone ) <UNK> (
# result : Split TestDateTimeFunctions into variants based on isLegacyTimestamp
# expect : Rename SqlTimestamp#millisUtc to millis
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public abstract class AbstractTestHiveClient assertNull ( <UNK> ( index ) ) ; } else { - SqlTimestamp expected = new SqlTimestamp ( new DateTime ( <UNK> , <UNK> , <UNK> , <UNK> , <UNK> , <UNK> , <UNK> , timeZone ) <UNK> (
# result : Split TestDateTimeFunctions into variants based on isLegacyTimestamp
# expect : Parse TIMESTAMP literal with parseTimestampLiteral
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/* + * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; + * you may not use this file except in compliance with the License . + * You may obtain a copy of the License at + * + * http : <UNK> + * + * Unless required by applicable law or agreed to in writing , software + * distributed under the License is distributed on an ``
# result : Add benchmark for map-to-map cast
# expect : Add basic test for dictionary aggregation
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/* + * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; + * you may not use this file except in compliance with the License . + * You may obtain a copy of the License at + * + * http : <UNK> + * + * Unless required by applicable law or agreed to in writing , software + * distributed under the License is distributed on an ``
# result : Add benchmark for map-to-map cast
# expect : Fix optimized parquet reader complex hive types processing
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; -import <UNK> ; -import <UNK> ; - import <UNK> ; import static <UNK> ; +import static <UNK> ; -public class CatalogSchemaTableName +public final class CatalogSchemaTableName { private final String catalogName ; private final SchemaTableName schemaTableName ; - @ JsonCreator - public static CatalogSchemaTableName valueOf ( String catalogSchemaTableName ) - { - checkNotEmpty ( catalogSchemaTableName , `` catalogSchemaTableName <UNK> ) ; - String [ ] parts = <UNK> ( `` \\ . `` ) ; - if ( <UNK>
# result : Fix test
# expect : Further cleanup CatalogSchemaTableName
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class HashAggregationBenchmark { OperatorFactory tableScanOperator = createTableScanOperator ( 0 , new PlanNodeId ( `` test <UNK> ) , `` orders <UNK> , `` orderstatus <UNK> , `` totalprice <UNK> ) ; List < Type > types = <UNK> ( <UNK> ( ) <UNK> ( 0 ) ) ; - HashAggregationOperatorFactory aggregationOperator = new HashAggregationOperatorFactory ( <UNK> , + HashAggregationOperatorFactory aggregationOperator = new HashAggregationOperatorFactory ( + <UNK> , new PlanNodeId ( `` test <UNK> ) , types , <UNK> ( 0
# result : Add <UNK> property <UNK>
# expect : Make Spiller Factory pluggable
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class MergeHashSort { } + /** + * Rows with same hash value are guaranteed to be in the same result page . + */ public static Iterator < Page > merge ( List < Type > keyTypes , List < Type > allTypes , List < Iterator < Page > > channels ) { List < Iterator < PagePosition > > channelIterators = <UNK> ( ) <UNK> ( SingleChannelPagePositions : <UNK> ) <UNK> ( toList ( ) ) ;
# result : Implement Spillable and Merging HashAggregationBuilders
# expect : Prepare InMemoryHashAggregationBuilder for spilling implementation
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class BenchmarkQueryRunner private StatementStats execute ( ClientSession session , String query , Consumer < QueryData > queryDataConsumer , Consumer < QueryError > queryErrorConsumer ) { // start query - try ( StatementClient client = new StatementClient ( okHttpClient , session , query )
# result : Add builder for TpchQueryRunner
# expect : Increase http client timeouts
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class BenchmarkQueryRunner private StatementStats execute ( ClientSession session , String query , Consumer < QueryData > queryDataConsumer , Consumer < QueryError > queryErrorConsumer ) { // start query - try ( StatementClient client = new StatementClient ( okHttpClient , session , query )
# result : Add builder for TpchQueryRunner
# expect : Implement server part of <UNK> protocol
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class BenchmarkQueryRunner private StatementStats execute ( ClientSession session , String query , Consumer < QueryData > queryDataConsumer , Consumer < QueryError > queryErrorConsumer ) { // start query - try ( StatementClient client = new StatementClient ( okHttpClient , session , query )
# result : Add builder for TpchQueryRunner
# expect : Add a flag to enable client <UNK> protocol on a server
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class BenchmarkQueryRunner private StatementStats execute ( ClientSession session , String query , Consumer < QueryData > queryDataConsumer , Consumer < QueryError > queryErrorConsumer ) { // start query - try ( StatementClient client = new StatementClient ( okHttpClient , session , query )
# result : Add builder for TpchQueryRunner
# expect : Add <UNK> to a factory
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class EffectivePredicateExtractor Expression underlyingPredicate = <UNK> ( ) <UNK> ( this , context ) ; - List < Expression > projectionEqualities = <UNK> ( ) <UNK> ( ) <UNK> ( ) + List < Expression > projectionEqualities = <UNK> ( ) <UNK> ( ) <UNK> ( ) <UNK> ( <UNK> ( ) ) <UNK> ( ENTRY_TO_EQUALITY ) <UNK> ( toImmutableList ( ) ) ; diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK>
# result : Add support for coercions in scalar subqueries
# expect : Add support for coercions in scalar subqueries
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class EffectivePredicateExtractor Expression underlyingPredicate = <UNK> ( ) <UNK> ( this , context ) ; - List < Expression > projectionEqualities = <UNK> ( ) <UNK> ( ) <UNK> ( ) + List < Expression > projectionEqualities = <UNK> ( ) <UNK> ( ) <UNK> ( ) <UNK> ( <UNK> ( ) ) <UNK> ( ENTRY_TO_EQUALITY ) <UNK> ( toImmutableList ( ) ) ; diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK>
# result : Add support for coercions in scalar subqueries
# expect : Additional tests that IN subquery is applied only once
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ The following truth table demonstrate the handling of `` NULL `` in `` IS DISTINCT FROM `` and `` IS NOT DISTINCT FROM `` : ======== ======== ========= ========= ============ ================ -a b a = a a < > b a DISTINCT b a NOT DISTINCT b +a b a = b a < > b a DISTINCT b a NOT DISTINCT b ======== ======== ========= ========= ============ ================ `` <UNK> `` `` <UNK> `` `` TRUE `` `` FALSE ``
# result : Add <UNK> to fix flaky test
# expect : Fix documentation error for comparison operators
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class PredicatePushDown @ Override public PlanNode visitMarkDistinct ( MarkDistinctNode node , RewriteContext < Expression > context ) { - checkState ( ! <UNK> ( <UNK> ( ) ) <UNK> ( <UNK> ( ) ) , `` predicate depends on marker symbol <UNK> ) ; - return <UNK> ( node , <UNK> ( ) ) ; + if ( ! <UNK> ( <UNK> ( ) ) <UNK> ( <UNK> ( ) ) ) { + return <UNK> ( node , <UNK>
# result : Support PredicatePushdown with distinct marker used in predicate
# expect : Support PredicatePushdown with distinct marker used in predicate
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public final class FailureFunction // We should <UNK> be using UNKNOWN as an explicit type . This will be fixed when we fix type inference @ Description ( `` Decodes json to an exception and throws it <UNK> ) - @ ScalarFunction ( hidden = true ) + @ ScalarFunction ( value = `` fail <UNK> , hidden = true ) @ SqlType ( `` unknown <UNK> ) - public static void fail ( @ SqlType ( <UNK> ) Slice failureInfoSlice
# result : Add utility fail scalar functions
# expect : Support correlated non aggregation scalar subqueries
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class HivePageSinkProvider private final NodeManager nodeManager ; private final EventClient eventClient ; private final HiveSessionProperties hiveSessionProperties ; + private final DateTimeZone storageTimeZone ; private final HiveWriterStats hiveWriterStats ; @ Inject @ @ <UNK> <UNK> @ @ public class HivePageSinkProvider <UNK> = requireNonNull ( typeManager , `` typeManager is null <UNK> ) ; <UNK> = <UNK> (
# result : Fix <UNK> to allow overallocated collections
# expect : Add support for ARRAY type in TimestampRewriter
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class EffectivePredicateExtractor Expression underlyingPredicate = <UNK> ( ) <UNK> ( this , context ) ; - List < Expression > projectionEqualities = <UNK> ( ) <UNK> ( ) <UNK> ( ) + List < Expression > projectionEqualities = <UNK> ( ) <UNK> ( ) <UNK> ( ) <UNK> ( <UNK> ( ) ) <UNK> ( ENTRY_TO_EQUALITY ) <UNK> ( toImmutableList ( ) ) ; diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK>
# result : Add support for coercions in scalar subqueries
# expect : Use PlanBuilder for subquery planning
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ */ package <UNK> ; +import <UNK> ; import <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class ShowSchemas @ Override public int hashCode ( ) { - return 0 ; + return <UNK> ( ) ; } @ Override @ @ <UNK> <UNK> @ @ public class ShowSchemas if ( this == obj ) { return true ; } - return ( obj ! = null ) & & ( getClass ( ) == <UNK> (
# result : Make sure currentConstraint uses available columns
# expect : Fix <UNK> <UNK> toString for ShowSchemas
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public final class FailureFunction // We should <UNK> be using UNKNOWN as an explicit type . This will be fixed when we fix type inference @ Description ( `` Decodes json to an exception and throws it <UNK> ) - @ ScalarFunction ( hidden = true ) + @ ScalarFunction ( value = `` fail <UNK> , hidden = true ) @ SqlType ( `` unknown <UNK> ) - public static void fail ( @ SqlType ( <UNK> ) Slice failureInfoSlice
# result : Add utility fail scalar functions
# expect : Add test for predicate push down through mark distinct
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/* + * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; + * you may not use this file except in compliance with the License . + * You may obtain a copy of the License at + * + * http : <UNK> + * + * Unless required by applicable law or agreed to in writing , software + * distributed under the License is distributed on an ``
# result : Add benchmark for map-to-map cast
# expect : Unqurantine TPCH passing queries
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class Analyzer Statement rewrittenStatement = <UNK> ( session , metadata , sqlParser , queryExplainer , statement , parameters , accessControl ) ; Analysis analysis = new Analysis ( rewrittenStatement , parameters , isDescribe ) ; StatementAnalyzer analyzer = new StatementAnalyzer ( analysis , metadata , sqlParser , accessControl , session ) ; - <UNK> ( rewrittenStatement , <UNK> ( ) ) ; + <UNK> ( rewrittenStatement , <UNK> ( ) ) ; return analysis ; } diff -- git <UNK>
# result : Add scope checkStates to StatementAnalyzer
# expect : Use Optional<Scope> as context in StatementAnalyzer
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class Analyzer Statement rewrittenStatement = <UNK> ( session , metadata , sqlParser , queryExplainer , statement , parameters , accessControl ) ; Analysis analysis = new Analysis ( rewrittenStatement , parameters , isDescribe ) ; StatementAnalyzer analyzer = new StatementAnalyzer ( analysis , metadata , sqlParser , accessControl , session ) ; - <UNK> ( rewrittenStatement , <UNK> ( ) ) ; + <UNK> ( rewrittenStatement , <UNK> ( ) ) ; return analysis ; } diff -- git <UNK>
# result : Add scope checkStates to StatementAnalyzer
# expect : Make QuerySpecification output scope use context scope as parent
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ class
# result : Move and rename verifyAggregations method to AggregationAnalyzer
# expect : Add ScopeReferenceExtractor
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public final class HiveWriteUtils } Path databasePath = new Path ( location ) ; - if ( ! pathExists ( user , hdfsEnvironment , databasePath ) ) { - throw new PrestoException ( HIVE_DATABASE_LOCATION_ERROR , format ( `` Database ' % s ' location does not exist : % s <UNK> , schemaName , databasePath ) ) ; - } - if ( ! isDirectory ( user , hdfsEnvironment , databasePath ) ) { - throw new PrestoException ( HIVE_DATABASE_LOCATION_ERROR ,
# result : Modified error message to subscript is <UNK> Fixed tests for array subscript <UNK>
# expect : Fix issue <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ Hive Security Configuration =========================== +Authorization +============= + +You can enable authorization checks for the : doc : ` /connector/hive ` by setting +the `` <UNK> `` property in the Hive catalog properties file . This +property must be one of the following values : + +================================================== ============================================================ +Property Value Description +================================================== ============================================================ + `` allow-all `` ( default value ) No authorization checks are enforced , thus allowing any + operation . + + `` read-only `` Operations that read data
# result : Fix GRANT and REVOKE documentation about PUBLIC role
# expect : Document <UNK> property
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import static <UNK> import static <UNK> ; import static <UNK> ; import static <UNK> ; -import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class FunctionRegistry <UNK> ( <UNK> ) <UNK> ( <UNK> ) <UNK> ( IDENTITY_CAST
# result : Add bigInt optimized implementation
# expect : Added equals comparision as well
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/* + * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; + * you may not use this file except in compliance with the License . + * You may obtain a copy of the License at + * + * http : <UNK> + * + * Unless required by applicable law or agreed to in writing , software + * distributed under the License is distributed on an ``
# result : Add benchmark for map-to-map cast
# expect : Introduce AssignUniqueId plan node
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/* + * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; + * you may not use this file except in compliance with the License . + * You may obtain a copy of the License at + * + * http : <UNK> + * + * Unless required by applicable law or agreed to in writing , software + * distributed under the License is distributed on an ``
# result : Add benchmark for map-to-map cast
# expect : Unqurantine TPCH passing queries
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class RelationPlanner <UNK> ( ) , <UNK> ( ) , <UNK> ( ) , + <UNK> ( ) , <UNK> ( ) ) ; if ( <UNK> ( ) ! = INNER ) { @ @ <UNK> <UNK> @ @ class RelationPlanner <UNK> ( ) , <UNK> ( rewrittenFilterCondition ) , <UNK> ( ) , + <UNK> ( ) , <UNK> ( ) ) ; } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @
# result : Add join method as a field to SemiJoinNode
# expect : Add join method as a field to JoinNode
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class AbstractAggregatedMemoryContext // are refactored , there will be only one implementation of this abstract class , and this class // can be removed . - protected abstract void updateBytes ( long bytes ) ; + protected abstract void updateBytes ( long bytes , boolean revocable ) ; public AggregatedMemoryContext newAggregatedMemoryContext ( ) { diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class AggregatedMemoryContext private final AbstractAggregatedMemoryContext
# result : Use isWaitingForSystemRevocableMemory in isBlocked
# expect : Revocable system memory in contexts
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ */ package <UNK> ; +import <UNK> ; + +import <UNK> ; + public interface CoercionPolicy { boolean canCoerce ( HiveType fromType , HiveType toType ) ; + + Function < Block , Block > createCoercer ( HiveType fromHiveType , HiveType toHiveType ) ; } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ */ package <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; diff --
# result : Implement coercion from decimal to float in hive connector
# expect : Implement coercion from decimal to double in hive connector
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/* + * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; + * you may not use this file except in compliance with the License . + * You may obtain a copy of the License at + * + * http : <UNK> + * + * Unless required by applicable law or agreed to in writing , software + * distributed under the License is distributed on an ``
# result : Add benchmark for map-to-map cast
# expect : Add EmptySplit to schedule leaf tasks with no data
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ node . You should ensure that the keytab files have the correct permissions on every node after distributing them . + + +Hive Data Stored in Amazon <UNK> +============================= + +The Hive Connector can read data from files stored in <UNK> , assuming the Hive +Metastore has tables defined as `` external <UNK> which have locations defined as <UNK> URIs . + +Presto registers its own <UNK> filesystem for the following URI schemes : + `` <UNK> : // `` ,
# result : Merge remote-tracking branch <UNK> into aws-kms-emp
# expect : <UNK> <UNK> -> <UNK> <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class QueryPlanner <UNK> ( ) , aggregations , groupingSymbols , + <UNK> ( ) , <UNK> , <UNK> ( ) , groupIdSymbol ) ; @ @ <UNK> <UNK> @ @ class QueryPlanner <UNK> ( ) , <UNK> ( ) , <UNK> ( <UNK> ( ) <UNK> ( ) ) , + <UNK> ( ) , <UNK> , <UNK> ( ) , <UNK> ( ) ) ) ; diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @
# result : Add AggregationNode#isStreamable
# expect : Add AggregationNode#isStreamable
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class SymbolAllocator symbols = new HashMap < > ( initial ) ; } + public Symbol newSymbol ( Symbol symbolHint ) + { + checkArgument ( <UNK> ( symbolHint ) , `` symbolHint not in symbols map <UNK> ) ; + return newSymbol ( <UNK> ( ) , <UNK> ( symbolHint ) )
# result : Tint audio controls to be visible in dark theme
# expect : Add <UNK> method that accepts a symbol
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class TestBingTileFunctions { assertFunction ( `` bing_tile_at ( <UNK> , <UNK> , <UNK> ) <UNK> , BING_TILE , <UNK> ( <UNK> , <UNK> , <UNK> ) ) ; assertFunction ( `` bing_tile_at ( 0 , <UNK> , <UNK> ) <UNK> , BING_TILE , <UNK> ( 0 , <UNK> , <UNK> ) ) ; - assertFunction ( `` bing_tile_at ( <UNK> , 0 , <UNK> ) <UNK> , BING_TILE , <UNK> ( <UNK> , 0 , <UNK> ) ) ; -
# result : Use proper DOUBLE literals in tests
# expect : Use proper DOUBLE literals in tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class Analysis private final IdentityLinkedHashMap < Table , Query > namedQueries = new IdentityLinkedHashMap < > ( ) ; private final IdentityLinkedHashMap < Node , Scope > scopes = new IdentityLinkedHashMap < > ( ) ; - private final Set < Expression > columnReferences = newSetFromMap ( new IdentityLinkedHashMap <
# result : Identify Field-s during analysis
# expect : Identify Field-s during analysis
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; +import <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; +import static <UNK> ; import
# result : Analyze <UNK> EXISTS with respect to aggregation
# expect : Test analysis of ORDER <UNK> <UNK> Subquery
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ */ package <UNK> ; +import <UNK> ; import <UNK> ; public abstract class DefaultTraversalVisitor < R , C > @ @ <UNK> <UNK> @ @ public abstract class DefaultTraversalVisitor < R , C > } @ Override - protected R visitSimpleGroupBy ( SimpleGroupBy node , C context ) - { - visitGroupingElement ( node , context ) ; - - for ( Expression expression : <UNK> ( ) ) { - process ( expression , context ) ; - } -
# result : Improve identity key scanning strings
# expect : Add missing default traversals
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public final class PrestoHeaders public static final String PRESTO_SESSION = `` X-Presto-Session <UNK> ; public static final String PRESTO_SET_SESSION = `` X-Presto-Set-Session <UNK> ; public static final String PRESTO_CLEAR_SESSION = `` X-Presto-Clear-Session <UNK> ; + public static final String PRESTO_PREPARED_STATEMENT = `` X-Presto-Prepared-Statement <UNK> ; + public static final String PRESTO_ADDED_PREPARE = `` X-Presto-Added-Prepare <UNK> ; public static final String PRESTO_TRANSACTION_ID = `` X-Presto-Transaction-Id <UNK> ; public static final String PRESTO_STARTED_TRANSACTION_ID = `` X-Presto-Started-Transaction-Id <UNK> ; public static final String PRESTO_CLEAR_TRANSACTION_ID
# result : Move <UNK> to presto-main
# expect : Implement PREPARE
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ class ColumnarBinaryHiveRecordCursor < K > private static final int SIZE_OF_INT = <UNK> ; private static final int SIZE_OF_LONG = <UNK> ; - private static final Set < HiveType > VALID_HIVE_STRING_TYPES = <UNK> ( <UNK> , <UNK> ) ; + private static final Set < PrimitiveCategory
# result : Ensure max length of varchar values in Parquet readers
# expect : Support <UNK> columns in Hive Connector
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ final class ExpressionVerifier } @ Override + protected Boolean visitTryExpression ( TryExpression actual , Expression expected ) + { + if ( ! ( expected instanceof TryExpression ) ) { + return false ; + } + + return process ( <UNK> ( ) , ( ( TryExpression ) expected ) <UNK> ( ) ) ; +
# result : Add support for TRY in compiled JoinFilterFunction
# expect : Do not throw when expression type is unexpected
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ */ package <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class ClientTypeSignature { private static final Pattern PATTERN = <UNK> ( `` <UNK> [ < > , ] . * <UNK> ) ; private final String rawType ; - private final List < ClientTypeSignature > typeArguments ; + private final List < ClientTypeSignatureParameter > typeArguments ; private final List < Object > literalArguments ; public ClientTypeSignature ( TypeSignature
# result : Generalized parametric types
# expect : Renamed metadata/TypeParameter to TypeParameterRequirement
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < /dependency > < dependency > + < groupId > <UNK> < /groupId > + < artifactId > hive-dwrf < /artifactId > + < version > <UNK> < /version > + < exclusions > + < exclusion > + < groupId > commons-logging < /groupId > + < artifactId > commons-logging < /artifactId > + < /exclusion > + < exclusion > + < groupId > <UNK> < /groupId > + < artifactId > snappy < /artifactId > + < /exclusion
# result : Add <UNK>
# expect : Make HiveRecordSink store uncompressed
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < /dependency > < dependency > + < groupId > <UNK> < /groupId > + < artifactId > hive-dwrf < /artifactId > + < version > <UNK> < /version > + < exclusions > + < exclusion > + < groupId > commons-logging < /groupId > + < artifactId > commons-logging < /artifactId > + < /exclusion > + < exclusion > + < groupId > <UNK> < /groupId > + < artifactId > snappy < /artifactId > + < /exclusion
# result : Add <UNK>
# expect : Add Hive write support for <UNK> date and timestamp
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class HdfsConfigurationUpdater { if ( resourcePaths ! = null ) { for ( String resourcePath : resourcePaths ) { - <UNK> ( new Path ( resourcePath ) ) ; + addResource ( config , new Path ( resourcePath ) ) ; } } @ @ <UNK> <UNK> @ @ public class HdfsConfigurationUpdater // no-op
# result : Fix <UNK> property behaviour
# expect : Refactor HiveHdfsConfiguration
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ node . You should ensure that the keytab files have the correct permissions on every node after distributing them . + + +Hive Data Stored in Amazon <UNK> +============================= + +The Hive Connector can read data from files stored in <UNK> , assuming the Hive +Metastore has tables defined as `` external <UNK> which have locations defined as <UNK> URIs . + +Presto registers its own <UNK> filesystem for the following URI schemes : + `` <UNK> : // `` ,
# result : Merge remote-tracking branch <UNK> into aws-kms-emp
# expect : Revert a merge artifact
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ */ package <UNK> ; +import <UNK> ; +import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class ExpressionExtractor } @ Override + public Void visitAggregation ( AggregationNode node , <UNK> < Expression > context ) + { + <UNK> ( ) <UNK> ( ) <UNK> ( ) + <UNK> ( aggregation - > <UNK> ( <UNK> ( ) ) ) ; + return <UNK> (
# result : Add missing plan nodes support to ExpressionExtractor
# expect : Add missing plan nodes support to DesugaringOptimizer
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ contents : The config file is specified in JSON format . * It contains the rules defining which catalog can be accessed by which user ( see Catalog Rules below ) . -* User extraction rules specifying what principals can identify as what users ( see Username Extraction below ) . +* The principal rules specifying what principals can identify as what users ( see Principal Rules below ) . -This plugin currently only supports catalog access control rules and username
# result : Fix unit tests
# expect : Extend the username extraction to principal user matching rules
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ String Functions Converts `` string `` to lowercase . <UNK> note : : - - This method does not perform perform locale-sensitive , context-sensitive , - or one-to-many mappings required for some languages . Specifically , this - will return incorrect results for Lithuanian , Turkish and Azeri . - <UNK> function : : ltrim ( string ) - > varchar Removes leading whitespace from `` string `` . diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++
# result : Fix SqlFormatter for VALUES
# expect : Fix typo
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ String Functions Converts `` string `` to lowercase . <UNK> note : : - - This method does not perform perform locale-sensitive , context-sensitive , - or one-to-many mappings required for some languages . Specifically , this - will return incorrect results for Lithuanian , Turkish and Azeri . - <UNK> function : : ltrim ( string ) - > varchar Removes leading whitespace from `` string `` . diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++
# result : Fix SqlFormatter for VALUES
# expect : Fix race condition in SHOW TABLES test
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < <UNK> > true < <UNK> > < <UNK> > false < <UNK> > - < <UNK> > <UNK> < <UNK> > + < <UNK> > <UNK> < <UNK> > < <UNK> > <UNK> < <UNK> > < <UNK> > $ { <UNK> } < <UNK> > < <UNK> > <UNK> < <UNK> > @ @ <UNK> <UNK> @ @ < /dependency > < dependency > - < groupId > <UNK> < /groupId > - < artifactId > <UNK> < /artifactId
# result : Add release notes for <UNK>
# expect : Add release notes for JDBC driver query stats
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < <UNK> > true < <UNK> > < <UNK> > false < <UNK> > - < <UNK> > <UNK> < <UNK> > + < <UNK> > <UNK> < <UNK> > < <UNK> > <UNK> < <UNK> > < <UNK> > $ { <UNK> } < <UNK> > < <UNK> > <UNK> < <UNK> > @ @ <UNK> <UNK> @ @ < /dependency > < dependency > - < groupId > <UNK> < /groupId > - < artifactId > <UNK> < /artifactId
# result : Add release notes for <UNK>
# expect : Add release notes for histogram function
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < /dependency > < dependency > + < groupId > <UNK> < /groupId > + < artifactId > hive-dwrf < /artifactId > + < version > <UNK> < /version > + < exclusions > + < exclusion > + < groupId > commons-logging < /groupId > + < artifactId > commons-logging < /artifactId > + < /exclusion > + < exclusion > + < groupId > <UNK> < /groupId > + < artifactId > snappy < /artifactId > + < /exclusion
# result : Add <UNK>
# expect : Add TupleDomain to HiveSplit
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < /dependency > < dependency > + < groupId > <UNK> < /groupId > + < artifactId > hive-dwrf < /artifactId > + < version > <UNK> < /version > + < exclusions > + < exclusion > + < groupId > commons-logging < /groupId > + < artifactId > commons-logging < /artifactId > + < /exclusion > + < exclusion > + < groupId > <UNK> < /groupId > + < artifactId > snappy < /artifactId > + < /exclusion
# result : Add <UNK>
# expect : Add support for lazy blocks
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ -XX : <UNK> -XX : +UseGCOverheadLimit -XX : +ExplicitGCInvokesConcurrent -- XX : +CMSClassUnloadingEnabled -- XX : +AggressiveOpts -XX : +HeapDumpOnOutOfMemoryError -XX : +ExitOnOutOfMemoryError -XX : <UNK>
# result : Remove AggressiveOpts JVM flag from product tests
# expect : Remove CMSClassUnloadingEnabled JVM flag for product tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ after_script : -- <UNK> ' \ -- <UNK> ' \ -- <UNK> ' \ + -- <UNK> ' \ -- <UNK> ' \ . /tmp/job_artifacts/ wget https : <UNK> $ { TRAVIS_JOB_ID } <UNK> ? deansi=true -O <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ services : image : <UNK> : $ { DOCKER_IMAGES_VERSION } ' volumes : - <UNK> : /docker/volumes/conf + - <UNK> : /docker/volumes/logs hadoop-master :
# result : If Signal <UNK> enabled for receiving <UNK> <UNK> allow sending SMS
# expect : Save the JVM error log from product tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class PickTableLayout private static boolean shouldRewriteTableLayout ( TableScanNode source ) { - return ! <UNK> ( ) <UNK> ( ) || <UNK> ( ) == <UNK> ; + return ! <UNK> ( ) <UNK> ( ) || <UNK> ( ) <UNK> ( ) ; } @ Override diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK>
# result : Use <UNK> in setText of SimpleDraweeSpanStringBuilder
# expect : Remove extra DUMMY_TABLE_LAYOUT_HANDLE variable
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public final class DoubleOperators if ( leftNull ) { return false ; } + if ( <UNK> ( left ) & & <UNK> ( right ) ) { + return false ; + } return notEqual ( left , right ) ; } } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public final class RealOperators if ( leftNull ) { return false ; } + float leftFloat = intBitsToFloat
# result : Fix NaN handling in distinct from operator for double and real
# expect : Fix NaN handling in distinct from operator for double and real
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class InputReferenceCompiler <UNK> = requireNonNull ( callSiteBinder , `` callSiteBinder is null <UNK> ) ; } - @ Override - public BytecodeNode visitInputReference ( InputReferenceExpression node , Scope scope ) + public static BytecodeNode generateInputReference ( CallSiteBinder callSiteBinder , Scope scope , Type type , BytecodeExpression block , BytecodeExpression position ) { - int field = <UNK> ( ) ; - Type type = <UNK> ( ) ; - - BytecodeExpression block = <UNK> ( scope , field ) ; -
# result : Extract generateInputReference from InputReferenceCompiler
# expect : Extract generateInputReference from InputReferenceCompiler
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < <UNK> > <UNK> < <UNK> > < <UNK> > <UNK> < <UNK> > < <UNK> > <UNK> < <UNK> > - < <UNK> > <UNK> < <UNK> > + < <UNK> > <UNK> < <UNK> > < <UNK> > <UNK> < <UNK> > < <UNK> > <UNK> < <UNK> > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> ; import static <UNK> ; import static <UNK>
# result : Add LongVariableConstraints
# expect : Support <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < <UNK> > <UNK> < <UNK> > < <UNK> > <UNK> < <UNK> > < <UNK> > <UNK> < <UNK> > - < <UNK> > <UNK> < <UNK> > + < <UNK> > <UNK> < <UNK> > < <UNK> > <UNK> < <UNK> > < <UNK> > <UNK> < <UNK> > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> ; import static <UNK> ; import static <UNK>
# result : Add LongVariableConstraints
# expect : Prevent read when <UNK> is used
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import static <UNK> import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class FunctionRegistry <UNK> ( <UNK> ) <UNK> ( <UNK> ) <UNK> ( <UNK>
# result : Customize MethodHandle for map-to-map cast during function specialization
# expect : Customize MethodHandle for map-to-map cast during function specialization
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ Property Name Description `` <UNK> `` The socket connect timeout `` <UNK> `` The socket timeout `` <UNK> `` Whether keep-alive is enabled on each socket + `` <UNK> `` Use TLS/SSL for connections to mongod/mongos `` <UNK> `` The read preference `` <UNK> `` The write concern `` <UNK> `` The required replica set name @ @ <UNK> <UNK> @ @ This flag controls the socket keep alive feature that keeps a connection alive t This property is optional ;
# result : 修改图片获取不到宽高的bug
# expect : Add <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public final class HiveWriteUtils public static void checkTableIsWritable ( Table table ) { + if ( ! <UNK> ( ) <UNK> ( <UNK> ( ) ) ) { + throw new PrestoException ( NOT_SUPPORTED , `` Can not write to non-managed Hive table
# result : Refactor TestTablePartitioningInsertInto
# expect : Prevent inserting into non-managed Hive tables
# source : diff -- git `` <UNK> <UNK> `` <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and `` <UNK> <UNK> differ diff -- git `` <UNK> <UNK> `` <UNK> <UNK> index <UNK> <UNK> -- - `` <UNK> <UNK> +++ `` <UNK> <UNK> @ @ <UNK> <UNK> @ @ SonicCacheInterceptor：sonic缓存数据的提供者，第三方可以提供自 SonicSessionConnection：sonic底层连接的提供者，通过SonicSessionConnection去获取服务器的回包数据。 -SonicSessionStream：为sonic提供数据流，SonicSessionStream会将已读取的网络数据和为读取的网络数据组合成一个桥接流，将这个桥接的数据提供给webview内核进行渲染。利用webview流式加载功能减少耗时。 +SonicSessionStream：为sonic提供数据流，SonicSessionStream会将已读取的网络数据和未读取的网络数据组合成一个桥接流，将这个桥接的数据提供给webview内核进行渲染。利用webview流式加载功能减少耗时。 SonicUtils：sonic工具类，主要负责sonic数据的模版分割，数据重组，diffdata计算等 diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ static bool ValidateSessionDelegate ( id < SonicSessionDelegate > aWebDelegate ) } if ( findSession ) { + <UNK> = nil ; [ findSession cancel ] ;
# result : Merge remote-tracking branch <UNK>
# expect : some fixes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class ChartData < T extends IDataSet < ? extends Entry > > { public Entry getEntryForHighlight ( Highlight highlight ) { if ( <UNK> ( ) > = <UNK> ( ) ) return null ; - else + else { + if ( <UNK> ( ) > 0 ) { + return <UNK> ( <UNK> ( ) ) <UNK> ( + <UNK> ( ) , <UNK> ( ) ) ; + } + return <UNK> ( <UNK> ( )
# result : Merge branch <UNK> of <UNK>
# expect : Issue <UNK> added the ability to select multiple items contained on a single x-index value in a <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class LineChartRenderer extends LineRadarRenderer { for ( int j = <UNK> ; j < = <UNK> + <UNK> ; j++ ) { Entry e = <UNK> ( j ) ; + if ( e == null ) continue ; + //skip NaNs + if ( <UNK> ( <UNK> ( ) ) ) continue ; + mLineBuffer [ 0 ] = <UNK> ( ) ; mLineBuffer [ <UNK> ] = <UNK> ( ) * phaseY ; @ @ <UNK> <UNK> @
# result : Fix for chart not being drawn if visible portion starts with a NaN
# expect : Merge remote-tracking branch <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ apply plugin : <UNK> android { compileSdkVersion <UNK> - buildToolsVersion <UNK> + buildToolsVersion <UNK> // resourcePrefix <UNK> defaultConfig { minSdkVersion <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class BarChart extends BarLineChartBase < BarData > implements BarDataProvid getXAxis ( ) <UNK> ( <UNK> ) ; } + public void reset ( ) { + init ( ) ; + } + @ Override protected void calcMinMax ( )
# result : Merge branch <UNK> of <UNK>
# expect : Enable reset for BarChart
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class LimitLine extends ComponentBase { /** enum that indicates the position of the LimitLine label */ public enum LimitLabelPosition { - LEFT_TOP , LEFT_BOTTOM , RIGHT_TOP , RIGHT_BOTTOM + LEFT_TOP , LEFT_BOTTOM , RIGHT_TOP , RIGHT_BOTTOM , CENTER_BOTTOM } /** diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class XAxisRenderer extends AxisRenderer { mLimitLineSegmentsBuffer [ 0 ] = position [ 0 ] ; mLimitLineSegmentsBuffer [ <UNK> ] =
# result : Render <UNK> as <UNK>
# expect : Added Option to Place Limit Line Label Beneath Line
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class LimitLine extends ComponentBase { /** enum that indicates the position of the LimitLine label */ public enum LimitLabelPosition { - LEFT_TOP , LEFT_BOTTOM , RIGHT_TOP , RIGHT_BOTTOM + LEFT_TOP , LEFT_BOTTOM , RIGHT_TOP , RIGHT_BOTTOM , CENTER_BOTTOM } /** diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class XAxisRenderer extends AxisRenderer { mLimitLineSegmentsBuffer [ 0 ] = position [ 0 ] ; mLimitLineSegmentsBuffer [ <UNK> ] =
# result : Render <UNK> as <UNK>
# expect : Small code formatting fix
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + < resources > + < color name= <UNK> <UNK> <UNK> > # 00ff00 < /color > + < color name= <UNK> <UNK> <UNK> > # <UNK> < /color > + < color name= <UNK> <UNK> <UNK> > # <UNK> < /color > + < color name= <UNK> <UNK> <UNK> > # <UNK> < /color > + < color name= <UNK> <UNK> <UNK> >
# result : Merge pull request <UNK> from doodeec/master
# expect : enable highlight <UNK> display even if values are hidden
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + < resources > + < color name= <UNK> <UNK> <UNK> > # 00ff00 < /color > + < color name= <UNK> <UNK> <UNK> > # <UNK> < /color > + < color name= <UNK> <UNK> <UNK> > # <UNK> < /color > + < color name= <UNK> <UNK> <UNK> > # <UNK> < /color > + < color name= <UNK> <UNK> <UNK> >
# result : Merge pull request <UNK> from doodeec/master
# expect : Merge pull request <UNK> from doodeec/master
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android { dependencies { compile `` <UNK> : <UNK> : $ { SUPPORT_LIBRARY_VERSION } <UNK> -// compile `` <UNK> : core : $ { PUBLISH_VERSION } <UNK> - compile project ( ' : core ' ) + compile `` <UNK> : core : $ { PUBLISH_VERSION } <UNK> +// compile project ( ' : core ' ) } apply from : <UNK> : <UNK> \ No newline at end of file
# result : Release <UNK>
# expect : Fix Issue <UNK> Failed to resolve <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class MDRootLayout extends ViewGroup { int stackedHeight = 0 ; isStacked = stacked ; - if ( stacked ) { - for ( MDButton button : buttons ) { - if ( button ! = null & & isVisible ( button ) ) { - <UNK> ( true , false ) ; - measureChild ( button , widthMeasureSpec , heightMeasureSpec ) ; - stackedHeight += <UNK> ( ) ; - hasButtons = true ; - } + for ( MDButton
# result : Fixed crash caused by async operation
# expect : Partial fix for <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ class DialogInit { <UNK> = <UNK> ( <UNK> ) ; <UNK> = ( TextView ) <UNK> ( <UNK> ) ; <UNK> = ( ListView ) <UNK> ( <UNK> ) ; + <UNK> = ( CheckBox ) <UNK> ( <UNK> ) ; // Button views initially used by checkIfStackingNeeded ( ) <UNK>
# result : Commit missing <UNK>
# expect : Update gradle version & fixed typo
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < include layout= <UNK> @ layout/md_stub_actionbuttons <UNK> / > - < <UNK> > \ No newline at end of file + < <UNK> >
# result : Resolved issue <UNK>
# expect : Resolved <UNK> RTL checkbox prompt fix
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class LottieSnapshotProvider extends SnapshotProvider { onError ( e ) ; } testFrameBoundary ( ) ; + <UNK> ( ) ; testScaleTypes ( ) ; testDynamicProperties ( ) ; } @ @ <UNK> <UNK> @ @ public class LottieSnapshotProvider extends SnapshotProvider { recordSnapshot ( animationView , <UNK> , `` android <UNK> , `` Frame Boundary <UNK> , `` Frame <UNK> Green <UNK> , params ) ; } + private void <UNK> ( ) { + LottieAnimationView animationView = new LottieAnimationView (
# result : Cleaned up animated value vs animated fraction
# expect : More cleanup
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; } <UNK> = animationName ; - <UNK> ( ) ; + <UNK> ( ) ; cancelLoaderTask ( ) ; compositionLoader = <UNK> ( getContext ( ) , animationName , new OnCompositionLoadedListener ( ) { @ @ <UNK> <UNK> @ @ import <UNK> ; return <UNK> ( ) ; } - public void addAnimatorUpdateListener ( <UNK> updateListener ) { - <UNK> ( updateListener ) ; - } - - public void removeUpdateListener ( <UNK> updateListener ) { - <UNK>
# result : Cleaned up docs
# expect : [WIP] Animator overhaul
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class LottieDrawable extends Drawable implements <UNK> , Anima } ) ; return ; } - setMinFrame ( ( int ) <UNK> ( minProgress , <UNK> ( ) , <UNK> ( ) ) ) ; + setMinFrame ( ( int ) <UNK> ( <UNK> ( ) , <UNK> ( ) , minProgress ) ) ; } /** @ @ <UNK> <UNK> @ @ public class LottieDrawable extends Drawable implements <UNK> , Anima } ) ; return ; } - setMaxFrame (
# result : Make ImageAssetManager thread safe
# expect : Fixed min/max progress
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class LottieSnapshotProvider extends SnapshotProvider { onError ( e ) ; } testFrameBoundary ( ) ; + <UNK> ( ) ; testScaleTypes ( ) ; testDynamicProperties ( ) ; } @ @ <UNK> <UNK> @ @ public class LottieSnapshotProvider extends SnapshotProvider { recordSnapshot ( animationView , <UNK> , `` android <UNK> , `` Frame Boundary <UNK> , `` Frame <UNK> Green <UNK> , params ) ; } + private void <UNK> ( ) { + LottieAnimationView animationView = new LottieAnimationView (
# result : Cleaned up animated value vs animated fraction
# expect : Reimplemented LottieValueAnimator
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class LottieSnapshotProvider extends SnapshotProvider { onError ( e ) ; } testFrameBoundary ( ) ; + <UNK> ( ) ; testScaleTypes ( ) ; testDynamicProperties ( ) ; } @ @ <UNK> <UNK> @ @ public class LottieSnapshotProvider extends SnapshotProvider { recordSnapshot ( animationView , <UNK> , `` android <UNK> , `` Frame Boundary <UNK> , `` Frame <UNK> Green <UNK> , params ) ; } + private void <UNK> ( ) { + LottieAnimationView animationView = new LottieAnimationView (
# result : Cleaned up animated value vs animated fraction
# expect : Reimplemented LottieValueAnimator
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public abstract class BaseLayer <UNK> ( ) ; } + @ SuppressLint ( `` <UNK> <UNK> ) + private void <UNK> ( Canvas canvas , RectF rect , Paint paint ) { + if ( <UNK> < <UNK> ) { + // This method was deprecated in API level <UNK> and
# result : Replace distributed_join with join_distribution_type session property
# expect : Using new variant of <UNK> API on Android M and <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class LottieSnapshotProvider extends SnapshotProvider { testDynamicProperties ( ) ; testSwitchingToDrawableAndBack ( ) ; testStartEndFrameWithStartEndProgress ( ) ; + testUrl ( ) ; } private void snapshotAssets ( String [ ] animations ) { @ @ <UNK> <UNK> @ @ public class LottieSnapshotProvider extends SnapshotProvider { } + private void testUrl ( ) { + LottieComposition composition = <UNK> ( context , `` https : <UNK> <UNK> ) <UNK> ( ) ; + drawComposition ( composition , `` GiftBox from LottieFiles
# result : More cleanup and added test
# expect : Addressed comments
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class LottieSnapshotProvider extends SnapshotProvider { testDynamicProperties ( ) ; testSwitchingToDrawableAndBack ( ) ; testStartEndFrameWithStartEndProgress ( ) ; + testUrl ( ) ; } private void snapshotAssets ( String [ ] animations ) { @ @ <UNK> <UNK> @ @ public class LottieSnapshotProvider extends SnapshotProvider { } + private void testUrl ( ) { + LottieComposition composition = <UNK> ( context , `` https : <UNK> <UNK> ) <UNK> ( ) ; + drawComposition ( composition , `` GiftBox from LottieFiles
# result : More cleanup and added test
# expect : Merge remote-tracking branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class AnimationLinearLayout extends LinearLayout { } } + void setTextDelegate ( TextDelegate textDelegate ) { + for ( int i = getChildCount ( ) - <UNK> ; i > = 0 ; i -- ) { + View child = getChildAt ( i ) ; + if ( ! ( child instanceof LottieAnimationView ) ) { + continue ; + } + (
# result : Added a test
# expect : Added a test
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; -import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import
# result : Fixed gradient fill color array size
# expect : Fix path keyframe cp order
# source : diff -- git <UNK> @ <UNK> <UNK> @ <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> @ <UNK> differ diff -- git <UNK> centerCrop @ <UNK> <UNK> centerCrop @ <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> centerCrop @ <UNK> differ diff -- git <UNK> <UNK> <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> <UNK> differ diff -- git <UNK> centerInside @ <UNK> <UNK> centerInside @ <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> centerInside @ <UNK> differ diff -- git <UNK> <UNK>
# result : Fixed scale type on a test
# expect : Fixed scale type on a test
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> Binary files <UNK> and <UNK> differ diff --
# result : horizontal marquee in conversation title view
# expect : More fixes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class SplitPane extends WidgetGroup { private Rectangle firstWidgetBounds = new Rectangle ( ) ; private Rectangle secondWidgetBounds = new Rectangle ( ) ; Rectangle handleBounds = new Rectangle ( ) ; + boolean cursorOverHandle ; private Rectangle tempScissors = new Rectangle ( ) ; <UNK> lastPoint = new <UNK> ( ) ; @ @ <UNK> <UNK> @ @ public class SplitPane extends WidgetGroup { } invalidate ( ) ; } + + public boolean mouseMoved ( InputEvent event , float
# result : Add <UNK>
# expect : Add <UNK>
# source : diff -- git a/CHANGES b/CHANGES index <UNK> <UNK> -- - a/CHANGES +++ b/CHANGES @ @ <UNK> <UNK> @ @ - SkinLoader can be used on subclasses of Skin by overriding generateSkin ( ) . - API addition : Tree indentation can be customized . - Fixed GlyphLayout not respecting BitmapFontData # down . +- API Addition : Added FileHandle # map ( ) , can be used to memory map a file - API Addition : Added faceIndex paramter to # FreeTypeFontGenerator ( FileHandle , int ) . - API Change : BitmapFont # getSpaceWidth changed to BitmapFont # getSpaceXadvance
# result : Merge remote-tracking branch <UNK> into filehandlemap
# expect : Merge remote-tracking branch <UNK> into filehandlemap
# source : diff -- git a/CHANGES b/CHANGES index <UNK> <UNK> -- - a/CHANGES +++ b/CHANGES @ @ <UNK> <UNK> @ @ - Update to Lwjgl <UNK> - Update android level we build against to <UNK> ( API <UNK> ) - API Change : gdx-tools no longer bundles dependencies to be compatible with java <UNK> +- Skin JSON files can now use the simple names of classes , <UNK> . `` BitmapFont <UNK> rather than `` <UNK> <UNK> . Custom classes can be added by overriding <UNK> ( ) and calling <UNK> ( ) . +- Skin supports cascading styles in JSON .
# result : Update to latest <UNK>
# expect : Update to latest <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class AndroidMultiTouchHandler implements AndroidTouchHandler { case <UNK> : case <UNK> : case <UNK> : - case <UNK> : realPointerIndex = <UNK> ( pointerId ) ; if ( realPointerIndex == <UNK> ) break ; if ( realPointerIndex > = <UNK> ) break ; @ @ <UNK> <UNK> @ @ public class AndroidMultiTouchHandler implements AndroidTouchHandler { <UNK> [ realPointerIndex ] = 0 ; break ; + case <UNK> : + for ( int i = 0 ; i < <UNK> ; i++
# result : Fixes <UNK> Clear touch points on Android multi-touch ACTION_CANCEL event
# expect : Fixes <UNK> Clear touch points on Android multi-touch ACTION_CANCEL event
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; public class Button extends Table implements Disableable { private ButtonStyle style ; boolean isChecked , isDisabled ; + boolean focused ; ButtonGroup buttonGroup ; private ClickListener clickListener ; private boolean programmaticChangeEvents = true ; @ @ <UNK> <UNK> @ @ public class Button extends Table implements Disableable { setChecked ( !
# result : Add focused to ButtonStyle
# expect : Add focused to ButtonStyle
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class GwtApplication implements EntryPoint , Application { <UNK> = getConfig ( ) ; setApplicationLogger ( new GwtApplicationLogger ( <UNK> ) ) ; - addEventListeners ( ) ; if ( <UNK> ! = null ) { <UNK> = <UNK> ; @ @ <UNK> <UNK> @ @ public abstract class GwtApplication implements EntryPoint , Application { if ( loadingListener ! = null ) <UNK> ( ) ; setupLoop ( ) ; + addEventListeners ( ) ; if ( loadingListener ! =
# result : Solves issue <UNK>
# expect : Solves issue <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class FlameMain extends JFrame implements AssetErrorListener { } public void render ( ) { - //float delta = <UNK> ( 0 , <UNK> ( ) * <UNK> ( ) ) ; - update ( ) ; + float delta = <UNK> ( 0 , <UNK> ( ) * <UNK> ( ) ) ; + update ( delta ) ; renderWorld ( ) ; } - private void update ( ) { + private void update ( float delta ) {
# result : Forgot to add the <UNK> changes
# expect : Forgot to add the <UNK> changes
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +package <UNK> ; + +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; + +public class ScrollPaneTextAreaTest extends GdxTest { + Stage stage ; + TextArea textArea ; + ScrollPane scrollPane ; + Skin skin ; + + + @ Override + public void create ( ) { + stage =
# result : Renamed <UNK> it actually tests the ScrollPane behavior when it wraps a <UNK> Added to <UNK>
# expect : Renamed <UNK> it actually tests the ScrollPane behavior when it wraps a <UNK> Added to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - # ifdef GL_ES + # ifdef GL_ES # define LOWP lowp # define MED mediump # define HIGH highp @ @ <UNK> <UNK> @ @ varying float v_alphaTest ; # endif //alphaTestFlag # endif //blendedFlag - # if defined ( diffuseTextureFlag ) || defined ( specularTextureFlag ) + # if defined ( diffuseTextureFlag ) || defined ( specularTextureFlag ) || defined ( emissiveTextureFlag ) # define textureFlag # endif @ @ <UNK> <UNK> @ @ varying MED <UNK> v_diffuseUV ;
# result : add missing import MaterialEmissiveTest
# expect : add support for emissive color and texture attributes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ +import <UNK> + apply plugin : `` % LANG % <UNK> sourceCompatibility = <UNK> @ @ <UNK> <UNK> @ @ task run ( dependsOn : classes , type : JavaExec ) { standardInput = <UNK> workingDir = <UNK> ignoreExitValue = true + + if ( <UNK> ( <UNK> ) ) + jvmArgs += `` -XstartOnFirstThread <UNK> } task debug ( dependsOn : classes , type : JavaExec ) {
# result : Added jvm arg <UNK> in the rust task for macOS
# expect : Added jvm arg <UNK> in the rust task for macOS
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class StringBuilder implements Appendable , CharSequence { return this ; } + /** Sets length to 0 . */ + public void clear ( ) { + length = 0 ; + } + /** Inserts the string representation of the specified { @ code boolean } value at the specified { @ code offset } . The * { @ code boolean } value is converted to a string according to the rule defined by { @ link String
# result : Removed unnecessary <UNK> in Align
# expect : Removed unnecessary <UNK> in Align
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; * @ author davebaol */ public interface AndroidApplicationBase extends Application { - static final int MINIMUM_SDK = <UNK> ; + static final int MINIMUM_SDK = <UNK> ; /** The application or activity context * diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> = `` <UNK> <UNK> <UNK> = `` <UNK> <UNK> <UNK> = <UNK> <UNK> = `` <UNK> <UNK> <UNK> = `` + <UNK> <UNK> =
# result : Updated a couple of mismatched version numbers
# expect : Updated a couple of mismatched version numbers
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class GwtApplication implements EntryPoint , Application { <UNK> = getConfig ( ) ; setApplicationLogger ( new GwtApplicationLogger ( <UNK> ) ) ; - addEventListeners ( ) ; if ( <UNK> ! = null ) { <UNK> = <UNK> ; @ @ <UNK> <UNK> @ @ public abstract class GwtApplication implements EntryPoint , Application { if ( loadingListener ! = null ) <UNK> ( ) ; setupLoop ( ) ; + addEventListeners ( ) ; if ( loadingListener ! =
# result : Solves issue <UNK>
# expect : Solves issue <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ALSource extends NSObject { @ Property ( selector = `` sourceId <UNK> ) public native int getSourceId ( ) ; + @ Property ( selector = `` state <UNK> ) + public native int getState ( ) ; + @ Method ( selector = `` stop <UNK> ) public native void stop ( ) ;
# result : <UNK> Provide access to ALSource state on iOS
# expect : <UNK> Provide access to ALSource state on iOS
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; * @ author davebaol */ public interface AndroidApplicationBase extends Application { - static final int MINIMUM_SDK = <UNK> ; + static final int MINIMUM_SDK = <UNK> ; /** The application or activity context * diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> = `` <UNK> <UNK> <UNK> = `` <UNK> <UNK> <UNK> = <UNK> <UNK> = `` <UNK> <UNK> <UNK> = `` + <UNK> <UNK> =
# result : Updated a couple of mismatched version numbers
# expect : Updated a couple of mismatched version numbers
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class Stage extends InputAdapter implements Disposable { private Debug debugTableUnderMouse = <UNK> ; private final Color debugColor = new Color ( 0 , <UNK> , 0 , <UNK> ) ; + public Exception lastException ; + /** Creates a stage with a { @ link ScalingViewport } set to {
# result : fixed try-finally swallowing Exception after end
# expect : fixed try-finally swallowing Exception after end
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ -LOCAL_PATH : = $ ( call my-dir ) -include $ ( CLEAR_VARS ) - -LOCAL_MODULE : = gdx-bullet -LOCAL_C_INCLUDES : = src/bullet/ src/custom/ src/extras/Serialize/ src/extras/ - -LOCAL_CFLAGS : = $ ( LOCAL_C_INCLUDES : % =-I % ) <UNK> -Wall -D__ANDROID__ -LOCAL_CPPFLAGS : = $ ( LOCAL_C_INCLUDES : % =-I % ) <UNK> -Wall -D__ANDROID__ -fno-strict-aliasing -fno-rtti -DBT_NO_PROFILE <UNK> -fexceptions -LOCAL_LDLIBS : = -lm -LOCAL_ARM_MODE : = arm - -LOCAL_SRC_FILES : = <UNK> - <UNK> - <UNK> - <UNK> - <UNK> -
# result : Merge remote-tracking branch <UNK> into libgdx/master
# expect : Merge remote-tracking branch <UNK>
# source : diff -- git a/CHANGES b/CHANGES index <UNK> <UNK> -- - a/CHANGES +++ b/CHANGES @ @ <UNK> <UNK> @ @ - <UNK> now has a maximize ( ) method , and windows can be started maximized using the window or app configuration <UNK> setMaximized ( ) method . - NinePatch can now be drawn rotated or scaled . - NinepatchDrawable is now a TransformDrawable . +- API Change : <UNK> is now generic so it can support Drawables , PolygonRegions , NinePatches , etc . To fix existing code , specify the TextureRegion type in animation declarations ( and instantiations in
# result : <UNK> now throws unsupported
# expect : Generic <UNK> Animation
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class GLFrameBuffer < T extends GLTexture > implements Disposable { <UNK> ( <UNK> , <UNK> , <UNK> , depthStencilPackedBufferHandle ) ; <UNK> ( <UNK> , <UNK> , <UNK> , depthStencilPackedBufferHandle ) ; - result = <UNK> ( <UNK> ) ; } <UNK> ( <UNK> , defaultFramebufferHandle ) ; + result = <UNK> ( <UNK> ) ; + if ( result ! = <UNK> ) { disposeColorTexture ( colorTexture ) ;
# result : Add PagesHashStrategy#isSortChannelPositionNull method
# expect : Fix for <UNK> - Deferred frame buffer status query <UNK> after frame buffer <UNK> This prevents an FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT error on some <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class AndroidFileHandle extends FileHandle { return <UNK> ( ) ; } - public MappedByteBuffer map ( <UNK> mode ) { + public ByteBuffer map ( <UNK> mode ) { if ( type == <UNK> ) { FileInputStream input = null ; try { @ @ <UNK> <UNK>
# result : FileHandle#map compatibility for GWT
# expect : FileHandle#map compatibility for GWT
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class Stage extends InputAdapter implements Disposable { Batch batch = <UNK> ; <UNK> ( <UNK> ) ; <UNK> ( ) ; - <UNK> ( batch , <UNK> ) ; - <UNK> ( ) ; + try { + <UNK> ( batch , <UNK> ) ; + } finally { + <UNK> ( ) ; + } if ( debug ) drawDebug ( ) ; } @ @ <UNK> <UNK> @ @ public class Stage extends InputAdapter implements Disposable { <UNK>
# result : Put Batch calls in try-finally to allow recovery from thrown exceptions
# expect : Put Batch calls in try-finally to allow recovery from thrown exceptions
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; public class Button extends Table implements Disableable { private ButtonStyle style ; boolean isChecked , isDisabled ; + boolean focused ; ButtonGroup buttonGroup ; private ClickListener clickListener ; private boolean programmaticChangeEvents = true ; @ @ <UNK> <UNK> @ @ public class Button extends Table implements Disableable { setChecked ( !
# result : Add focused to ButtonStyle
# expect : Add focused to ButtonStyle
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class BinaryHeap < T extends <UNK> > { <UNK> = value ; return add ( node ) ; } + + /** Returns if binary heap contains the provided node . + * @ param node - may be null + * @ param identity - if true , == is used . Otherwise , <UNK> is used + */ + public boolean contains ( T node , boolean identity ) { + if ( identity || node == null
# result : Added contains to binary heap
# expect : Added contains to binary heap
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class ParticleController implements <UNK> , <UNK> /** Updates the particles data */ public void update ( ) { + update ( <UNK> ( ) ) ; + } + + /** Updates the particles data */ + public void update ( float deltaTime ) { + setTimeStep ( deltaTime ) ; <UNK> ( ) ; for ( Influencer influencer
# result : Update unit tests for HystrixObservableCollapser to check HystrixRequestContext
# expect : -The ParticleController stores a frame time in its deltaTime member but this value is hard-coded at <UNK> regardless of <UNK> This change adds an overload to the <UNK> <UNK> method to take the delta <UNK> This allows the particles to adjust their time deltas for faster or flower <UNK> The change also allows callers to cause particle effects to be played back at faster or slower <UNK> -This change also adds overloads for <UNK> and <UNK> of the ParticleSystem <UNK> each of which takes a frame time and adds an overload for the ParticleEffect <UNK> <UNK> -RegularEmitter previously only used the floor of the number of milliseconds that had passed since the last update when calculating percent of the lifetime lived for each <UNK> For playback of particle effects that were being played at <UNK> times the speed of the default <UNK> <UNK> ms were elapsed between calls to <UNK> which rounds down to <UNK> ms rather than <UNK> <UNK> This meant that the particle effect being played at <UNK> speed was actually being animated for <UNK> times as long rather than <UNK> times as long as the same effect played back at <UNK> speed <UNK> the floor of <UNK> <UNK> = <UNK> but floor of <UNK> is <UNK> -This change also updates the Flame tool to make it respect the delta multiplier
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; /** An implementation of the { @ link Application
# result : Converted CR/LF to LF
# expect : Converted CR/LF to LF
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; /** See < a href= <UNK> http : <UNK> ? <UNK> <UNK> > http : <UNK> ? <UNK> < /a > @ @ <UNK> <UNK> @ @ public class ParticleEffect implements Disposable { public void loadEmitterImages
# result : Replace HashMap with ObjectMap
# expect : Replace HashMap with ObjectMap
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class JniGenSharedLibraryLoader { boolean isLinux = <UNK> ( `` <UNK> <UNK> ) <UNK> ( `` Linux <UNK> ) ; boolean isMac = <UNK> ( `` <UNK> <UNK> ) <UNK> ( `` Mac <UNK> ) ; boolean isAndroid = false ; + boolean isARM = <UNK> ( `` <UNK> <UNK> ) <UNK> ( `` arm <UNK> ) ; boolean <UNK> = <UNK> ( `` <UNK> <UNK> ) <UNK> ( `` <UNK> <UNK> ) || <UNK> ( `` <UNK> <UNK> ) <UNK>
# result : Add JDK <UNK> ABI detection to ARM GNU/Linux jnigen shared library <UNK>
# expect : Merge remote-tracking branch <UNK> into HEAD
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public final class PropertiesUtils { * compatible with < code > <UNK> < /code > . * < p > * The input stream remains open after this method returns . - * + * * @ param properties the map to be filled . * @ param reader the input character stream reader . * @ throws IOException if an error occurred when reading from the input stream . @ @ <UNK> <UNK> @ @ public final class PropertiesUtils {
# result : Fix PropertiesUtils space handling during output
# expect : Fix PropertiesUtils space handling during output
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class Wav { public int read ( byte [ ] buffer ) throws IOException { if ( dataRemaining == 0 ) return <UNK> ; - int length = <UNK> ( <UNK> ( buffer ) , dataRemaining ) ; - if ( length == <UNK> ) return <UNK> ; - dataRemaining -= length ; - return length ; + int offset = 0 ; + do { + int length = <UNK> ( <UNK> ( buffer , offset , <UNK> -
# result : fixes <UNK> WAV file read from jar buffer underflow
# expect : fixes <UNK> WAV file read from jar buffer underflow
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ /******************************************************************************* * Copyright <UNK> See AUTHORS file . - * + * * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; * you may not use this file except in compliance with the License . * You may obtain a copy of the License at - * + * * http : <UNK> - * + * * Unless required by applicable law or agreed to in writing , software * distributed under the
# result : Convenience methods for Align - test for horizontal/vertical alignment
# expect : Convenience methods for Align - test for horizontal/vertical alignment
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class AndroidControllers implements LifecycleListener , ControllerManager , } private boolean isController ( InputDevice device ) { - return ( <UNK> ( ) & <UNK> ) ! = 0 ; + return ( ( <UNK> ( ) & <UNK> ) == <UNK> ) + & & ( ( ( <UNK> ( ) & <UNK> ) == <UNK> ) + || ( <UNK> ( ) ! = <UNK> ) ) ; } @ Override
# result : Improved controllers detection to avoid unrelated devices being detected as game controllers
# expect : Improved controllers detection to avoid unrelated devices being detected as game controllers
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class GlyphLayout implements Poolable { <UNK> ( run ) ; else { <UNK> ( run ) ; - - // Compute the run width , wrap if necessary , and position the run . float [ ] xAdvances = <UNK> ; - for ( int i = 0 , n = <UNK> ; i < n ; i++ ) { - float xAdvance = xAdvances [ i ] ; - x += xAdvance ; - - // Do <UNK> wrap
# result : wrap optimisation
# expect : wrap optimisation
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class FreeTypeFontGenerator implements Disposable { Glyph missingGlyph = createGlyph ( <UNK> ' , data , parameter , stroker , baseLine , packer ) ; if ( missingGlyph ! = null & & <UNK> ! = 0 & & <UNK> ! = 0 ) { <UNK> ( <UNK> ' , missingGlyph ) ; + <UNK> = missingGlyph ; if ( incremental ) <UNK> ( missingGlyph ) ; }
# result : Fixed the missingGlyph of FreeTypeBitmapFontData <UNK> <UNK>
# expect : Fixed the missingGlyph of FreeTypeBitmapFontData <UNK> <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class GLTexture implements Disposable { * @ param force True to always set the values , even if they are the same as the current values . */ public void unsafeSetWrap ( TextureWrap u , TextureWrap v , boolean force ) { if ( u ! = null & & ( force || uWrap ! = u ) ) { - <UNK> ( glTarget , <UNK> , <UNK> ( ) ) ; + <UNK> ( glTarget , <UNK> ,
# result : GLTexture - gltexparameter i instead of f
# expect : GLTexture - gltexparameter i instead of f
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class AndroidControllers implements LifecycleListener , ControllerManager , @ Override public boolean onKey ( View view , int keyCode , KeyEvent keyEvent ) { + if ( ! <UNK> ( keyCode ) ) { + return false ; + } AndroidController controller = <UNK> ( <UNK> ( ) ) ; if ( controller ! = null ) { if ( <UNK> ( keyCode ) & & <UNK> ( ) == <UNK> ) {
# result : Prevent controller extension from swallowing keyboard events
# expect : Prevent controller extension from swallowing keyboard events
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class GlyphLayout implements Poolable { <UNK> = 0 ; width = <UNK> ( width , <UNK> ) ; } else { - next = wrap ( fontData , run , glyphRunPool , wrapIndex , i ) ; + next = wrap ( fontData , run , glyphRunPool , halign , wrapIndex , i ) ; <UNK> ( next ) ; + width = <UNK> ( width , <UNK> + <UNK> ) ; } @ @ <UNK> <UNK> @ @ public
# result : Remove possible whitespaces before adjusting xAdvances of wrapped line
# expect : Merge branch <UNK> of <UNK> into glyphLayoutTrimLines
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ +import <UNK> + apply plugin : `` % LANG % <UNK> sourceCompatibility = <UNK> @ @ <UNK> <UNK> @ @ task run ( dependsOn : classes , type : JavaExec ) { standardInput = <UNK> workingDir = <UNK> ignoreExitValue = true + + if ( <UNK> ( <UNK> ) ) + jvmArgs += `` -XstartOnFirstThread <UNK> } task debug ( dependsOn : classes , type : JavaExec ) {
# result : Added jvm arg <UNK> in the rust task for macOS
# expect : Added jvm arg <UNK> in the rust task for macOS
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ -/******************************************************************************* - * Copyright <UNK> See AUTHORS file . - * - * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; - * you may not use this file except in compliance with the License . - * You may obtain a copy of the License at - * - * http : <UNK> - * - * Unless required by applicable law or agreed to in writing , software - * distributed under
# result : Fix issue where Android <UNK> detect bluetooth
# expect : Fix issue where Android <UNK> detect bluetooth
# source : diff -- git a/CHANGES b/CHANGES index <UNK> <UNK> -- - a/CHANGES +++ b/CHANGES @ @ <UNK> <UNK> @ @ - Update to Lwjgl <UNK> - Update android level we build against to <UNK> ( API <UNK> ) - API Change : gdx-tools no longer bundles dependencies to be compatible with java <UNK> +- Skin JSON files can now use the simple names of classes , <UNK> . `` BitmapFont <UNK> rather than `` <UNK> <UNK> . Custom classes can be added by overriding <UNK> ( ) and calling <UNK> ( ) . +- Skin supports cascading styles in JSON .
# result : Update to latest <UNK>
# expect : Update to latest <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class AndroidFileHandle extends FileHandle { return <UNK> ( ) ; } - public MappedByteBuffer map ( <UNK> mode ) { + public ByteBuffer map ( <UNK> mode ) { if ( type == <UNK> ) { FileInputStream input = null ; try { @ @ <UNK> <UNK>
# result : FileHandle#map compatibility for GWT
# expect : Removing uneeded imports * How did this even work
# source : diff -- git a/CHANGES b/CHANGES index <UNK> <UNK> -- - a/CHANGES +++ b/CHANGES @ @ <UNK> <UNK> @ @ - API addition : Tree indentation can be customized . - Fixed GlyphLayout not respecting BitmapFontData # down . - API Addition : Added faceIndex paramter to # FreeTypeFontGenerator ( FileHandle , int ) . +- API Addition : Added FileHandle # map ( ) , can be used to memory map a file [ <UNK> ] - Add iPhoneX images diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package
# result : Merge branch <UNK> into filehandlemap
# expect : Merge branch <UNK> into filehandlemap
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ /******************************************************************************* * Copyright <UNK> See AUTHORS file . - * + * * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; * you may not use this file except in compliance with the License . * You may obtain a copy of the License at - * + * * http : <UNK> - * + * * Unless required by applicable law or agreed to in writing , software * distributed under the
# result : Convenience methods for Align - test for horizontal/vertical alignment
# expect : Bit operators for comparison
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class FlameMain extends JFrame implements AssetErrorListener { } public void render ( ) { - //float delta = <UNK> ( 0 , <UNK> ( ) * <UNK> ( ) ) ; - update ( ) ; + float delta = <UNK> ( 0 , <UNK> ( ) * <UNK> ( ) ) ; + update ( delta ) ; renderWorld ( ) ; } - private void update ( ) { + private void update ( float delta ) {
# result : Forgot to add the <UNK> changes
# expect : Forgot to add the <UNK> changes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class Stage extends InputAdapter implements Disposable { Batch batch = <UNK> ; <UNK> ( <UNK> ) ; <UNK> ( ) ; - <UNK> ( batch , <UNK> ) ; - <UNK> ( ) ; + try { + <UNK> ( batch , <UNK> ) ; + } finally { + <UNK> ( ) ; + } if ( debug ) drawDebug ( ) ; } @ @ <UNK> <UNK> @ @ public class Stage extends InputAdapter implements Disposable { <UNK>
# result : Put Batch calls in try-finally to allow recovery from thrown exceptions
# expect : Put Batch calls in try-finally to allow recovery from thrown exceptions
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class GlyphLayout implements Poolable { } else { next = wrap ( fontData , run , glyphRunPool , wrapIndex , i ) ; <UNK> ( next ) ; + + // Remove whitespace at the front and end of the run after wrap + if ( <UNK> ( ( char ) <UNK> ( ) <UNK> ) ) { + <UNK> ( 0 ) ; + float removedXAdvance = <UNK> ( <UNK> ) ; + <UNK> -= removedXAdvance ; + }
# result : Also remove whitespace at front of run - GlyphLayoutWrapTest
# expect : Also remove whitespace at front of run - GlyphLayoutWrapTest
# source : diff -- git a/CHANGES b/CHANGES index <UNK> <UNK> -- - a/CHANGES +++ b/CHANGES @ @ <UNK> <UNK> @ @ - API Addition : Added faceIndex paramter to # FreeTypeFontGenerator ( FileHandle , int ) . - API Change : BitmapFont # getSpaceWidth changed to BitmapFont # getSpaceXadvance . - Many GlyphLayout fixes . +- API Addition : Added FileHandle # map ( ) , can be used to memory map a file [ <UNK> ] - Add iPhoneX images diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK>
# result : Merge branch <UNK> of PokeMMO/libgdx into filehandlemap
# expect : Merge branch <UNK> of PokeMMO/libgdx into filehandlemap
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ /******************************************************************************* * Copyright <UNK> See AUTHORS file . - * + * * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; * you may not use this file except in compliance with the License . * You may obtain a copy of the License at - * + * * http : <UNK> - * + * * Unless required by applicable law or agreed to in writing , software * distributed under the
# result : Convenience methods for Align - test for horizontal/vertical alignment
# expect : Bit operators for comparison
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class AndroidControllers implements LifecycleListener , ControllerManager , } private boolean isController ( InputDevice device ) { - return ( <UNK> ( ) & <UNK> ) ! = 0 ; + return ( ( <UNK> ( ) & <UNK> ) == <UNK> ) + & & ( ( ( <UNK> ( ) & <UNK> ) == <UNK> ) + || ( <UNK> ( ) ! = <UNK> ) ) ; } @ Override
# result : Improved controllers detection to avoid unrelated devices being detected as game controllers
# expect : Improved controllers detection to avoid unrelated devices being detected as game controllers
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class FreeType { public void dispose ( ) { doneFreeType ( address ) ; for ( ByteBuffer buffer : <UNK> ( ) ) { - <UNK> ( buffer ) ; + if ( <UNK> ( buffer ) ) + <UNK> ( buffer ) ; } } @ @ <UNK> <UNK> @ @ public class FreeType { public Face newMemoryFace ( ByteBuffer buffer , int faceIndex ) { long face = newMemoryFace ( address , buffer , <UNK> ( ) ,
# result : FreeType - Fixing missing unsafe check for Face buffers when failure to create face
# expect : FreeType - Fixing missing unsafe check for Face buffers when failure to create face
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public final class Intersector { private final static <UNK> s = new <UNK> ( ) ; private final static <UNK> e = new <UNK> ( ) ; - /** Intersects two resulting polygons with the same winding and sets the overlap polygon resulting from the intersection . + /** Intersects two convex polygons with clockwise vertices and sets the overlap polygon resulting from the intersection . * Follows the Sutherland-Hodgman algorithm . * * @ param <UNK> The polygon that is
# result : Update <UNK>
# expect : Update <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public final class PropertiesUtils { * compatible with < code > <UNK> < /code > . * < p > * The input stream remains open after this method returns . - * + * * @ param properties the map to be filled . * @ param reader the input character stream reader . * @ throws IOException if an error occurred when reading from the input stream . @ @ <UNK> <UNK> @ @ public final class PropertiesUtils {
# result : Fix PropertiesUtils space handling during output
# expect : Fix PropertiesUtils space handling during output
# source : diff -- git a/CHANGES b/CHANGES index <UNK> <UNK> -- - a/CHANGES +++ b/CHANGES @ @ <UNK> <UNK> @ @ - SkinLoader can be used on subclasses of Skin by overriding generateSkin ( ) . - API addition : Tree indentation can be customized . - Fixed GlyphLayout not respecting BitmapFontData # down . +- API Addition : Added FileHandle # map ( ) , can be used to memory map a file - API Addition : Added faceIndex paramter to # FreeTypeFontGenerator ( FileHandle , int ) . - API Change : BitmapFont # getSpaceWidth changed to BitmapFont # getSpaceXadvance
# result : Merge remote-tracking branch <UNK> into filehandlemap
# expect : Merge remote-tracking branch <UNK> into filehandlemap
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ -/******************************************************************************* - * Copyright <UNK> See AUTHORS file . - * - * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; - * you may not use this file except in compliance with the License . - * You may obtain a copy of the License at - * - * http : <UNK> - * - * Unless required by applicable law or agreed to in writing , software - * distributed under
# result : Fix issue where Android <UNK> detect bluetooth
# expect : Fix issue where Android <UNK> detect bluetooth
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class Ellipse implements Serializable , <UNK> { public Ellipse ( Circle circle ) { <UNK> = <UNK> ; <UNK> = <UNK> ; - <UNK> = <UNK> ; - <UNK> = <UNK> ; + <UNK> = <UNK> * <UNK> ; + <UNK> = <UNK> * <UNK> ; } /** Checks whether or not this ellipse contains the given point . @ @ <UNK> <UNK> @ @ public class Ellipse implements Serializable , <UNK> { public void set ( Circle circle )
# result : Changed Constructor of <UNK>
# expect : Changed Constructor of <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - # ifdef GL_ES + # ifdef GL_ES # define LOWP lowp # define MED mediump # define HIGH highp @ @ <UNK> <UNK> @ @ varying float v_alphaTest ; # endif //alphaTestFlag # endif //blendedFlag - # if defined ( diffuseTextureFlag ) || defined ( specularTextureFlag ) + # if defined ( diffuseTextureFlag ) || defined ( specularTextureFlag ) || defined ( emissiveTextureFlag ) # define textureFlag # endif @ @ <UNK> <UNK> @ @ varying MED <UNK> v_diffuseUV ;
# result : add missing import MaterialEmissiveTest
# expect : add support for emissive color and texture attributes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class Align { } static public final boolean isCenterVertical ( int align ) { - return ( align & <UNK> ) == 0 & & ( align & <UNK> ) == 0 ; + return ( align & top ) == 0 & & ( align & bottom ) == 0 ; } static public final boolean isCenterHorizontal ( int align ) { - return ( align & <UNK> ) == 0 & & ( align & <UNK> ) ==
# result : Removed unnecessary <UNK> in Align
# expect : Removed unnecessary <UNK> in Align
# source : diff -- git a/CHANGES b/CHANGES index <UNK> <UNK> -- - a/CHANGES +++ b/CHANGES @ @ <UNK> <UNK> @ @ - SkinLoader can be used on subclasses of Skin by overriding generateSkin ( ) . - API addition : Tree indentation can be customized . - Fixed GlyphLayout not respecting BitmapFontData # down . +- API Addition : Added FileHandle # map ( ) , can be used to memory map a file [ <UNK> ] - Add iPhoneX images diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK>
# result : <UNK> now throws unsupported
# expect : Slightly better exception message
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; * @ author davebaol */ public interface AndroidApplicationBase extends Application { - static final int MINIMUM_SDK = <UNK> ; + static final int MINIMUM_SDK = <UNK> ; /** The application or activity context * diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> = `` <UNK> <UNK> <UNK> = `` <UNK> <UNK> <UNK> = <UNK> <UNK> = `` <UNK> <UNK> <UNK> = `` + <UNK> <UNK> =
# result : Updated a couple of mismatched version numbers
# expect : Updated a couple of mismatched version numbers
# source : diff -- git a/CHANGES b/CHANGES index <UNK> <UNK> -- - a/CHANGES +++ b/CHANGES @ @ <UNK> <UNK> @ @ - Update to Lwjgl <UNK> - Update android level we build against to <UNK> ( API <UNK> ) - API Change : gdx-tools no longer bundles dependencies to be compatible with java <UNK> +- Skin JSON files can now use the simple names of classes , <UNK> . `` BitmapFont <UNK> rather than `` <UNK> <UNK> . Custom classes can be added by overriding <UNK> ( ) and calling <UNK> ( ) . +- Skin supports cascading styles in JSON .
# result : Update to latest <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class AndroidControllers implements LifecycleListener , ControllerManager , } private boolean isController ( InputDevice device ) { - return ( <UNK> ( ) & <UNK> ) ! = 0 ; + return ( ( <UNK> ( ) & <UNK> ) == <UNK> ) + & & ( ( ( <UNK> ( ) & <UNK> ) == <UNK> ) + || ( <UNK> ( ) ! = <UNK> ) ) ; } @ Override
# result : Improved controllers detection to avoid unrelated devices being detected as game controllers
# expect : Improved controllers detection to avoid unrelated devices being detected as game controllers
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class LwjglGraphics implements Graphics { } @ Override - public boolean supportsExtension ( String extension ) { - if ( extensions == null ) extensions = <UNK> ( <UNK> ) ; + public boolean supportsExtension ( String extension ) { + if ( extensions == null ) { + if ( <UNK> ! = null ) { + //old style glGetString ( GL_EXTENSIONS ) is not valid in <UNK> core : + StringBuilder extensionsBuilder = new StringBuilder ( ) ;
# result : Merge remote-tracking branch <UNK>
# expect : Merge remote-tracking branch <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class LwjglGraphics implements Graphics { } @ Override - public boolean supportsExtension ( String extension ) { - if ( extensions == null ) extensions = <UNK> ( <UNK> ) ; + public boolean supportsExtension ( String extension ) { + if ( extensions == null ) { + if ( <UNK> ! = null ) { + //old style glGetString ( GL_EXTENSIONS ) is not valid in <UNK> core : + StringBuilder extensionsBuilder = new StringBuilder ( ) ;
# result : Merge remote-tracking branch <UNK>
# expect : Splitting out my changes to VertexBufferObject to create a parallel VertexData <UNK> <UNK> This reduces the branching and keeps the VBO code pretty <UNK> Modify Mesh to create the new implementation when <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class MockMusic implements Music { public void setPan ( float pan , float volume ) { } + + @ Override + public void setPosition ( float position ) { + + } @ Override public float getPosition ( ) { diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class LwjglGraphics implements Graphics { } @ Override - public boolean supportsExtension ( String extension ) { - if
# result : updated <UNK>
# expect : Add setPosition to Music <UNK> and implement
# source : diff -- git a/CHANGES b/CHANGES index <UNK> <UNK> -- - a/CHANGES +++ b/CHANGES @ @ <UNK> <UNK> @ @ + [ <UNK> ] +- API Addition : Added HttpRequestHeader and HttpResponseHeader with constants for HTTP headers . +- API Addition : HttpRequest is now poolable . + [ <UNK> ] - Update to the Gradle Integration plugin nightly build if you are on Eclipse <UNK> ! - Update Intellij IDEA to <UNK> , because Gradle ! diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < classpath > < classpathentry
# result : Add variant of <UNK> method taking components
# expect : Emulate <UNK> <UNK> <UNK>
# source : diff -- git a/CHANGES b/CHANGES index <UNK> <UNK> -- - a/CHANGES +++ b/CHANGES @ @ <UNK> <UNK> @ @ + [ <UNK> ] +- API Addition : Added HttpRequestHeader and HttpResponseHeader with constants for HTTP headers . +- API Addition : HttpRequest is now poolable . +- New PNG encoder that supports compression , more efficient vertical flipping , and minimal allocation when encoding multiple PNGs . + [ <UNK> ] - Update to the Gradle Integration plugin nightly build if you are on Eclipse <UNK> ! - Update Intellij IDEA to <UNK> , because Gradle ! diff -- git
# result : Fixes <UNK>
# expect : Fixed PNG encoder for all pixmap <UNK>
# source : diff -- git a/CHANGES b/CHANGES index <UNK> <UNK> -- - a/CHANGES +++ b/CHANGES @ @ <UNK> <UNK> @ @ + [ <UNK> ] +- API Addition : Added HttpRequestHeader and HttpResponseHeader with constants for HTTP headers . +- API Addition : HttpRequest is now poolable . +- New PNG encoder that supports compression , more efficient vertical flipping , and minimal allocation when encoding multiple PNGs . + [ <UNK> ] - Update to the Gradle Integration plugin nightly build if you are on Eclipse <UNK> ! - Update Intellij IDEA to <UNK> , because Gradle ! diff -- git
# result : Fixes <UNK>
# expect : Fixes <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class IOSGraphics extends NSObject implements Graphics , GLKViewDelegate , @ Override public void setContinuousRendering ( boolean isContinuous ) { <UNK> = isContinuous ; - <UNK> ( ! isContinuous ) ; - <UNK> ( isContinuous ) ; <UNK> ( ! isContinuous ) ; + <UNK> ( isContinuous ) ; + + // We need to keep track of the paused state because setPaused ( ) invokes willPause ( ) which messes with our paused state . + boolean wasPaused = paused
# result : Fix rendering and input not working when switching between dirty and continuous <UNK>
# expect : Merge branch <UNK> of <UNK> into ios-dirty-fix
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class TextField extends Widget implements Disableable { protected int [ ] wordUnderCursor ( int at ) { String text = <UNK> ; int start = at , right = <UNK> ( ) , left = 0 , index = start ; - for ( ; index < right ; index++ ) { - if ( ! isWordCharacter ( <UNK> ( index ) ) ) { - right = index ; - break ; - } + if ( at >
# result : Delete <UNK>
# expect : closes <UNK> Double-click select causes StringIndexOutOfBoundsException in <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; -import <UNK> ; - /** A convenient <UNK> circle class . * @ author mzechner */ -public class Circle implements Serializable { - public float x , y ; +public class Circle extends <UNK> < Circle > { + public float radius ; /** Constructs a new circle with all values set to zero */ @ @ <UNK> <UNK> @ @ public class Circle implements Serializable { } - /** Constructs a new circle with the given X
# result : Source formatted
# expect : Make Sphere extends <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ALSource extends NSObject { @ Property ( selector = `` sourceId <UNK> ) public native int getSourceId ( ) ; + @ Property ( selector = `` state <UNK> ) + public native int getState ( ) ; + @ Method ( selector = `` stop <UNK> ) public native void stop ( ) ;
# result : <UNK> Provide access to ALSource state on iOS
# expect : <UNK> Provide access to ALSource state on iOS
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class GlyphLayout implements Poolable { <UNK> = 0 ; width = <UNK> ( width , <UNK> ) ; } else { - next = wrap ( fontData , run , glyphRunPool , wrapIndex , i ) ; + next = wrap ( fontData , run , glyphRunPool , halign , wrapIndex , i ) ; <UNK> ( next ) ; + width = <UNK> ( width , <UNK> + <UNK> ) ; } @ @ <UNK> <UNK> @ @ public
# result : Remove possible whitespaces before adjusting xAdvances of wrapped line
# expect : Remove possible whitespaces before adjusting xAdvances of wrapped line
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class Json { } /** Each field on the < code > to < /code > object is set to the value for the field with the same name on the < code > from < /code > - * object . The < code > from < /code > object must have at least all the fields as the < code > to < /code > object with the same name and + * object . The < code
# result : Reverse the requirements on fields in <UNK> so superclass objects can be copied to subclass <UNK>
# expect : Reverse the requirements on fields in <UNK> so superclass objects can be copied to subclass <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public final class Intersector { private final static <UNK> s = new <UNK> ( ) ; private final static <UNK> e = new <UNK> ( ) ; - /** Intersects two resulting polygons with the same winding and sets the overlap polygon resulting from the intersection . + /** Intersects two polygons with clockwise vertices and sets the overlap polygon resulting from the intersection . * Follows the Sutherland-Hodgman algorithm . * * @ param <UNK> The polygon that is being
# result : Update <UNK>
# expect : Update <UNK>
# source : diff -- git a/CHANGES b/CHANGES index <UNK> <UNK> -- - a/CHANGES +++ b/CHANGES @ @ <UNK> <UNK> @ @ - Update to Lwjgl <UNK> - Update android level we build against to <UNK> ( API <UNK> ) - API Change : gdx-tools no longer bundles dependencies to be compatible with java <UNK> +- Skin JSON files can now use the simple names of classes , <UNK> . `` BitmapFont <UNK> rather than `` <UNK> <UNK> . Custom classes can be added by overriding <UNK> ( ) and calling <UNK> ( ) . +- Skin supports cascading styles in JSON .
# result : Update to latest <UNK>
# expect : Update to latest <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class AndroidFileHandle extends FileHandle { return <UNK> ( ) ; } - public MappedByteBuffer map ( <UNK> mode ) { + public ByteBuffer map ( <UNK> mode ) { if ( type == <UNK> ) { FileInputStream input = null ; try { @ @ <UNK> <UNK>
# result : FileHandle#map compatibility for GWT
# expect : FileHandle#map compatibility for GWT
# source : diff -- git a/CHANGES b/CHANGES index <UNK> <UNK> -- - a/CHANGES +++ b/CHANGES @ @ <UNK> <UNK> @ @ - API Addition : Added faceIndex paramter to # FreeTypeFontGenerator ( FileHandle , int ) . - API Change : BitmapFont # getSpaceWidth changed to BitmapFont # getSpaceXadvance . - Many GlyphLayout fixes . +- API Addition : Added FileHandle # map ( ) , can be used to memory map a file [ <UNK> ] - Add iPhoneX images diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK>
# result : Merge branch <UNK> of PokeMMO/libgdx into filehandlemap
# expect : Minor cleanups for map methods
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ Libgdx is a cross-platform Java game development framework based on OpenGL ( ES ) that works on Windows , Linux , Mac OS X , Android , your WebGL enabled browser and soon iOS -MOO LOVE FOR NATE - # # # # [ Official site ] ( http : <UNK> ) # # # # [ Issues Tracker ( Google Code ) ] ( http : <UNK> ) , include a link to your pull request if applicable # #
# result : stop messing with my readme
# expect : stop messing with my readme
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class BoundingBox implements Serializable { return <UNK> ( <UNK> ( 0 , 0 , 0 ) , <UNK> ( 0 , 0 , 0 ) ) ; } - /** Returns whether this bounding box is valid . This means that { @ link # max } is greater than { @ link # min } . + /** Returns whether this bounding box is valid . This means that { @ link # max } is greater than or
# result : Updated the comment to reflect the changes
# expect : Made BoundingBox compatible with <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; /** * < p > @ @ <UNK> <UNK> @ @ public class VertexBufferObjectWithVAO implements VertexData { final int usage ; boolean isDirty = false ; boolean isBound = false ; - boolean vaoDirty = true ; int vaoHandle = <UNK> ; + IntArray cachedLocations = new IntArray ( ) ; /** @ @ <UNK> <UNK> @ @ public class VertexBufferObjectWithVAO implements VertexData { * @
# result : Change precondition message
# expect : Clean up performance in VBOWithVAO and supply performance test
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; public class CircleImageView extends ImageView { @ @ <UNK> <UNK> @ @ public class CircleImageView extends ImageView { private final RectF mDrawableRect = new RectF ( )
# result : add Region to filter TouchEvent
# expect : fix bug
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : before_script : - chmod +x gradlew -script : `` <UNK> build <UNK> \ No newline at end of file +script : `` <UNK> build <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ apply plugin : <UNK> android { compileSdkVersion <UNK> - buildToolsVersion <UNK> + buildToolsVersion <UNK> defaultConfig { minSdkVersion <UNK> targetSdkVersion <UNK> - versionCode <UNK> - versionName `` <UNK> <UNK> + + // version values from <UNK>
# result : reverted changes for gradle-wrapper
# expect : reverted changes for gradle-wrapper
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ *******************************************************************************/ package <UNK> ; +import <UNK> ; + import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; - public class PhotoViewAttacher implements IPhotoView , <UNK> , <UNK> , <UNK> , <UNK> { - static final String LOG_TAG = `` PhotoViewAttacher <UNK> ; + static final String LOG_TAG = `` PhotoViewAttacher <UNK> ; - // let debug flag be dynamic , but still Proguard
# result : Allow pager to scroll when no image has been loaded into PhotoView
# expect : Fixed wrong placement of if statement
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class ScrollerProxy { public static ScrollerProxy getScroller ( Context context ) { if ( <UNK> < <UNK> ) { return new PreGingerScroller ( context ) ; - } else { + } else if ( <UNK> < <UNK> ) { return new GingerScroller ( context ) ; + } else { + return new IcsScroller ( context ) ; } } @ @ <UNK> <UNK> @ @ public abstract class ScrollerProxy { public abstract int getCurrY ( ) ;
# result : <UNK> Was <UNK> Fixed now
# expect : Workaround for Gingerbread flicker when scrolling into right or bottom edges while zoomed in
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class ScrollerProxy { public static ScrollerProxy getScroller ( Context context ) { if ( <UNK> < <UNK> ) { return new PreGingerScroller ( context ) ; - } else { + } else if ( <UNK> < <UNK> ) { return new GingerScroller ( context ) ; + } else { + return new IcsScroller ( context ) ; } } @ @ <UNK> <UNK> @ @ public abstract class ScrollerProxy { public abstract int getCurrY ( ) ;
# result : <UNK> Was <UNK> Fixed now
# expect : <UNK> Was <UNK> Fixed now
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public interface IPhotoView { /** * @ return The current minimum scale level . What this value represents depends on the current { @ link <UNK> } . */ - float getMinScale ( ) ; + float getMinimumScale ( ) ; + + /** + * @ return The current normal scale level . What this value represents depends on the current { @ link <UNK> } . + */ + float getNormalScale ( ) ; /** - * @ return
# result : Added <UNK> to enable regex mapping for an enum value to a <UNK>
# expect : Keep target API consistent with master branch
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ before_install : # for gradle output style - export TERM=dumb # newer version of gradle - - wget http : <UNK> - - unzip -qq <UNK> - - export GRADLE_HOME= $ <UNK> + - wget http : <UNK> + - unzip -qq <UNK> + - export GRADLE_HOME= $ <UNK> - export PATH= $ GRADLE_HOME/bin : $ PATH # just to test gradle version , against our provided one - gradle -v @ @ <UNK> <UNK> @ @ before_install : # manually
# result : Fix for regression on issue <UNK>
# expect : <UNK> Removed application tag from library as it is <UNK> <UNK> set flags can conflict with projects requiring overrides to be <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class ScrollerProxy { public static ScrollerProxy getScroller ( Context context ) { if ( <UNK> < <UNK> ) { return new PreGingerScroller ( context ) ; - } else { + } else if ( <UNK> < <UNK> ) { return new GingerScroller ( context ) ; + } else { + return new IcsScroller ( context ) ; } } @ @ <UNK> <UNK> @ @ public abstract class ScrollerProxy { public abstract int getCurrY ( ) ;
# result : <UNK> Was <UNK> Fixed now
# expect : Workaround for Gingerbread flicker when scrolling into right or bottom edges while zoomed in
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ASMSerializerFactory implements Opcodes { writeNullFeatures = <UNK> ( ) | <UNK> ( ) ; } else { - writeNullFeatures = <UNK> ; + writeNullFeatures = <UNK> ( ) ; } if ( ( features & writeNullFeatures ) == 0 ) { diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class FieldSerializer implements Comparable < FieldSerializer > { JSONField annotation = <UNK> ( ) ; if ( annotation
# result : fix issues <UNK> : IndexOutOfBoundsException
# expect : Map should fill null values only when set WriteMapNullValue
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + < ! -- + Copyright <UNK> GitHub <UNK> + + Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; + you may not use this file except in compliance with the License . + You may obtain a copy of the License at + + http : <UNK> + + Unless required by applicable law or agreed
# result : updated FollowUserTask to show progress dialog
# expect : added disabling follow menu item until following status is updated
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ repositories { dependencies { compile fileTree ( dir : <UNK> ' , include : [ <UNK> ' ] ) compile <UNK> : <UNK> + compile <UNK> : <UNK> compile <UNK> : <UNK> compile <UNK> : <UNK> compile <UNK> : <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import static <UNK> ; -import static <UNK> ; import static <UNK> ; import <UNK> ; import <UNK> ; import
# result : Delete the old cache every time the constructor is called
# expect : Fix crash if the avatar is missing
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ repositories { dependencies { compile fileTree ( dir : <UNK> ' , include : [ <UNK> ' ] ) compile <UNK> : <UNK> + compile <UNK> : <UNK> + compile <UNK> : <UNK> compile <UNK> : <UNK> compile <UNK> : <UNK> compile <UNK> : <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < LinearLayout xmlns : android= <UNK> http : <UNK> <UNK> style= <UNK> @ style/ListItem <UNK> android :
# result : <UNK> load default gravatar images
# expect : Add rounded corners to all avatars
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> +/build */target -target tmp *~ bin */test-output <UNK> <UNK> <UNK> gen <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < component name= <UNK> CopyrightManager <UNK> > + < settings default= <UNK> <UNK> / > + < /component > \ No newline at end of file diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @
# result : More test fixes
# expect : gradlew permission fixed
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> ; import static <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class CommitFileViewActivity extends BaseActivity { private static final String TAG = `` CommitFileViewActivity <UNK> ; + private static final String URL_GOOGLEDOCS = `` https : <UNK> ? embedded=true & url= <UNK> ; + + private static boolean isPDF ( final String name ) { + if ( <UNK>
# result : Added <UNK> which <UNK> button to collections
# expect : Load PDFs in WebView through Google Docs
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < data android : host= <UNK> <UNK> <UNK> - android : scheme= <UNK> http <UNK> / > + android : scheme= <UNK> http <UNK> + android : pathPrefix= <UNK> / <UNK> / > + < category android : name= <UNK> <UNK> <UNK> / > < category android : name= <UNK> <UNK> <UNK> / > < /intent-filter > < intent-filter > @ @ <UNK> <UNK> @ @ < data android : host= <UNK> <UNK> <UNK> - android : scheme= <UNK> https <UNK>
# result : Open Github from link
# expect : Open Github from link
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class SourceEditor { private void loadSource ( ) { if ( name ! = null & & content ! = null ) if ( markdown ) - <UNK> ( content , `` text/html <UNK> , null ) ; + <UNK> ( null , content , `` text/html <UNK> , <UNK> , null ) ; else <UNK> ( URL_PAGE ) ; }
# result : use <UNK> method instead of <UNK>
# expect : Fix <UNK> <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +package <UNK> ; + +import <UNK> ; +import <UNK> ; +import <UNK> ; + +import <UNK> ; + +public class MimeType { + + final static String CONTENT_TYPE = `` Content-Type <UNK> ; + + public static Map < String , String > map = new HashMap < String , String > ( ) { { + put ( `` au <UNK> , `` audio/basic <UNK> ) ; + put ( `` avi <UNK> , `` video/msvideo ,
# result : Merge branch <UNK> of <UNK> into mimetype
# expect : Fix NPE for getFilename and set headers before gzip
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class SocketConnectorFactory { <UNK> ( true ) ; } + <UNK> ( `` <UNK> <UNK> , <UNK> <UNK> <UNK> , <UNK> <UNK> <UNK> ) ; + HttpConnectionFactory httpConnectionFactory = createHttpConnectionFactory ( ) ; ServerConnector connector = new ServerConnector ( server , sslContextFactory , httpConnectionFactory ) ;
# result : Including enabled TLS protocols to SocketConnectorFactory
# expect : Including enabled TLS protocols to SocketConnectorFactory
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class MatcherFilter implements Filter { <UNK> ( response ) ; + if ( bodyContent instanceof String ) { + <UNK> ( ( String ) bodyContent ) ; + } + FilterImpl filter = ( FilterImpl ) filterTarget ; <UNK> ( requestWrapper , responseWrapper ) ;
# result : <UNK> Provide access to ALSource state on iOS
# expect : Make bodyContent available in the after filters
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class FilterImpl implements Filter { String getPath ( ) { return <UNK> ; } - } \ No newline at end of file diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +package spark ; + +/** + * Markup abstract class + * + * @ author Bortolozzo + * + */ +public abstract class FinallyFilter extends FilterImpl { + + public FinallyFilter ( String
# result : more refactoring
# expect : <UNK> concept of finally filter
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < modelVersion > <UNK> < /modelVersion > < groupId > spark < /groupId > < artifactId > spark < /artifactId > - < packaging > jar < /packaging > + < packaging > pom < /packaging > < version > <UNK> < /version > < name > Spark < /name > < url > http : <UNK> < /url > < properties > + < <UNK> > <UNK> < <UNK> > < <UNK> > <UNK> < <UNK> > < /properties >
# result : Code cleanup
# expect : Refactored <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < modelVersion > <UNK> < /modelVersion > < groupId > spark < /groupId > < artifactId > spark < /artifactId > - < packaging > jar < /packaging > + < packaging > pom < /packaging > < version > <UNK> < /version > < name > Spark < /name > < url > http : <UNK> < /url > < properties > + < <UNK> > <UNK> < <UNK> > < <UNK> > <UNK> < <UNK> > < /properties >
# result : Code cleanup
# expect : Merge branch <UNK> of <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < html > < body > Yo ! yo ! custom <UNK> Static World ! ! ! ! < /body > < /html > \ No newline at end of file diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ! DOCTYPE html > + < html > + < head lang= <UNK> en <UNK> > + < meta charset= <UNK> <UNK>
# result : Removed unwanted changes in testcases
# expect : Custom <UNK> and <UNK> with sparkfilters
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class IntroActivity extends AppIntro { } `` ` -_Note above that we DID NOT use setContentView ( ) ; _ +_Note above that we DID NOT use ` setContentView ( ) ; ` _ Finally , declare the activity in your Manifest like so : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ allprojects { jcenter ( ) } } + +ext { + minSdkVersion = <UNK> + targetSdkVersion
# result : Quick <UNK>
# expect : - Consolidate Sample Activity intents into single switch <UNK> - Cleanup proguard <UNK> - Merge gradle build arguments for example app and <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public abstract class AppIntro extends AppIntroBase { } /** + * Override skip text typeface + * + * @ param texttf URL of font file located in Assets folder + */ + public void setSkipTextTypeface ( @ Nullable final String texttf ) { + TextView skipText = ( TextView ) findViewById ( <UNK> ) ; + <UNK> ( <UNK>
# result : Changelog <UNK> <UNK> Adding custom typeface feature in default AppIntro & <UNK> <UNK> Adding a static cache for Typefaces to prevent memory leaks due to <UNK> The developers can just provide the URLs of font files in Assets <UNK> <UNK> Adding Wizard Mode to create setup wizards instead of <UNK>
# expect : Adding show/hide backbutton on Done fragment is shown
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ askForPermissions ( new String [ ] { <UNK> } , <UNK> ) ; // OR // Ensure your slide talks about both so as not to confuse the user . askForPermissions ( new String [ ] { <UNK> , <UNK> } , <UNK> ) ; `` ` + +We are using icons made by < a href= <UNK> http : <UNK> <UNK> title= <UNK> Freepik <UNK> > Freepik < /a > from < a href= <UNK> http : <UNK> <UNK> title=
# result : Cleaning code
# expect : Adding the fragment destroy <UNK> I am not sure about the stability but it does the necessary
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; +import <UNK> ; + public class LayoutUtil { + @ Deprecated public static boolean isRtl ( Resources resources ) { + return isRtl ( ) ; + } + + public static boolean isRtl ( ) { return <UNK> > = <UNK> - & & <UNK> ( ) <UNK> ( ) == <UNK> ; + & & <UNK> ( <UNK> ( ) ) == <UNK> ;
# result : check rtl
# expect : Get RTL status the right way
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < manifest xmlns : android= <UNK> http : <UNK> <UNK> package= <UNK> <UNK> <UNK> > - < application android : supportsRtl= <UNK> true <UNK> / > + < application > < /application > < /manifest > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class AppIntroBase extends AppCompatActivity implements } protected boolean isRtl ( ) { - return <UNK> ( getResources ( ) ) ; + return <UNK>
# result : Fix Issue <UNK> Helpers#isEmpty
# expect : check rtl
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class IntroActivity extends AppIntro { } `` ` -_Note above that we DID NOT use setContentView ( ) ; _ +_Note above that we DID NOT use ` setContentView ( ) ; ` _ Finally , declare the activity in your Manifest like so : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ allprojects { jcenter ( ) } } + +ext { + minSdkVersion = <UNK> + targetSdkVersion
# result : Quick <UNK>
# expect : - Consolidate Sample Activity intents into single switch <UNK> - Cleanup proguard <UNK> - Merge gradle build arguments for example app and <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ dependencies { compile project ( ' : hystrix-core ' ) compile <UNK> : <UNK> + testCompile <UNK> : <UNK> + testCompile <UNK> : <UNK> } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class HystrixServoMetricsPublisherCommand extends HystrixServoMetricsPubl return <UNK> ( eventType ) ; } - protected Monitor < ? > getCumulativeMonitor ( final String name , final HystrixEventType event ) { + protected Monitor < Number > getCumulativeMonitor (
# result : Added object pooling to HystrixLatencyDistribution
# expect : Track execution result of RESPONSE_FROM_CACHE
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ dependencies { compile project ( ' : hystrix-core ' ) compile <UNK> : <UNK> + testCompile <UNK> : <UNK> + testCompile <UNK> : <UNK> } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class HystrixServoMetricsPublisherCommand extends HystrixServoMetricsPubl return <UNK> ( eventType ) ; } - protected Monitor < ? > getCumulativeMonitor ( final String name , final HystrixEventType event ) { + protected Monitor < Number > getCumulativeMonitor (
# result : Added object pooling to HystrixLatencyDistribution
# expect : Ensure only a single thread can reset the command health stream
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ /** * Copyright <UNK> Netflix , <UNK> - * + * * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; * you may not use this file except in compliance with the License . * You may obtain a copy of the License at - * - * http : <UNK> - * + * + * http : <UNK> + * * Unless required by applicable law or agreed to in writing ,
# result : <UNK> imports
# expect : Design change to MetricsPublisher to remove the opportunity to make an implementation <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < img src= <UNK> https : <UNK> <UNK> > + # Hystrix : Latency and Fault Tolerance for Distributed Systems Hystrix is a latency and fault tolerance library designed to isolate points of access to remote systems , services and <UNK> party libraries , stop cascading failure and enable resilience in complex distributed systems where failure is inevitable .
# result : Refactors elasticsearch service and span name query to be like c*
# expect : dummy change
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # Hystrix Releases # + # # # Version <UNK> ( [ Maven Central ] ( http : <UNK> # search % <UNK> % <UNK> % <UNK> % <UNK> % <UNK> % <UNK> % <UNK> % <UNK> % <UNK> % <UNK> % <UNK> ) ) # # # + +* [ Pull <UNK> ] ( https : <UNK> ) Javanica : Allow for @ HystrixCommand to be used on parameterized return type +* [ Pull <UNK> ] ( https : <UNK>
# result : Fixed some assertions for <UNK> tests
# expect : First pass at comprehensive set of unit tests for execution hooks against <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class SplitterTest extends TestCase { } @ GwtIncompatible // <UNK> + public void testPatternSplitWordBoundary_singleCharInput ( ) { + String string = `` f <UNK> ; + Iterable < String > words = <UNK> ( <UNK> ( `` \\b <UNK> ) ) <UNK> ( string ) ; + assertThat ( words ) <UNK> ( `` f <UNK> ) <UNK> ( ) ; + } + + @ GwtIncompatible // <UNK> + public void testPatternSplitWordBoundary_singleWordInput ( ) { + String string =
# result : <UNK> request audio focus in IncomingRinger
# expect : Fix <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public final class Gson { private final Map < TypeToken < ? > , TypeAdapter < ? > > typeTokenCache = new ConcurrentHashMap < TypeToken < ? > , TypeAdapter < ? > > ( ) ; - private final List < TypeAdapterFactory > factories ; private final ConstructorConstructor constructorConstructor ;
# result : Reduce visibility of GsonBuilder <UNK>
# expect : Remove redundant <UNK>
# source : diff -- git a/gson/src/main/java/com/google/gson/internal/ $ Gson $ <UNK> b/gson/src/main/java/com/google/gson/internal/ $ Gson $ <UNK> index <UNK> <UNK> -- - a/gson/src/main/java/com/google/gson/internal/ $ Gson $ <UNK> +++ b/gson/src/main/java/com/google/gson/internal/ $ Gson $ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; +import <UNK> . * ; import static <UNK> $ Gson $ <UNK> ; import static <UNK> $ Gson $ <UNK> ; @ @ <UNK> <UNK> @ @ public final class $ Gson $ Types { } public static
# result : fix build errors
# expect : fix build errors
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ final class DefaultDateTypeAdapter extends TypeAdapter < Date > { @ Override public Date read ( JsonReader in ) throws IOException { - if ( <UNK> ( ) ! = <UNK> ) { - throw new JsonParseException ( `` The date should be a string value <UNK> ) ; + if ( <UNK> ( ) == <UNK> ) { + <UNK> ( ) ; + return null ; } Date date = deserializeToDate ( <UNK> ( ) ) ; if ( dateType
# result : Fixed DefaultDateTypeAdapter nullability issue and JSON primitives contract
# expect : Fixed DefaultDateTypeAdapter nullability issue and JSON primitives contract
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ final class DefaultDateTypeAdapter extends TypeAdapter < Date > { // See issue <UNK> @ Override public void write ( JsonWriter out , Date value ) throws IOException { + if ( value == null ) { + <UNK> ( ) ; + return ; + } synchronized ( localFormat ) { String dateFormatAsString = <UNK> ( value ) ; <UNK> ( dateFormatAsString ) ; @ @ <UNK> <UNK> @ @ final class DefaultDateTypeAdapter extends TypeAdapter < Date > { @ Override
# result : Fixed DefaultDateTypeAdapter nullability on write
# expect : Fixed DefaultDateTypeAdapter nullability on write
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public final class Gson { private final Map < TypeToken < ? > , TypeAdapter < ? > > typeTokenCache = new ConcurrentHashMap < TypeToken < ? > , TypeAdapter < ? > > ( ) ; - private final List < TypeAdapterFactory > factories ; private final ConstructorConstructor constructorConstructor ;
# result : Reduce visibility of GsonBuilder <UNK>
# expect : Add <UNK> <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < component name= <UNK> GradleSettings <UNK> > < option name= <UNK> linkedExternalProjectsSettings <UNK> > < GradleProjectSettings > - < option name= <UNK> distributionType <UNK> value= <UNK> LOCAL <UNK> / > + < option name= <UNK> distributionType <UNK> value= <UNK> DEFAULT_WRAPPED <UNK> / > < option name= <UNK> externalProjectPath <UNK> value= <UNK> $ PROJECT_DIR $ <UNK> / > < option name= <UNK> gradleHome <UNK> value= <UNK> $ APPLICATION_HOME_DIR $ <UNK> <UNK> / > < option name= <UNK> modules <UNK> > diff --
# result : 修改BaseQuickAdapter构造函数，去除new ArrayList
# expect : <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> <UNK> diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ -Luban \ No newline at end of file diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > - < project version= <UNK> <UNK> <UNK> > - < component name=
# result : upgrade lib version
# expect : del intellij idea config folder <UNK> add <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ [ ! [ Maven Central ] ( https : <UNK> ) ] ( https : <UNK> ) -Android Sliding Up Panel -========================= +Android Sliding Up Panel - Material Design +=========================================== +This is a fork of Umano Sliding Up Panel that aims to bring some Material Design features : + + # # # # Floating Action Button + +Added the ability to attach a Floating Action Button to the Sliding Up Panel ( as seen in the Google Maps Material Design
# result : Update <UNK>
# expect : Resolved conflicts
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - [ ! [ Maven Central ] ( https : <UNK> ) ] ( https : <UNK> ) + [ ! [ JitPack ] ( https : <UNK> ? label=JitPack ) ] ( ) +Android Sliding Up Panel - Material Design +=========================================== +This is a fork of Umano Sliding Up Panel that aims to bring some Material Design features : -Android Sliding Up Panel -========================= + # # # # Floating Action Button + +Added the ability to attach a Floating
# result : Update <UNK>
# expect : Merge branch <UNK> of <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - [ ! [ Maven Central ] ( https : <UNK> ) ] ( https : <UNK> ) + [ ! [ JitPack ] ( https : <UNK> ? label=JitPack ) ] ( ) +Android Sliding Up Panel - Material Design +=========================================== +This is a fork of Umano Sliding Up Panel that aims to bring some Material Design features : -Android Sliding Up Panel -========================= + # # # # Floating Action Button + +Added the ability to attach a Floating
# result : Update <UNK>
# expect : Adjust button movement dinamically to panel height changes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ [ ! [ Maven Central ] ( https : <UNK> ) ] ( https : <UNK> ) -Android Sliding Up Panel -========================= +Android Sliding Up Panel - Material Design +=========================================== +This is a fork of Umano Sliding Up Panel that aims to bring some Material Design features : + + # # # # Floating Action Button + +Added the ability to attach a Floating Action Button to the Sliding Up Panel ( as seen in the Google Maps Material Design
# result : Update <UNK>
# expect : Added documentation
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > - < manifest xmlns : android= <UNK> http : <UNK> <UNK> - package= <UNK> <UNK> <UNK> - android : versionCode= <UNK> <UNK> <UNK> - android : versionName= <UNK> <UNK> <UNK> > - - < uses-sdk - android : minSdkVersion= <UNK> <UNK> <UNK> - android : targetSdkVersion= <UNK> <UNK> <UNK> / > - - < application - android : allowBackup= <UNK> true <UNK> - android
# result : <UNK> archive the archive element
# expect : Use standart gradle source folders for <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > < classpath > < classpathentry exported= <UNK> true <UNK> kind= <UNK> con <UNK> path= <UNK> <UNK> <UNK> / > + < classpathentry kind= <UNK> con <UNK> path= <UNK> <UNK> <UNK> / > < classpathentry kind= <UNK> src <UNK> path= <UNK> src <UNK> / > < classpathentry kind= <UNK> src <UNK> path= <UNK> gen <UNK> / > - < classpathentry kind= <UNK> con <UNK> path= <UNK> <UNK> <UNK> /
# result : upstream changes
# expect : new support lib
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ buildscript { jcenter ( ) } dependencies { - classpath <UNK> : <UNK> + classpath <UNK> : <UNK> classpath <UNK> : <UNK> } } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public final class SelectionCreator { return this ; } + public SelectionCreator restrictTypes ( boolean restrict ) { + <UNK> = restrict ; + return this ; + } + /** * Add filter to filter each selecting
# result : fix use of variable
# expect : code refactoring
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ captures/ <UNK> # Keystore files <UNK> \ No newline at end of file <UNK> + <UNK> \ No newline at end of file diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class BottomBar extends LinearLayout implements <UNK> , Vie if ( defaultTabConfig == null ) { defaultTabConfig = getTabConfig ( ) ; } - + if ( tabContainer ! = null ) { + <UNK> ( ) ; +
# result : Merge remote-tracking branch <UNK> into releases
# expect : feat <UNK> ignore DS_store file for mac user
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ captures/ <UNK> # Keystore files <UNK> \ No newline at end of file <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android : components : - tools - platform-tools - - <UNK> + - <UNK> - <UNK> - <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android { } } <UNK> { - <UNK> <UNK> : <UNK>
# result : Fix for shadow <UNK>
# expect : Better <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < item name= <UNK> colorPrimary <UNK> > @ color/colorPrimary < /item > < item name= <UNK> colorPrimaryDark <UNK> > @ color/colorPrimaryDark < /item > < item name= <UNK> colorAccent <UNK> > @ color/colorAccent < /item > + < item name= <UNK> bb_background_color <UNK> > # <UNK> < /item > < /style > < /resources > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import
# result : update background color from java
# expect : Add background color attribute
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ -package <UNK> ; - -import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; - -import <UNK> ; - -/** - * An extension to { @ link ForegroundColorSpan } which allows updating the color or alpha component . - * Note that Spans can not invalidate themselves so consumers must ensure that the Spannable is - * refreshed themselves . - */ -public class TextColorSpan extends ForegroundColorSpan { - - private @ ColorInt int color
# result : Move missing resources to right places
# expect : Move even more transitions to base
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ All of these problems are encountered by many projects in the Android community # # # Non-Goals Changes to the styles , themes , icons , animations , transitions or any other UI elements that were the initial focus of Plaid , are outside the scope of this refactoring . + # # # Android Studio IDE setup + +Plaid uses [ ktlint ] ( https : <UNK> ) to enforce Kotlin coding styles . +Here <UNK> how to configure it
# result : Add instructions to configure Android Studio with ktlint
# expect : Update formatting
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_TableView_nativePivot /* * Class : io_realm_internal_TableView - * Method : nativeSync + * Method : nativeSyncIfNeeded * Signature : ( J ) J */ -JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSync +JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSyncIfNeeded ( JNIEnv * , jobject , jlong ) ; /* diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ inline bool view_valid_and_in_sync ( JNIEnv* env , jlong nativeViewPtr ) { ThrowException ( env , TableInvalid ,
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Added RealmList ConcurrentModification tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # Gradle build artifacts build realm/build + ! realm-transformer/src/main/kotlin/io/realm/transformer/build # Gradle cache <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> ( YYYY-MM-DD ) + + # # # Enhancements + +* The Realm Transformer now supports incremental builds ( # <UNK> ) . + + # # # Bug Fixes + +* Having files that ends with ` RealmProxy ` will no longer break the
# result : Correctly add files under build package
# expect : Merge branch <UNK> into cm/transformer-speed
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ set ( CMAKE_CXX_FLAGS_DEBUG `` -ggdb -Og -DNDEBUG <UNK> ) set ( CMAKE_CXX_FLAGS `` $ { CMAKE_CXX_FLAGS } $ { REALM_COMMON_CXX_FLAGS } $ { WARNING_CXX_FLAGS } $ { ABI_CXX_FLAGS } <UNK> ) # Set link flags -set ( REALM_LINKER_FLAGS `` <UNK> ) +set ( REALM_LINKER_FLAGS `` -Wl , -- wrap , memmove -Wl , -- wrap , memcpy <UNK> ) if ( build_SYNC ) set ( REALM_LINKER_FLAGS `` $ { REALM_LINKER_FLAGS } -lz <UNK> ) endif ( ) diff -- git <UNK>
# result : Merge remote-tracking branch <UNK> into mc/bug/hack-memmove
# expect : PR fix
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ -- -- -name : Bug report -about : You think you have found a bug ! - -- -- - - # # # # Goal - < ! -- What do you want to achieve ? -- > - - # # # # Actual Results - < ! -- What happened ? If an exception was thrown please copy/paste the stack trace from Logcat . -- > - - # # # # Steps & Code
# result : Squashed <UNK> content from commit <UNK>
# expect : Squashed <UNK> content from commit <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : Update core to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $
# result : Update android tools plugin to <UNK>
# expect : Update gradle to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + [ submodule `` realm/realm-library/src/main/cpp/object-store <UNK> ] + path = realm/realm-library/src/main/cpp/object-store + url = git @ <UNK> : <UNK> diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL
# result : Merge remote-tracking branch <UNK> into mc/feature/os-shared-realm
# expect : Use submodule instead of subtree
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + [ submodule `` realm/realm-library/src/main/cpp/object-store <UNK> ] + path = realm/realm-library/src/main/cpp/object-store + url = git @ <UNK> : <UNK> diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL
# result : Merge remote-tracking branch <UNK> into mc/feature/os-shared-realm
# expect : Attach to jvm when destruct java binding context
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class DynamicRealmObjectTests { // of failing values . Only difference is the wrong type column has to be different . List < String > args = ( type == <UNK> ) ? stringArguments : arguments ; try { - callGetter ( type , args ) ; + callGetter ( dObjTyped , type , args ) ; + fail ( ) ; + } catch ( IllegalArgumentException ignored ) { + } + try { + callGetter ( dObjDynamic , type
# result : reformat the code
# expect : fix a bug that <UNK> does not check the field <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Those were not kept by ProGuard : names of native methods not in the ` <UNK> ` package , names of classes used in method signature ( # <UNK> ) . * Missing ProGuard configuration for libraries used by Sync extension ( # <UNK> ) . +* Permission error when a database file is located at external storage ( # <UNK> ) . # # <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @
# result : skip an external storage test on the device where SELinux is not enforced
# expect : follow the chenges in object-store
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class SyncUserTests { SyncUser user = createTestUser ( ) ; <UNK> ( <UNK> ) ; - <UNK> ( `` password <UNK> , new <UNK> ( ) { + <UNK> ( `` password <UNK> , new <UNK> < SyncUser > ( ) { @ Override
# result : Refactored deprecated Callback
# expect : Refactored deprecated Callback
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Removed deprecated APIs ` <UNK> ( ) ` and ` <UNK> ( ) ` . Those do <UNK> have to be called anymore . * Removed deprecated API ` <UNK> ( ) ` . Use ` <UNK> ( ) ` instead . * Removed deprecated API ` <UNK> ( ) ` . Use ` <UNK> ( ) ` instead . +* ` <UNK> ` to becomes generic . +* Removed ` <UNK> ` method from public API , and rename
# result : revert to gradle <UNK>
# expect : update changelog
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ set ( CMAKE_CXX_FLAGS_DEBUG `` -ggdb -Og -DNDEBUG <UNK> ) set ( CMAKE_CXX_FLAGS `` $ { CMAKE_CXX_FLAGS } $ { REALM_COMMON_CXX_FLAGS } $ { WARNING_CXX_FLAGS } $ { ABI_CXX_FLAGS } <UNK> ) # Set link flags -set ( REALM_LINKER_FLAGS `` <UNK> ) +set ( REALM_LINKER_FLAGS `` -Wl , -- wrap , memmove <UNK> ) if ( build_SYNC ) set ( REALM_LINKER_FLAGS `` $ { REALM_LINKER_FLAGS } -lz <UNK> ) endif ( ) diff -- git <UNK> <UNK> index <UNK> <UNK> -- -
# result : Merge branch <UNK> of <UNK> into mc/bug/hack-memmove
# expect : Work around the memmove bug on sumsung device
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ endif ( ) set ( WARNING_CXX_FLAGS `` -Werror -Wall -Wextra -pedantic -Wmissing-declarations \ -Wempty-body -Wparentheses -Wunknown-pragmas -Wunreachable-code \ -Wno-missing-field-initializers -Wno-maybe-uninitialized -Wno-uninitialized <UNK> ) -set ( REALM_COMMON_CXX_FLAGS `` -DREALM_ANDROID -DREALM_HAVE_CONFIG -DPIC -pthread -fvisibility=hidden <UNK> -fsigned-char <UNK> ) +set ( REALM_COMMON_CXX_FLAGS `` -DREALM_ANDROID -DREALM_HAVE_CONFIG -DPIC -pthread -fvisibility=hidden <UNK> -fsigned-char -fno-builtin-memcpy -fno-builtin-memmove <UNK> ) if ( build_SYNC ) set ( REALM_COMMON_CXX_FLAGS `` $ { REALM_COMMON_CXX_FLAGS } <UNK> <UNK> ) endif ( ) @ @ <UNK> <UNK> @ @ set ( CMAKE_CXX_FLAGS_DEBUG `` -ggdb -Og
# result : Use <UNK> from FreeBSD
# expect : Switching to DRY <UNK> implementations
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Migration for linking objects is not yet supported . * Backlink verification is incomplete . Evil code can cause native crashes . * [ ObjectServer ] In case of a Client Reset , information about the location of the backed up Realm file is now reported through the ` ErrorHandler ` interface ( # <UNK> ) . +* The listener on ` RealmObject ` will only be triggered if the object changes ( # <UNK> ) . +* Added `
# result : Fix javadoc
# expect : Format code
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # Internal +* Upgraded to Realm Sync <UNK> . +* Upgraded to Realm Core <UNK> . + # # Credits diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # Realm Sync Core release used by Realm Java # https : <UNK> <UNK> <UNK> <UNK> <UNK> # Object Server Release used by Integration tests . Installed using NPM . # Use ` npm view realm-object-server versions ` to get a
# result : Update unit test
# expect : Linking to debug sync cuases magic <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT jboolean JNICALL Java_io_realm_internal_Collection_nativeDeleteFirst ( J return JNI_FALSE ; } -JNIEXPORT void JNICALL Java_io_realm_internal_Collection_nativeDelete ( JNIEnv* env , jclass , jlong native_ptr , - jlong index ) + # pragma GCC diagnostic push + # pragma GCC diagnostic ignored `` -Wunused-parameter <UNK> +JNIEXPORT void JNICALL Java_io_realm_internal_Collection_nativeSetNull ( JNIEnv* env , jclass , jlong native_ptr , jlong index ) + { + } + +JNIEXPORT void JNICALL Java_io_realm_internal_Collection_nativeSetBoolean ( JNIEnv* env , jclass , jlong native_ptr , jlong index , jboolean value
# result : Merge branch <UNK> into bulk/working
# expect : First pass design
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> ( YYYY-MM-DD ) + + # # # Enhancements +* Added new ` ImportFlag ` class that is used to specify additional behaviour when importing + data into Realm [ # <UNK> ] ( https : <UNK> ) . +* Added support for ` ImportFlag ` to ` <UNK> ( ) ` and ` <UNK> ( ) ` [ # <UNK> ] ( https : <UNK> ) . + + # # # Internal +* Optimized `
# result : <UNK> Testing only String
# expect : <UNK> Disable string key
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> ( <UNK> ) + + # # # Fixes +* ` RealmResults ` listeners not triggering the initial callback for Query-based Realm when the device is offline [ # <UNK> ] ( https : <UNK> ) . + + + # # <UNK> ( <UNK> ) + + # # # Enhancements +* Added new ` ImportFlag ` class that is used to specify additional behaviour when importing + data into Realm [ # <UNK> ] (
# result : Prepare <UNK>
# expect : Prepare next beta release
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - # # <UNK> ? . ? ( <UNK> ) + # # <UNK> ( YYYY-MM-DD ) # # # Enhancements * None @ @ <UNK> <UNK> @ @ # # <UNK> ( YYYY-MM-DD ) +This release also contains all changes in <UNK> and <UNK> . + # # # Enhancements * [ ObjectServer ] Added Subscription class available to Query-based Realms . This exposes a Subscription more directly . This class is in beta . [ # <UNK> ] (
# result : Fix example
# expect : Merge branch <UNK> into gbm/bulk-update
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - # # <UNK> ? . ? ( <UNK> ) + # # <UNK> ( YYYY-MM-DD ) # # # Enhancements * None @ @ <UNK> <UNK> @ @ # # <UNK> ( YYYY-MM-DD ) +This release also contains all changes in <UNK> and <UNK> . + # # # Enhancements * [ ObjectServer ] Added Subscription class available to Query-based Realms . This exposes a Subscription more directly . This class is in beta . [ # <UNK> ] (
# result : Fix example
# expect : Doc fixes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ set ( CMAKE_CXX_FLAGS_DEBUG `` -ggdb -Og -DNDEBUG <UNK> ) set ( CMAKE_CXX_FLAGS `` $ { CMAKE_CXX_FLAGS } $ { REALM_COMMON_CXX_FLAGS } $ { WARNING_CXX_FLAGS } $ { ABI_CXX_FLAGS } <UNK> ) # Set link flags -set ( REALM_LINKER_FLAGS `` <UNK> ) +set ( REALM_LINKER_FLAGS `` -Wl , -- wrap , memmove <UNK> ) if ( build_SYNC ) set ( REALM_LINKER_FLAGS `` $ { REALM_LINKER_FLAGS } -lz <UNK> ) endif ( ) diff -- git <UNK> <UNK> index <UNK> <UNK> -- -
# result : Merge branch <UNK> of <UNK> into mc/bug/hack-memmove
# expect : Work around the memmove bug on sumsung device
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/build diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> + +android { + compileSdkVersion <UNK> + buildToolsVersion <UNK> + + defaultConfig { + applicationId `` <UNK> <UNK> + targetSdkVersion <UNK> + minSdkVersion <UNK> + versionCode <UNK> + versionName `` <UNK> <UNK> + } + buildTypes { + release
# result : Test case fix
# expect : Add multi process <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_SharedRealm_nativeInit ( JNIEnv* env JNIEXPORT jlong JNICALL Java_io_realm_internal_SharedRealm_nativeCreateConfig ( JNIEnv* env , jclass , jstring realm_path , jbyteArray key , jbyte schema_mode , jboolean in_memory , jboolean cache , jlong /* schema_version */ , jboolean enable_format_upgrade , jboolean auto_change_notification , + jobject compact_on_launch , REALM_UNUSED jstring sync_server_url , REALM_UNUSED jstring sync_server_auth_url , REALM_UNUSED jstring sync_user_identity , REALM_UNUSED jstring sync_refresh_token , REALM_UNUSED jboolean sync_client_validate_ssl , REALM_UNUSED jstring sync_ssl_trust_certificate_path ) @ @ <UNK> <UNK> @ @ JNIEXPORT jlong JNICALL Java_io_realm_internal_SharedRealm_nativeCreateConfig
# result : Throw an exception if it is read-only <UNK>
# expect : Implement <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmProxyClassGenerator { <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; - <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; @ @ <UNK> <UNK> @ @ public class RealmProxyClassGenerator { // fields for ( VariableElement variableElement : <UNK> ( ) ) { <UNK> ( `` long <UNK>
# result : add javadoc comments
# expect : remove empty line
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Added ` <UNK> ( ) ` , ` <UNK> ( obj ) ` and ` <UNK> ( ) ` ( # <UNK> ) . * Added ` <UNK> ( File ) ` . * ` RealmLog ` has been moved to the public API . It is now possible to control which events Realm emit to Logcat . See the ` RealmLog ` class for more details . +* Typed ` RealmObject ` s can now continue to access their
# result : remove copyFrom to copyColumnInfoFrom
# expect : remove type check in <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Added ` <UNK> ( ) ` , ` <UNK> ( obj ) ` and ` <UNK> ( ) ` ( # <UNK> ) . * Added ` <UNK> ( File ) ` . * ` RealmLog ` has been moved to the public API . It is now possible to control which events Realm emit to Logcat . See the ` RealmLog ` class for more details . +* Typed ` RealmObject ` s can now continue to access their
# result : remove copyFrom to copyColumnInfoFrom
# expect : make ColumnInfo CLoneable
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > + < lint > + < ! -- Disable the given check in this project -- > + < issue id= <UNK> AllowBackup <UNK> severity= <UNK> ignore <UNK> / > + < issue id= <UNK> IconLauncherShape <UNK> severity= <UNK> ignore <UNK> / > + < issue id= <UNK> IconMissingDensityFolder <UNK> severity= <UNK> ignore <UNK> / > + < issue id= <UNK> GoogleAppIndexingWarning <UNK> severity=
# result : fix lint warnnings for threadExample
# expect : fix lint warnnings for moduleExample
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/build diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +apply plugin : <UNK> + +android { + compileSdkVersion <UNK> + buildToolsVersion `` <UNK> <UNK> + + defaultConfig { + applicationId `` <UNK> <UNK> + minSdkVersion <UNK> + targetSdkVersion <UNK> + versionCode <UNK> + versionName `` <UNK> <UNK> + } + buildTypes { + release { + minifyEnabled false + proguardFiles getDefaultProguardFile ( <UNK> '
# result : Add missing image
# expect : initial project setup
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/build diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +apply plugin : <UNK> +apply plugin : <UNK> + +android { + compileSdkVersion <UNK> + buildToolsVersion `` <UNK> <UNK> + + defaultConfig { + applicationId `` <UNK> <UNK> + minSdkVersion <UNK> + targetSdkVersion <UNK> + versionCode <UNK> + versionName `` <UNK> <UNK> + } + buildTypes { + release { + minifyEnabled false + proguardFiles
# result : add <UNK> <UNK> button
# expect : implement keystore/fingerprint logic
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Bug fixes * Fixed a wrong JNI method declaration which might cause `` method not found <UNK> crash on some devices . -* Fixed a bug that ` Error ` in the background async thread is not forwared to the caller thread . +* Fixed a bug that ` Error ` in the background async thread is not forwarded to the caller thread . * Fixed a crash when an empty ` Collection ` is passed to `
# result : PR comments
# expect : PR comments
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # Internal +* Upgraded to Realm Sync <UNK> . +* Upgraded to Realm Core <UNK> . + # # Credits diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # Realm Sync Core release used by Realm Java # https : <UNK> <UNK> <UNK> <UNK> <UNK> # Object Server Release used by Integration tests . Installed using NPM . # Use ` npm view realm-object-server versions ` to get a
# result : Update unit test
# expect : Linking to debug sync cuases magic <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # Internal +* Upgraded to Realm Sync <UNK> . +* Upgraded to Realm Core <UNK> . + # # Credits diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # Realm Sync Core release used by Realm Java # https : <UNK> <UNK> <UNK> <UNK> <UNK> # Object Server Release used by Integration tests . Installed using NPM . # Use ` npm view realm-object-server versions ` to get a
# result : Update unit test
# expect : Update to <UNK> <UNK> and Core <UNK> <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + # CMake <UNK> <UNK> <UNK> +CMakeFiles/ +Makefile <UNK> <UNK> <UNK> + + # Build products <UNK> <UNK> +tests/tests diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + [ submodule `` external/pegtl <UNK> ] + path = external/pegtl + url = https : <UNK> + [ submodule `` external/catch <UNK> ] + path = external/catch + url = https : <UNK> diff -- git
# result : Merge pull request <UNK> from realm/mc/feature/os-subtree
# expect : Merge commit <UNK> into feature/object-store
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ task distributionJniUnstrippedPackage ( type : Zip ) { archiveName = `` realm-java-jni-libs-unstripped- $ { currentVersion } <UNK> <UNK> destinationDir = file ( `` $ { buildDir } /outputs/distribution <UNK> ) - from ( `` realm/realm-jni/build/outputs/jniLibs-unstripped <UNK> ) { + from ( `` realm/realm-library/build/outputs/jniLibs-unstripped <UNK> ) { include <UNK>
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : Merge remote-tracking branch <UNK> into feature/object-store
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : JNI size should return a value
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : Make nativeCloseSharedRealm private
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + [ submodule `` realm/realm-library/src/main/cpp/object-store <UNK> ] + path = realm/realm-library/src/main/cpp/object-store + url = git @ <UNK> : <UNK> diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL
# result : Merge remote-tracking branch <UNK> into mc/feature/os-shared-realm
# expect : Enable OS notification
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + [ submodule `` realm/realm-library/src/main/cpp/object-store <UNK> ] + path = realm/realm-library/src/main/cpp/object-store + url = git @ <UNK> : <UNK> diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL
# result : Merge remote-tracking branch <UNK> into mc/feature/os-shared-realm
# expect : Stupid mistake
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmTests { } @ Test - @ UiThreadTest - public void internalRealmChangedHandlersRemoved ( ) { - <UNK> ( ) ; // Clear handler created by testRealm in setUp ( ) - assertEquals ( 0 , <UNK> ( ) <UNK> ( ) ) ; - final String REALM_NAME = `` test-internalhandlers <UNK> ; - RealmConfiguration realmConfig = <UNK> ( REALM_NAME ) ; - <UNK> ( realmConfig ) ; - - // Open and close first instance of a Realm -
# result : Merge remote-tracking branch <UNK> into mc/feature/os-notification
# expect : Merge remote-tracking branch <UNK> into mc/feature/os-notification
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Enhancements +* Added ` <UNK> ( ) ` to compact the file on launch ( # <UNK> ) . + # # # Bug Fixes # # # Internal diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmConfigurationTests { } catch ( IllegalStateException ignored ) { } } + + @ Test + public void readOnly_compactOnLaunch_throws ( ) { + try { + new <UNK>
# result : PR <UNK>
# expect : PR <UNK> Remove <UNK> <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class RealmListTests extends CollectionTests { private RealmList < Dog > createDeletedRealmList ( ) { Owner owner =
# result : make <UNK> delete target <UNK>
# expect : added test cases exposing <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : use fqcn when makeing a string of value <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : use <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : add class comment to TypeMirrors
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking Changes * ` <UNK> ( ) ` / ` <UNK> ( ) ` have been removed . Use ` <UNK> ( ) ` / ` <UNK> ( ) ` instead . +* ` <UNK> ( Realm , Class ) ` , ` <UNK> ( DynamicRealm , String ) ` , ` <UNK> ( RealmResults ) ` and ` <UNK> ( RealmList ) ` have been removed . Use ` <UNK> ( Class ) ` , ` <UNK>
# result : Merge branch <UNK> into <UNK>
# expect : fix test case name
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Unit tests in Android library projects now detect Realm model classes . * ` <UNK> ( ) ` / ` stopWaitForChange ( ) ` and ` <UNK> ( ) ` / ` stopWaitForChange ( ) ` ( # <UNK> ) . + # # # Bug fixes + +* ` RealmChangeListener ` on ` RealmObject ` is not triggered when adding listener on returned ` RealmObject ` of ` copyToRealmOrUpdate ( ) ` . ( # <UNK> ) + #
# result : Add to realmObjects when addChangeListener called
# expect : Add to realmObjects when addChangeListener called
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Internal * Updated Realm Core to <UNK> . +* Improved sorting speed . # # <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> + +android { + compileSdkVersion <UNK> + buildToolsVersion <UNK> + + defaultConfig { + applicationId <UNK> + targetSdkVersion <UNK> + minSdkVersion <UNK> + versionCode
# result : Fix C++ headers
# expect : Merge branch <UNK> into cm/sync-api
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Internal * Updated Realm Core to <UNK> . +* Improved sorting speed . # # <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> + +android { + compileSdkVersion <UNK> + buildToolsVersion <UNK> + + defaultConfig { + applicationId <UNK> + targetSdkVersion <UNK> + minSdkVersion <UNK> + versionCode
# result : Fix C++ headers
# expect : Backup
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Internal * Updated Realm Core to <UNK> . +* Improved sorting speed . # # <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> + +android { + compileSdkVersion <UNK> + buildToolsVersion <UNK> + + defaultConfig { + applicationId <UNK> + targetSdkVersion <UNK> + minSdkVersion <UNK> + versionCode
# result : Fix C++ headers
# expect : Properly start session when opening <UNK> Improved session state <UNK>
# source : diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ RUN DEBIAN_FRONTEND=noninteractive dpkg -- add-architecture <UNK> \ build-essential \ <UNK> \ <UNK> : <UNK> <UNK> : <UNK> <UNK> : <UNK> <UNK> : <UNK> <UNK> : <UNK> \ - <UNK> \ + <UNK> lsof nodejs\ & & apt-get clean # Install the Android SDK diff -- git a/Jenkinsfile b/Jenkinsfile index <UNK> <UNK> -- - a/Jenkinsfile +++ b/Jenkinsfile @ @ <UNK> <UNK> @ @ try { // Make sure not to delete the folder that Jenkins allocates to store scripts sh <UNK> clean
# result : adding lsof command to Docker image
# expect : adding test report
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Internal * Updated Realm Core to <UNK> . +* Improved sorting speed . # # <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ allprojects { maven { url <UNK> : <UNK> ' } } dependencies { - classpath <UNK> : <UNK> + classpath <UNK> : <UNK> classpath <UNK> : <UNK> classpath <UNK> : <UNK> classpath <UNK> : <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK>
# result : Fix return type
# expect : Fix Gradle version
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Internal * Updated Realm Core to <UNK> . +* Improved sorting speed . # # <UNK> diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ RUN DEBIAN_FRONTEND=noninteractive dpkg -- add-architecture <UNK> \ & & apt-get clean # Install the Android SDK -RUN cd /opt & & wget -q https : <UNK> -O <UNK> -RUN cd /opt & & tar -xvzf <UNK> -RUN cd /opt & & rm -f
# result : Fix another lint check
# expect : Add logout button to example
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Internal * Updated Realm Core to <UNK> . +* Improved sorting speed . # # <UNK> diff -- git a/Jenkinsfile b/Jenkinsfile index <UNK> <UNK> -- - a/Jenkinsfile +++ b/Jenkinsfile @ @ <UNK> <UNK> @ @ try { publishHTML ( target : [ allowMissing : false , alwaysLinkToLastBuild : false , keepAll : true , reportDir : <UNK> ' , reportFiles : <UNK> ' , reportName : <UNK> issues ' ] ) publishHTML ( target : [ allowMissing :
# result : Fix git module url
# expect : Revert wrong renames
# source : diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ RUN DEBIAN_FRONTEND=noninteractive dpkg -- add-architecture <UNK> \ curl \ file \ git \ + iptables \ <UNK> : <UNK> \ <UNK> : <UNK> \ <UNK> : <UNK> \ diff -- git a/Jenkinsfile b/Jenkinsfile index <UNK> <UNK> -- - a/Jenkinsfile +++ b/Jenkinsfile @ @ <UNK> <UNK> @ @ import <UNK> def buildSuccess = false +def rosContainer try { node ( <UNK> ' ) { // Allocate a custom workspace to avoid having % in the path ( it breaks ld ) @
# result : Forward localhost ports to ros docker
# expect : Parse sysctl when run docker
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : Add shared realm compact
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : Merge remote-tracking branch <UNK> into feature/object-store
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class NotificationsTest { } @ Test - @ UiThreadTest - public void handlerNotRemovedToSoon ( ) { - RealmConfiguration realmConfig = <UNK> ( `` private-realm <UNK> ) ; - <UNK> ( realmConfig ) ; - Realm <UNK> = <UNK> ( realmConfig ) ; - Realm <UNK> = <UNK> ( realmConfig ) ; - assertEquals ( <UNK> ( ) , <UNK> ( ) ) ; - assertNotNull ( <UNK> ) ; - - // If multiple instances are open on the same
# result : Fix build
# expect : PR fix
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/build diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> + +android { + compileSdkVersion <UNK> + buildToolsVersion <UNK> + + defaultConfig { + applicationId `` <UNK> <UNK> + targetSdkVersion <UNK> + minSdkVersion <UNK> + versionCode <UNK> + versionName `` <UNK> <UNK> + } + buildTypes { + release
# result : Test case fix
# expect : Send REALM_CHANGE manually for async transaction
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/build diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> + +android { + compileSdkVersion <UNK> + buildToolsVersion <UNK> + + defaultConfig { + applicationId `` <UNK> <UNK> + targetSdkVersion <UNK> + minSdkVersion <UNK> + versionCode <UNK> + versionName `` <UNK> <UNK> + } + buildTypes { + release
# result : Test case fix
# expect : Make mysterious test case simpler
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Disabled ` <UNK> ( ) ` when sync is enabled as it might corrupt the Realm ( https : <UNK> ) . + # # # Bug fixes + +* Fixed `` operation not permitted <UNK> issue when create Realm file on some devices ' external storage ( # <UNK> ) . + # # # Enhancements -* All major public classes are now non-final . This is mostly a compromise to - support Mockito . All protected fields/methods are
# result : Merge remote-tracking branch <UNK> into <UNK>
# expect : Call npm init for ROS docker
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class BytecodeModifier { * @ param clazz The CtClass to modify * @ param managedFields List of fields whose access should be replaced */ - public static void useRealmAccessors ( CtClass clazz , List < CtField > managedFields , List < CtClass > modelClasses ) { + public static void useRealmAccessors ( CtClass clazz , List < CtField > managedFields ) { <UNK> ( ) <UNK> { behavior - > <UNK> `` Behavior : $ { <UNK> } <UNK> if (
# result : add more tests for default value
# expect : supports default value of RealmList fields
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> { <UNK> 0 , <UNK> } +static String getAppId ( path ) { + String build = new File ( path ) <UNK> + def matcher = build =~ <UNK> . <UNK> + def appId = <UNK> ( ) > 0 ? matcher [ 0 ] <UNK> ( ) - <UNK> ' - ~/\s/ : `` ; + String myappId = <UNK> ( ' <UNK> ' , `` ) + myappId = <UNK> ( <UNK> <UNK> , `` ) +
# result : revert version
# expect : revert version
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class BytecodeModifier { * @ param clazz The CtClass to modify * @ param managedFields List of fields whose access should be replaced */ - public static void useRealmAccessors ( CtClass clazz , List < CtField > managedFields , List < CtClass > modelClasses ) { + public static void useRealmAccessors ( CtClass clazz , List < CtField > managedFields ) { <UNK> ( ) <UNK> { behavior - > <UNK> `` Behavior : $ { <UNK> } <UNK> if (
# result : add more tests for default value
# expect : update javadoc comments of createObject
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # <UNK> - # # # Known issues - -* When creating a ` RealmObject ` from a JSON stream , it will take the default values defined by its default constructor for those fields that are not defined in the JSON object . This behaviour is different from other APIs when creating ` RealmObject ` s . - # # # Breaking Changes * ` isValid ( ) ` now always returns ` true ` instead of ` false
# result : review comments
# expect : review comments
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - ` RealmIOExcpetion ` has been removed and replaced by ` RealmFileException ` . * Removed ` <UNK> ( Context , File ) ` and ` <UNK> ( File ) ` constructors . * ` <UNK> ( Context , String ) ` has been renamed to ` <UNK> ( String ) ` . +* ` <UNK> ( Class < E > ) ` and ` <UNK> ( String ) ` throws a ` RealmException ` if they are called to create
# result : Create object without setting PK is not allowed
# expect : Create object without setting PK is not allowed
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - ` RealmIOExcpetion ` has been removed and replaced by ` RealmFileException ` . * Removed ` <UNK> ( Context , File ) ` and ` <UNK> ( File ) ` constructors . * ` <UNK> ( Context , String ) ` has been renamed to ` <UNK> ( String ) ` . +* ` <UNK> ( Class < E > ) ` and ` <UNK> ( String ) ` throws ` RealmException ` if they are called to create an
# result : Remove dup lines
# expect : Change log and java doc fix
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - ` RealmIOExcpetion ` has been removed and replaced by ` RealmFileException ` . * Removed ` <UNK> ( Context , File ) ` and ` <UNK> ( File ) ` constructors . * ` <UNK> ( Context , String ) ` has been renamed to ` <UNK> ( String ) ` . +* ` <UNK> ( Class < E > ) ` and ` <UNK> ( String ) ` throws ` RealmException ` if they are called to create an
# result : Remove dup lines
# expect : Update javadoc for json APIs
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - ` RealmIOExcpetion ` has been removed and replaced by ` RealmFileException ` . * Removed ` <UNK> ( Context , File ) ` and ` <UNK> ( File ) ` constructors . * ` <UNK> ( Context , String ) ` has been renamed to ` <UNK> ( String ) ` . +* ` <UNK> ( Class < E > ) ` and ` <UNK> ( String ) ` throws ` RealmException ` if they are called to create an
# result : Remove dup lines
# expect : Fix grammar
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> ( YYYY-MM-DD ) + + # # # Bug Fixes + +* [ ObjectServer ] Using Android Network Security Configuration is necessary to install the custom root CA for tests ( API > = <UNK> ) ( # <UNK> ) . + + # # <UNK> ( <UNK> ) # # # Bug Fixes diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < application android :
# result : Fix test
# expect : Update changelog
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ and ` SyncUser # retrieveInfoForUserAsync ` which returns a ` SyncUserInfo ` with mode * ` <UNK> ( String ) ` and ` <UNK> ( String ) ` did not accept class name whose length was <UNK> to <UNK> . * Workaround for an Android JVM crash when using ` compactOnLaunch ( ) ` ( # <UNK> ) . * Class name in exception message from link query is wrong ( # <UNK> ) . +* Exposing a ` SyncConfiguration `
# result : add @Nullable annotation
# expect : remove unnecessary variable in tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ and ` SyncUser # retrieveInfoForUserAsync ` which returns a ` SyncUserInfo ` with mode * ` <UNK> ( String ) ` and ` <UNK> ( String ) ` did not accept class name whose length was <UNK> to <UNK> . * Workaround for an Android JVM crash when using ` compactOnLaunch ( ) ` ( # <UNK> ) . * Class name in exception message from link query is wrong ( # <UNK> ) . +* Exposing a ` RealmConfiguration `
# result : PR <UNK> add option to pass in the encryption key + test
# expect : PR <UNK> moving `forOffline` definition to RealmConfiguration
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> - # Object Server Release used by Integration tests - # Stable releases : https : <UNK> ? filter=debs - # Beta releases : https : <UNK> ? filter=debs - # Developer builds : https : <UNK> ? filter=debs - # /tools/sync_test_server/Dockerfile specify which repo ( apt ) we should - # install/use between <UNK> ' , <UNK> ' and <UNK> ' , the version below should - # correspond to an existing version on the *specified* repo .
# result : Use default admin user + disable SSL tests
# expect : Update to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> - # Object Server Release used by Integration tests - # Stable releases : https : <UNK> ? filter=debs - # Beta releases : https : <UNK> ? filter=debs - # Developer builds : https : <UNK> ? filter=debs - # /tools/sync_test_server/Dockerfile specify which repo ( apt ) we should - # install/use between <UNK> ' , <UNK> ' and <UNK> ' , the version below should - # correspond to an existing version on the *specified* repo .
# result : Use default admin user + disable SSL tests
# expect : Attempt at new logic for detecting ROS is running
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> - # Object Server Release used by Integration tests - # Stable releases : https : <UNK> ? filter=debs - # Beta releases : https : <UNK> ? filter=debs - # Developer builds : https : <UNK> ? filter=debs - # /tools/sync_test_server/Dockerfile specify which repo ( apt ) we should - # install/use between <UNK> ' , <UNK> ' and <UNK> ' , the version below should - # correspond to an existing version on the *specified* repo .
# result : Use default admin user + disable SSL tests
# expect : Use /health/ check to determine if ROS is running
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> - # Object Server Release used by Integration tests - # Stable releases : https : <UNK> ? filter=debs - # Beta releases : https : <UNK> ? filter=debs - # Developer builds : https : <UNK> ? filter=debs - # /tools/sync_test_server/Dockerfile specify which repo ( apt ) we should - # install/use between <UNK> ' , <UNK> ' and <UNK> ' , the version below should - # correspond to an existing version on the *specified* repo .
# result : Use default admin user + disable SSL tests
# expect : Retry server stop in case of <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Bug Fixes * Throw ` IllegalArgumentException ` instead of ` IllegalStateException ` when calling string/binary data setters if the data length exceeds the limit . -* Exposing a ` RealmConfiguration ` that allows a user to open the backup Realm after the client reset ( # <UNK> ) . +* Exposing a ` RealmConfiguration ` that allows a user to open the backup Realm after the client reset ( # <UNK> ) ( # <UNK> ) . #
# result : Merge remote-tracking branch <UNK> into nh/offline-client-reset
# expect : Refactoring test
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Bug Fixes * Throw ` IllegalArgumentException ` instead of ` IllegalStateException ` when calling string/binary data setters if the data length exceeds the limit . -* Exposing a ` RealmConfiguration ` that allows a user to open the backup Realm after the client reset ( # <UNK> ) . +* Exposing a ` RealmConfiguration ` that allows a user to open the backup Realm after the client reset ( # <UNK> # <UNK> ) . # # #
# result : PR feedback
# expect : PR <UNK> also add back `isRecoveryConfiguration` so we can use a different schemaMode <UNK> and keep the <UNK> for non backup Realms
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ and ` SyncUser # retrieveInfoForUserAsync ` which returns a ` SyncUserInfo ` with mode * ` <UNK> ( String ) ` and ` <UNK> ( String ) ` did not accept class name whose length was <UNK> to <UNK> . * Workaround for an Android JVM crash when using ` compactOnLaunch ( ) ` ( # <UNK> ) . * Class name in exception message from link query is wrong ( # <UNK> ) . +* Exposing a ` SyncConfiguration `
# result : add @Nullable annotation
# expect : Merge remote-tracking branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ and ` SyncUser # retrieveInfoForUserAsync ` which returns a ` SyncUserInfo ` with mode * ` <UNK> ( String ) ` and ` <UNK> ( String ) ` did not accept class name whose length was <UNK> to <UNK> . * Workaround for an Android JVM crash when using ` compactOnLaunch ( ) ` ( # <UNK> ) . * Class name in exception message from link query is wrong ( # <UNK> ) . +* Exposing a ` SyncConfiguration `
# result : add @Nullable annotation
# expect : add option to set the `force_sync_history` option
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> - # Object Server Release used by Integration tests - # Stable releases : https : <UNK> ? filter=debs - # Beta releases : https : <UNK> ? filter=debs - # Developer builds : https : <UNK> ? filter=debs - # /tools/sync_test_server/Dockerfile specify which repo ( apt ) we should - # install/use between <UNK> ' , <UNK> ' and <UNK> ' , the version below should - # correspond to an existing version on the *specified* repo .
# result : Use default admin user + disable SSL tests
# expect : Use Node image instead of Ubuntu
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> - # Object Server Release used by Integration tests - # Stable releases : https : <UNK> ? filter=debs - # Beta releases : https : <UNK> ? filter=debs - # Developer builds : https : <UNK> ? filter=debs - # /tools/sync_test_server/Dockerfile specify which repo ( apt ) we should - # install/use between <UNK> ' , <UNK> ' and <UNK> ' , the version below should - # correspond to an existing version on the *specified* repo .
# result : Use default admin user + disable SSL tests
# expect : Fix local check + ignore more unit <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> - # Object Server Release used by Integration tests - # Stable releases : https : <UNK> ? filter=debs - # Beta releases : https : <UNK> ? filter=debs - # Developer builds : https : <UNK> ? filter=debs - # /tools/sync_test_server/Dockerfile specify which repo ( apt ) we should - # install/use between <UNK> ' , <UNK> ' and <UNK> ' , the version below should - # correspond to an existing version on the *specified* repo .
# result : Use default admin user + disable SSL tests
# expect : Fix retrieveUserInfo <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> - # Object Server Release used by Integration tests - # Stable releases : https : <UNK> ? filter=debs - # Beta releases : https : <UNK> ? filter=debs - # Developer builds : https : <UNK> ? filter=debs - # /tools/sync_test_server/Dockerfile specify which repo ( apt ) we should - # install/use between <UNK> ' , <UNK> ' and <UNK> ' , the version below should - # correspond to an existing version on the *specified* repo .
# result : Use default admin user + disable SSL tests
# expect : Using a custom ConnectionPool to control idleConnection <UNK> test suite incapable of stopping the ROS <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + # CMake <UNK> <UNK> <UNK> +CMakeFiles/ +Makefile <UNK> <UNK> <UNK> + + # Build products <UNK> <UNK> +tests/tests diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + [ submodule `` external/pegtl <UNK> ] + path = external/pegtl + url = https : <UNK> + [ submodule `` external/catch <UNK> ] + path = external/catch + url = https : <UNK> diff -- git
# result : Merge pull request <UNK> from realm/mc/feature/os-subtree
# expect : Merge commit <UNK> into feature/object-store
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : Add wait for change
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : JNI size should return a value
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : Fix preprocessor test case
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + [ submodule `` realm/realm-library/src/main/cpp/object-store <UNK> ] + path = realm/realm-library/src/main/cpp/object-store + url = git @ <UNK> : <UNK> diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL
# result : Merge remote-tracking branch <UNK> into mc/feature/os-shared-realm
# expect : Use submodule instead of subtree
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : remove subtree
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + [ submodule `` realm/realm-library/src/main/cpp/object-store <UNK> ] + path = realm/realm-library/src/main/cpp/object-store + url = git @ <UNK> : <UNK> diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL
# result : Merge remote-tracking branch <UNK> into mc/feature/os-shared-realm
# expect : Merge remote-tracking branch <UNK> into mc/feature/os-shared-realm
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + [ submodule `` realm/realm-library/src/main/cpp/object-store <UNK> ] + path = realm/realm-library/src/main/cpp/object-store + url = git @ <UNK> : <UNK> diff -- git a/Jenkinsfile b/Jenkinsfile index <UNK> <UNK> -- - a/Jenkinsfile +++ b/Jenkinsfile @ @ <UNK> <UNK> @ @ try { checkout scm // Make sure not to delete the folder that Jenkins allocates to store scripts sh <UNK> clean -ffdx -e . ? ? ? ? ? ? ? ? ' + // Update submodule for object-store +
# result : Remove useless line
# expect : Force submodule update
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Fixed a potential cause for Realm file corruptions ( never reported ) . * Add ` @ Override ` annotation to proxy class accessors and stop using raw type in proxy classes in order to remove warnings from javac ( # <UNK> ) . * ` findFirstAsync ( ) ` now returns an invalid object if there is no object matches the query condition instead of running the query repeatedly until it can find one ( # <UNK> ) .
# result : Comments fix
# expect : PR fix
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Bug in ` isNull ( ) ` , ` isNotNull ( ) ` , ` isEmpty ( ) ` , and ` isNotEmpty ( ) ` when queries involve nullable fields in link queries ( # <UNK> ) . * Bug in how to resolve field names when querying ` @ LinkingObjects ` as the last field ( # <UNK> ) . * Rare crash in ` RealmLog ` when log level was set to ` <UNK> ` . +*
# result : Adapt DescriptorOdering changes in Object Store
# expect : Update Object Store
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/build diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> + +android { + compileSdkVersion <UNK> + buildToolsVersion <UNK> + + defaultConfig { + applicationId `` <UNK> <UNK> + targetSdkVersion <UNK> + minSdkVersion <UNK> + versionCode <UNK> + versionName `` <UNK> <UNK> + } + buildTypes { + release
# result : Test case fix
# expect : Example fix
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/build diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> + +android { + compileSdkVersion <UNK> + buildToolsVersion <UNK> + + defaultConfig { + applicationId `` <UNK> <UNK> + targetSdkVersion <UNK> + minSdkVersion <UNK> + versionCode <UNK> + versionName `` <UNK> <UNK> + } + buildTypes { + release
# result : Test case fix
# expect : Merge remote-tracking branch <UNK> into mc-multi-process
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> ( YYYY-MM-DD ) + + # # # Enhancements + +* Added support for mapping between a Java name and the underlying name in the Realm file using ` @ RealmModule ` , ` @ RealmClass ` and ` @ RealmField ` annotations ( # <UNK> ) . + + # # <UNK> ( <UNK> ) # # # Bug Fixes diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK>
# result : Unify build tools
# expect : RealmField is now retained at Runtime
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> ( YYYY-MM-DD ) + + # # # Enhancements + +* Added support for mapping between a Java name and the underlying name in the Realm file using ` @ RealmModule ` , ` @ RealmClass ` and ` @ RealmField ` annotations ( # <UNK> ) . + + # # <UNK> ( <UNK> ) # # # Internal diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK>
# result : More PR feedback
# expect : PR feedback
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Internal +* Use separated locks for different ` RealmCache ` s ( $ <UNK> ) . + # # <UNK> # # Bug fixes diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmCacheTests { <UNK> ( ) ; // <UNK> . Deletes the old Realm . - <UNK> ( config ) ; + assertTrue ( <UNK> ( config ) ) ; // <UNK> . Renames
# result : Fix comment
# expect : Close in finally
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmProcessor extends AbstractProcessor { private final Set < Backlink > backlinksToValidate = new HashSet < Backlink > ( ) ; private boolean hasProcessedModules = false ; - private int round ; + private int round = <UNK> ; @ Override public SourceVersion getSupportedSourceVersion ( ) { @ @ <UNK> <UNK> @ @ public class RealmProcessor extends AbstractProcessor { round++ ; if ( round == 0 ) { - RealmVersionChecker updateChecker = <UNK> ( processingEnv ) ; - <UNK> (
# result : <UNK> allow fast scrolling until data is available
# expect : Resume sending update messages Fixes <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> # Build artifacts <UNK> <UNK> <UNK> <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ task installRealmJava ( type : Task ) { description = <UNK> the Realm library and Gradle plugin into mavenLocal ( ) ' } +task installRobolectric ( type : GradleBuild ) { + buildFile = file ( <UNK> ' ) + tasks = [ <UNK> ' ] + } + +task buildRobolectric ( type :
# result : Fix <UNK>
# expect : update <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> # Build artifacts <UNK> <UNK> <UNK> <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ task installRealmJava ( type : Task ) { description = <UNK> the Realm library and Gradle plugin into mavenLocal ( ) ' } +task installRobolectric ( type : GradleBuild ) { + description = <UNK> the Robolectric libary into <UNK> + buildFile = file ( <UNK> ' ) + tasks = [ <UNK> '
# result : Improve formatting and change names and sentences as <UNK>
# expect : Add download Realm Robolectric for Robolectric <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> # Build artifacts <UNK> <UNK> <UNK> <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ task installRealmJava ( type : Task ) { description = <UNK> the Realm library and Gradle plugin into mavenLocal ( ) ' } +task installRobolectric ( type : GradleBuild ) { + description = <UNK> the Robolectric libary into <UNK> + buildFile = file ( <UNK> ' ) + tasks = [ <UNK> '
# result : Improve formatting and change names and sentences as <UNK>
# expect : Delete unused Proguard <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> # Build artifacts <UNK> <UNK> <UNK> <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ task installRealmJava ( type : Task ) { description = <UNK> the Realm library and Gradle plugin into mavenLocal ( ) ' } +task installRobolectric ( type : GradleBuild ) { + description = <UNK> the Robolectric libary into <UNK> + buildFile = file ( <UNK> ' ) + tasks = [ <UNK> '
# result : Improve formatting and change names and sentences as <UNK>
# expect : Fix a broken icon <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> # Build artifacts <UNK> <UNK> <UNK> <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ task installRealmJava ( type : Task ) { description = <UNK> the Realm library and Gradle plugin into mavenLocal ( ) ' } +task installRobolectric ( type : GradleBuild ) { + description = <UNK> the Robolectric library into <UNK> + group = <UNK> + buildFile = file ( <UNK> ' ) + tasks
# result : Fix <UNK>
# expect : Fix <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Disabled ` <UNK> ( ) ` when sync is enabled as it might corrupt the Realm ( https : <UNK> ) . + # # # Bug fixes + +* Fixed `` operation not permitted <UNK> issue when create Realm file on some devices ' external storage ( # <UNK> ) . + # # # Enhancements -* All major public classes are now non-final . This is mostly a compromise to - support Mockito . All protected fields/methods are
# result : Merge remote-tracking branch <UNK> into <UNK>
# expect : Fix changelog
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> + + # # # Enhancements + +* Removes RxJava related APIs during bytecode transforming to make RealmObject plays well with reflection when <UNK> does <UNK> exist . + # <UNK> No changes since <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ task check ( type : GradleBuild ) { } } +task integrationTestsConnectedCheck ( type : GradleBuild ) { + group = <UNK> +
# result : PR fix
# expect : Merge remote-tracking branch <UNK> into mc/optional-api-releases
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ set ( WARNING_CXX_FLAGS `` -Wall -Wextra -pedantic -Wno-long-long -Wno-variadic-macr -Wno-missing-field-initializers -Wmissing-declarations -Wno-error=uninitialized -Wno-error=maybe-uninitialized <UNK> ) set ( REALM_COMMON_CXX_FLAGS `` -DREALM_ANDROID -DREALM_HAVE_CONFIG -DPIC -pthread -fvisibility=hidden <UNK> -fsigned-char <UNK> ) if ( build_SYNC ) - set ( REALM_COMMON_CXX_FLAGS `` $ { REALM_COMMON_CXX_FLAGS } -DREALM_SYNC <UNK> ) + set ( REALM_COMMON_CXX_FLAGS `` $ { REALM_COMMON_CXX_FLAGS } -DREALM_SYNC -DREALM_ENABLE_SYNC <UNK> ) endif ( ) # There might be an issue with -Os of ndk gcc <UNK> . It will hang the encryption related tests .
# result : Merge branch <UNK> into cm/update-objectstore
# expect : more fixes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # Realm Sync Core release used by Realm Java # https : <UNK> <UNK> <UNK> <UNK> <UNK> # Object Server Release used by Integration tests # https : <UNK> ? filter=debs <UNK> <UNK> + diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # It <UNK> OK not to exist SyncObjectServerFacade in base library . -- dontnote <UNK> +-dontnote <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK>
# result : update OS commit
# expect : update OS branch
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # Realm Sync Core release used by Realm Java # https : <UNK> <UNK> <UNK> <UNK> <UNK> # Object Server Release used by Integration tests # ` realm ` is stable releases , ` realm-testing ` is developer builds . # https : <UNK> ? filter=debs # https : <UNK> ? filter=debs <UNK> <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # It <UNK> OK not to exist SyncObjectServerFacade
# result : fixes SyncManager
# expect : Merge remote-tracking branch <UNK> into nh/objectstore-syncmanager
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Internal +* Using the Object Store <UNK> Session and SyncManager . # # <UNK> ( <UNK> ) @ @ <UNK> <UNK> @ @ * Added support for sorting by link <UNK> field ( # <UNK> ) . * Added ` OrderedRealmCollectionSnapshot ` class and ` <UNK> ( ) ` method . ` OrderedRealmCollectionSnapshot ` is useful when changing ` RealmResults ` or ` RealmList ` in simple loops . -* Added ` OrderedRealmCollectionChangeListener ` interface for supporting fine-grained
# result : PR feedback
# expect : Merge remote-tracking branch <UNK> into nh/objectstore-syncmanager
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> + + # # # Breaking changes + +* @ PrimaryKey field value can be null for <UNK> type , and should be migrated by using <UNK> ( ) for older version of Realm ( # <UNK> ) . + # # <UNK> # # # Enhancements diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ClassMetaData { } public boolean isNullable ( VariableElement variableElement
# result : WIP Nullable PrimaryKey type for Boxed Integers <UNK> <UNK> <UNK> and <UNK> added
# expect : WIP Nullable PrimaryKey type for Boxed Integers <UNK> <UNK> <UNK> and <UNK> added
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class RealmTest extends AndroidTestCase { // Check that FinalizerRunnable can free native resources ( phantom refs ) public void testReferenceCleaning ( ) throws NoSuchFieldException , IllegalAccessException { - Field sharedGroupReference = <UNK> ( `` sharedGroup <UNK> ) ; - <UNK> ( true ) ; - SharedGroup sharedGroup = ( SharedGroup ) <UNK> (
# result : Backup
# expect : Backup
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class SyncUserTests { Map < String , SyncUser > users = <UNK> ( ) ; assertEquals ( <UNK> , <UNK> ( ) ) ; - assertTrue ( <UNK> ( <UNK> ( ) <UNK> ( ) <UNK> ( ) ) <UNK> ( ) ) ; + assertTrue ( <UNK> ( ) <UNK> ( ) <UNK> ( ) <UNK> ( ) <UNK> ( ) ) ; } // Tests that the user store returns the last user to login diff -- git
# result : address review comments
# expect : Merge branch <UNK> into my/implement_global_logout
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> + +* Fixed `` operation not permitted <UNK> issue when create Realm file on some devices ' external storage ( # <UNK> ) . + + # # # Internal + +* Upgraded Realm Core to <UNK> . +* Upgraded Realm Sync to <UNK> . + # # <UNK> # # # Object Server API Changes ( In Beta ) @ @ <UNK> <UNK> @ @ * Added version number to the native library , preventing ReLinker
# result : Changelog and ROS testing Dockerfile
# expect : Fix the warnings of StrictMode
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Disabled ` <UNK> ( ) ` when sync is enabled as it might corrupt the Realm ( https : <UNK> ) . + # # # Bug fixes + +* Fixed `` operation not permitted <UNK> issue when create Realm file on some devices ' external storage ( # <UNK> ) . + # # # Enhancements -* All major public classes are now non-final . This is mostly a compromise to - support Mockito . All protected fields/methods are
# result : Merge remote-tracking branch <UNK> into <UNK>
# expect : Update OS submodule
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * ` <UNK> ( Context , String ) ` has been renamed to ` <UNK> ( String ) ` . * Object with primary key is now required to define it when the object is created . This means that ` <UNK> ( Class < E > ) ` and ` <UNK> ( String ) ` now throws ` RealmException ` if they are used to create an object with a primary key field . Use ` <UNK> ( Class <
# result : fix annotaion processor test
# expect : Test case fix
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> + + # # # Enhancements + +* Added ` <UNK> ( ) ` for a comparison against multiple values . + # # <UNK> # # # Bug fixes diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmQueryTests { <UNK> ( <UNK> ) ; <UNK> ( <UNK> + i ) ; <UNK> ( `` test data `` + i ) ; + <UNK>
# result : PR <UNK> Extract the constant string literal from the hard-coded error <UNK>
# expect : PR <UNK> Adopt boxed type <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * [ ObjectServer ] Added support for ` <UNK> ( ) ` ( # <UNK> ) . * [ ObjectServer ] Added support for changing passwords through ` <UNK> ( ) ` ( # <UNK> ) . +* [ ObjectServer ] Added support for ` <UNK> ( ) ` ( # <UNK> ) . * Transient fields are now allowed in model classes , but are implicitly treated as having the ` @ Ignore ` annotation ( # <UNK> ) .
# result : Merge branch <UNK> into cm/waitforserverchanges
# expect : Delete file if download <UNK> PR feedback
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Internal +* Use separated locks for different ` RealmCache ` s ( $ <UNK> ) . + # # <UNK> # # Bug fixes diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class RealmCacheTests { <UNK> ( ) ;
# result : update change log
# expect : Merge remote-tracking branch <UNK> into mc/cache-lock
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Internal +* Use separated locks for different ` RealmCache ` s ( $ <UNK> ) . + # # <UNK> # # Bug fixes diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class RealmCacheTests { <UNK> ( ) ;
# result : update change log
# expect : oops
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ endif ( ) set ( WARNING_CXX_FLAGS `` -Werror -Wall -Wextra -pedantic -Wmissing-declarations \ -Wempty-body -Wparentheses -Wunknown-pragmas -Wunreachable-code \ -Wno-missing-field-initializers -Wno-maybe-uninitialized -Wno-uninitialized <UNK> ) -set ( REALM_COMMON_CXX_FLAGS `` -DREALM_ANDROID -DREALM_HAVE_CONFIG -DPIC -pthread -fvisibility=hidden <UNK> -fsigned-char <UNK> ) +set ( REALM_COMMON_CXX_FLAGS `` -DREALM_ANDROID -DREALM_HAVE_CONFIG -DPIC -pthread -fvisibility=hidden <UNK> -fsigned-char -fno-builtin-memcpy -fno-builtin-memmove <UNK> ) if ( build_SYNC ) set ( REALM_COMMON_CXX_FLAGS `` $ { REALM_COMMON_CXX_FLAGS } <UNK> <UNK> ) endif ( ) @ @ <UNK> <UNK> @ @ set ( CMAKE_CXX_FLAGS_DEBUG `` -ggdb -Og
# result : Use <UNK> from FreeBSD
# expect : Merge branch <UNK> of <UNK> into mc/bug/hack-memmove
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ObjectChangeSetTests { <UNK> ( ) ; <UNK> ( ) ; } + + @ Test + @ RunTestInLooperThread + public void moreFieldsChangedThanLocalRefTableSize ( ) { + final String CLASS_NAME = `` ManyFields <UNK> ; + final int FIELD_COUNT = <UNK> ; + RealmConfiguration config = <UNK> ( `` many_fields <UNK> ) ; + DynamicRealm realm = <UNK> ( config ) ; + + <UNK> ( ) ; + RealmSchema schema = <UNK> ( ) ; + RealmObjectSchema objectSchema =
# result : Add test
# expect : Add test
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - ` RealmIOExcpetion ` has been removed and replaced by ` RealmFileException ` . * Removed ` <UNK> ( Context , File ) ` and ` <UNK> ( File ) ` constructors . * ` <UNK> ( Context , String ) ` has been renamed to ` <UNK> ( String ) ` . +* ` <UNK> ( Class < E > ) ` and ` <UNK> ( String ) ` throws ` RealmException ` if they are called to create an
# result : Remove dup lines
# expect : Fix grammar
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ buildscript { mavenLocal ( ) jcenter ( ) maven { url <UNK> : <UNK> ' } + maven { url `` https : <UNK> <UNK> } } dependencies { @ @ <UNK> <UNK> @ @ buildscript { classpath <UNK> : <UNK> classpath <UNK> : <UNK> classpath `` <UNK> : realm-transformer : $ { file ( <UNK> ' ) <UNK> ( ) } <UNK> + classpath <UNK> : <UNK> } } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK>
# result : revert fix for ErrorProne <UNK>
# expect : Merge branch <UNK> into my/add_error_prone_plugin
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmLinkTests { RealmResults < Owner > <UNK> = <UNK> ( <UNK> ) <UNK> ( `` cat <UNK> ) <UNK> ( ) ; assertEquals ( <UNK> , <UNK> ( ) ) ; + + RealmResults < Owner > <UNK> = <UNK> ( <UNK> ) <UNK> ( `` <UNK> <UNK> ) <UNK> ( ) ; + assertEquals ( 0 , <UNK> ( ) ) ; } @ Test diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK>
# result : Adding test
# expect : Adding test
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Removed deprecated APIs ` <UNK> ( ) ` and ` <UNK> ( ) ` . Those do <UNK> have to be called anymore . * Removed deprecated API ` <UNK> ( ) ` . Use ` <UNK> ( ) ` instead . * Removed deprecated API ` <UNK> ( ) ` . Use ` <UNK> ( ) ` instead . +* ` <UNK> ` to becomes generic . +* Removed ` <UNK> ` method from public API , and rename
# result : revert to gradle <UNK>
# expect : Fixing examples
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Removed deprecated APIs ` <UNK> ( ) ` and ` <UNK> ( ) ` . Those do <UNK> have to be called anymore . * Removed deprecated API ` <UNK> ( ) ` . Use ` <UNK> ( ) ` instead . * Removed deprecated API ` <UNK> ( ) ` . Use ` <UNK> ( ) ` instead . +* ` <UNK> ` to becomes generic . +* Removed ` <UNK> ` method from public API , and rename
# result : revert to gradle <UNK>
# expect : revert to gradle <UNK>
# source : diff -- git a/Jenkinsfile b/Jenkinsfile index <UNK> <UNK> -- - a/Jenkinsfile +++ b/Jenkinsfile @ @ <UNK> <UNK> @ @ import <UNK> def buildSuccess = false def rosContainer +def gradleOptions = `` -- console=plain -- no-daemon <UNK> try { node ( <UNK> ' ) { timeout ( time : <UNK> , unit : <UNK> ' ) { @ @ <UNK> <UNK> @ @ try { stage ( <UNK> tests ' ) { try { withCredentials ( [ [ $ class : <UNK> ' , credentialsId : <UNK> ' , variable : <UNK> ' ] ] ) { - sh `` chmod
# result : Merge branch <UNK> into <UNK>
# expect : fix Jenkinsfile
# source : diff -- git a/Jenkinsfile b/Jenkinsfile index <UNK> <UNK> -- - a/Jenkinsfile +++ b/Jenkinsfile @ @ <UNK> <UNK> @ @ import <UNK> def buildSuccess = false def rosContainer +def gradleOptions = `` -- no-daemon <UNK> try { node ( <UNK> ' ) { timeout ( time : <UNK> , unit : <UNK> ' ) { @ @ <UNK> <UNK> @ @ try { stage ( <UNK> tests ' ) { try { withCredentials ( [ [ $ class : <UNK> ' , credentialsId : <UNK> ' , variable : <UNK> ' ] ] ) { - sh `` chmod +x gradlew
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ allprojects { buildscript { repositories { + maven { url <UNK> : <UNK> ' } mavenLocal ( ) jcenter ( ) maven { url <UNK> : <UNK> ' } } dependencies { - classpath <UNK> : <UNK> + classpath <UNK> : <UNK> classpath <UNK> : <UNK> classpath <UNK> : <UNK> classpath <UNK> : <UNK> @ @ <UNK> <UNK> @ @ allprojects { repositories { mavenLocal ( ) jcenter ( ) + maven { url <UNK> : <UNK> ' } } }
# result : update android gradle plugin to <UNK>
# expect : Update Gradle to <UNK> <UNK> <UNK>
# source : diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ RUN mkdir `` $ { ANDROID_HOME } /licenses <UNK> & & \ echo -e `` <UNK> <UNK> > `` $ { ANDROID_HOME } /licenses/android-sdk-license <UNK> RUN sdkmanager -- update RUN sdkmanager <UNK> -RUN sdkmanager <UNK> ; <UNK> +RUN sdkmanager <UNK> ; <UNK> RUN sdkmanager <UNK> ; android ; <UNK> RUN sdkmanager <UNK> ; <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ In case you do <UNK> want to use
# result : add .
# expect : use <UNK> configuration instead of <UNK> when adding Realm to user project dependencies
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ set ( CMAKE_CXX_FLAGS_DEBUG `` -ggdb -Og -DNDEBUG <UNK> ) set ( CMAKE_CXX_FLAGS `` $ { CMAKE_CXX_FLAGS } $ { REALM_COMMON_CXX_FLAGS } $ { WARNING_CXX_FLAGS } $ { ABI_CXX_FLAGS } <UNK> ) # Set link flags -set ( REALM_LINKER_FLAGS `` <UNK> ) +set ( REALM_LINKER_FLAGS `` -Wl , -- wrap , memmove -Wl , -- wrap , memcpy <UNK> ) if ( build_SYNC ) set ( REALM_LINKER_FLAGS `` $ { REALM_LINKER_FLAGS } -lz <UNK> ) endif ( ) diff -- git <UNK>
# result : Merge remote-tracking branch <UNK> into mc/bug/hack-memmove
# expect : Merge remote-tracking branch <UNK> into mc/bug/hack-memmove
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ using namespace realm ; +static void finalize_link_view ( jlong ptr ) ; + JNIEXPORT void JNICALL Java_io_realm_internal_LinkView_nativeClose ( JNIEnv* , jclass , jlong nativeLinkViewPtr ) { - LangBindHelper : <UNK> ( *LV ( nativeLinkViewPtr ) ) ; + finalize_link_view ( nativeLinkViewPtr ) ; } @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_LinkView_nativeRemoveTargetRow return lvr- > remove_target_row ( S ( pos ) ) ; } CATCH_STD ( ) } + +static void finalize_link_view ( jlong ptr ) + { +
# result : Fix my stupidness
# expect : CheckRow should not do native destruction
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/* + * Copyright <UNK> Realm <UNK> + * + * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; + * you may not use this file except in compliance with the License . + * You may obtain a copy of the License at + * + * http : <UNK> + * + * Unless required by applicable law or agreed to in writing , software + * distributed
# result : Merge remote-tracking branch <UNK> into mc/bye-bye-finalizer
# expect : Remove unused <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/* + * Copyright <UNK> Realm <UNK> + * + * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; + * you may not use this file except in compliance with the License . + * You may obtain a copy of the License at + * + * http : <UNK> + * + * Unless required by applicable law or agreed to in writing , software + * distributed
# result : Merge remote-tracking branch <UNK> into mc/bye-bye-finalizer
# expect : Add missing header
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ def toolchains = [ ] def targets = [ - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' ] ) , - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' , <UNK> ' , <UNK> ' , <UNK> ' ] )
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Cleanup current unit <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ def toolchains = [ ] def targets = [ - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' ] ) , - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' , <UNK> ' , <UNK> ' , <UNK> ' ] )
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Merge branch <UNK> into cm/bug/iterators
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ def toolchains = [ ] def targets = [ - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' ] ) , - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' , <UNK> ' , <UNK> ' , <UNK> ' ] )
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Unit test fixes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_TableView_nativePivot /* * Class : io_realm_internal_TableView - * Method : nativeSync + * Method : nativeSyncIfNeeded * Signature : ( J ) J */ -JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSync +JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSyncIfNeeded ( JNIEnv * , jobject , jlong ) ; /* diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ inline bool view_valid_and_in_sync ( JNIEnv* env , jlong nativeViewPtr ) { ThrowException ( env , TableInvalid ,
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Merge branch <UNK> into cm/bug/iterators
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking changes -* @ PrimaryKey field value can be null for String , Byte , Short , Integer , and Long types . Older Realms should be migrated , using <UNK> ( ) , or by adding the @ Required annotation . ( # <UNK> ) . -* <UNK> ( ) now throws UnsupportedOperationException . Use <UNK> ( ) instead . -* <UNK> ( int ) now throws UnsupportedOperationException . Use <UNK> ( ) instead . -* Removed
# result : Cleanup changelog
# expect : Cleanup changelog
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +- Feature Name : Inverse relationship syntax +- Start Date : <UNK> +- RFC PR : +- Version : <UNK> + + # Summary + +It should be possible to define and query backlinks in both ` Realm ` and + ` DynamicRealm ` . As a ` DynamicRealm ` can work without _any_ Realm model +classes , it should be possible to query backlinks without them being defined there . + + # Motivation + +Backlinks are
# result : Fixed named backlink syntax
# expect : Changed name to <UNK> Added more <UNK> Annotation now only accept one <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import static <UNK> ; -import static <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class BulkInsertTests { public void insertOrUpdate_object_notInTransaction ( ) { <UNK> ( new AllTypes (
# result : Unit test for <UNK>
# expect : Unit test for <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> ( YYYY-MM-DD ) + + # # # Breaking Changes + +* The ` OrderedCollectionChangeSet ` parameter in ` <UNK> ( ) ` is no longer nullable . Use ` <UNK> ( ) ` instead ( # <UNK> ) . + + # # # Enhancements + +* Added support for partial Realms . Read [ here ] ( https : <UNK> # partial-realms ) for more information . +* Added two new methods to ` OrderedCollectionChangeSet
# result : Fix unit tests
# expect : Fix unit tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> ( YYYY-MM-DD ) + + # # # Breaking Changes + +* The ` OrderedCollectionChangeSet ` parameter in ` <UNK> ( ) ` is no longer nullable . Use ` <UNK> ( ) ` instead ( # <UNK> ) . + + # # # Enhancements + +* Added support for partial Realms . Read [ here ] ( https : <UNK> # partial-realms ) for more information . +* Added two new methods to ` OrderedCollectionChangeSet
# result : Fix unit tests
# expect : More PR feedback
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Enhancements -* Added support for partial Realms . Read [ here ] ( https : <UNK> # partial-realms ) for more information . +* [ ObjectServer ] Added support for partial Realms . Read [ here ] ( https : <UNK> # partial-realms ) for more information . * Added two new methods to ` OrderedCollectionChangeSet ` : ` getState ( ) ` and ` getError ( ) ` ( # <UNK> ) . # # # Internal
# result : Merge branch <UNK> into next-major
# expect : Use custom dynamic query
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Added version number to the native library , preventing ReLinker from accidentally loading old code ( # <UNK> ) . * ` <UNK> ( config ) ` throwing NullPointerException if called after all Realms have been closed ( # <UNK> ) . + # # # Internal + +* Upgraded Realm Core to <UNK> . +* Upgraded Realm Sync to <UNK> . + # # <UNK> # # # Object Server API Changes ( In Beta ) diff -- git
# result : Update ObjectStore submodule
# expect : Update <UNK> sync and object store
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> ( YYYY-MM-DD ) + + # # # Breaking Changes + +* Realm has upgraded its <UNK> support to <UNK> ( # <UNK> ) + * ` <UNK> ( ) ` has been renamed to ` <UNK> ( ) ` . + * ` <UNK> ( ) ` has been renamed to ` <UNK> ( ) ` . + * ` <UNK> ( ) ` has been renamed to ` <UNK> ( ) ` . + *
# result : Add changelog
# expect : Convert existing API to RxJava <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking Changes * [ ObjectServer ] Updated protocol version to <UNK> which is only compatible with ROS > <UNK> . +* Realm has upgraded its <UNK> support to <UNK> ( # <UNK> ) + * ` <UNK> ( ) ` has been renamed to ` <UNK> ( ) ` . + * ` <UNK> ( ) ` has been renamed to ` <UNK> ( ) ` . + * ` <UNK> ( ) ` has been renamed to
# result : Merge branch <UNK> into <UNK>
# expect : Fix changelog
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking Changes * [ ObjectServer ] Updated protocol version to <UNK> which is only compatible with ROS > <UNK> . +* Realm has upgraded its <UNK> support to <UNK> ( # <UNK> ) + * ` <UNK> ( ) ` has been renamed to ` <UNK> ( ) ` . + * ` <UNK> ( ) ` has been renamed to ` <UNK> ( ) ` . + * ` <UNK> ( ) ` has been renamed to
# result : Merge branch <UNK> into <UNK>
# expect : Disable unit test example
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking Changes * [ ObjectServer ] Updated protocol version to <UNK> which is only compatible with ROS > <UNK> . +* Realm has upgraded its <UNK> support to <UNK> ( # <UNK> ) + * ` <UNK> ( ) ` has been renamed to ` <UNK> ( ) ` . + * ` <UNK> ( ) ` has been renamed to ` <UNK> ( ) ` . + * ` <UNK> ( ) ` has been renamed to
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into cm/cm/add-changeset-oberservables
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # <UNK> ( YYYY-MM-DD ) + # # # Breaking Changes + +* [ ObjectServer ] ` <UNK> ( ) ` no longer throws an exception when associated Realms instances are not closed ( # <UNK> ) . + # # # Enhancements * [ ObjectServer ] Added ` <UNK> ( ) ` . * [ ObjectServer ] APIs of ` UserStore ` have been changed to support same user identity but different authentication server scenario . -* [ ObjectServer
# result : Merge remote-tracking branch <UNK> into nh/rm_object_server_user
# expect : fix <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Bug fixes * Disabled the optional API transformer since it has problems with DexGuard ( <UNK> ) . +* ` <UNK> ( ) ` might not be called with the correct Realm version for async transaction ( # <UNK> ) . # # <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmAsyncQueryTests { } , transactionCallback ) ; } + // Test case for
# result : Better unites
# expect : Cleanup
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class BytecodeModifier { * @ param clazz The CtClass to modify * @ param managedFields List of fields whose access should be replaced */ - public static void useRealmAccessors ( CtClass clazz , List < CtField > managedFields , List < CtClass > modelClasses ) { + public static void useRealmAccessors ( CtClass clazz , List < CtField > managedFields ) { <UNK> ( ) <UNK> { behavior - > <UNK> `` Behavior : $ { <UNK> } <UNK> if (
# result : add more tests for default value
# expect : fix a bug that unexpected realm object is created by default value of RealmModel/RealmList fields
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - ` RealmIOExcpetion ` has been removed and replaced by ` RealmFileException ` . * Removed ` <UNK> ( Context , File ) ` and ` <UNK> ( File ) ` constructors . * ` <UNK> ( Context , String ) ` has been renamed to ` <UNK> ( String ) ` . +* ` <UNK> ( Class < E > ) ` and ` <UNK> ( String ) ` throws ` RealmException ` if they are called to create an
# result : Remove dup lines
# expect : Change log and java doc fix
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ - ` RealmIOExcpetion ` has been removed and replaced by ` RealmFileException ` . * Removed ` <UNK> ( Context , File ) ` and ` <UNK> ( File ) ` constructors . * ` <UNK> ( Context , String ) ` has been renamed to ` <UNK> ( String ) ` . +* ` <UNK> ( Class < E > ) ` and ` <UNK> ( String ) ` throws ` RealmException ` if they are called to create an
# result : Remove dup lines
# expect : Update javadoc for json APIs
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # <UNK> + # # # Known issues + +* When create ` RealmObject ` from JSON stream , it will takes default values set by the non-managed ` RealmObject ` <UNK> default constructor for those absent field in JSON object . This behaviour is different from other APIs when creating ` RealmObject ` ( # <UNK> ) . + # # # Breaking Changes * ` isValid ( ) ` now always returns ` true ` instead of `
# result : Deprecate a <UNK>
# expect : PR fix
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * ` equals ( ) ` and ` hashCode ( ) ` of managed ` RealmObject ` s that come from linking objects do <UNK> work correctly ( # <UNK> ) . * Field name was missing in exception message when ` null ` was set to required field ( # <UNK> ) . +* Now throws ` IllegalStateException ` when a getter of linking objects is called against deleted or not yet loaded ` RealmObject ` s ( # <UNK>
# result : update variable names in test
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/build diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> + +android { + compileSdkVersion <UNK> + buildToolsVersion <UNK> + + defaultConfig { + applicationId `` <UNK> <UNK> + targetSdkVersion <UNK> + minSdkVersion <UNK> + versionCode <UNK> + versionName `` <UNK> <UNK> + } + buildTypes { + release
# result : Test case fix
# expect : Add <UNK> to fix flaky test
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ def toolchains = [ ] def targets = [ - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' ] ) , - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' , <UNK> ' , <UNK> ' , <UNK> ' ] )
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Javadoc fixes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ def toolchains = [ ] def targets = [ - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' ] ) , - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' , <UNK> ' , <UNK> ' , <UNK> ' ] )
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Merge branch <UNK> into cm/bug/iterators
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> +* BREAKING CHANGE : <UNK> ( ) now throws UnsupportedOperationException . Use <UNK> ( ) instead . +* BREAKING CHANGE : <UNK> ( int ) now throws UnsupportedOperationException . Use <UNK> ( ) instead . +* Added two new interfaces : RealmCollection and OrderedRealmCollection . RealmList and RealmResults both implement these interfaces . +* Deprecated <UNK> ( ) in place of <UNK> ( ) +* Deprecated <UNK> ( Class ) in place of <UNK> ( Class )
# result : Merge branch <UNK> into cm/collection-interfaces
# expect : Merge branch <UNK> into cm/collection-interfaces
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_TableView_nativePivot /* * Class : io_realm_internal_TableView - * Method : nativeSync + * Method : nativeSyncIfNeeded * Signature : ( J ) J */ -JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSync +JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSyncIfNeeded ( JNIEnv * , jobject , jlong ) ; /* diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ inline bool view_valid_and_in_sync ( JNIEnv* env , jlong nativeViewPtr ) { ThrowException ( env , TableInvalid ,
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Cleanup
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_TableView_nativePivot /* * Class : io_realm_internal_TableView - * Method : nativeSync + * Method : nativeSyncIfNeeded * Signature : ( J ) J */ -JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSync +JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSyncIfNeeded ( JNIEnv * , jobject , jlong ) ; /* diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ inline bool view_valid_and_in_sync ( JNIEnv* env , jlong nativeViewPtr ) { ThrowException ( env , TableInvalid ,
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Expand comment on depends_on_deleted_linklist
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Enhancements * Added support for sorting by link <UNK> field ( # <UNK> ) . +* Added ` OrderedRealmCollectionSnapshot ` class and ` <UNK> ( ) ` method . ` OrderedRealmCollectionSnapshot ` is useful when changing ` RealmResults ` or ` RealmList ` in simple loops . # # # Internal diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class CollectionTests { // Enumerates all
# result : Fix doc & typos
# expect : Rename enums
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Enhancements * Added support for sorting by link <UNK> field ( # <UNK> ) . +* Added ` OrderedRealmCollectionSnapshot ` class and ` <UNK> ( ) ` method . ` OrderedRealmCollectionSnapshot ` is useful when changing ` RealmResults ` or ` RealmList ` in simple loops . # # # Internal diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class CollectionTests { // Enumerates all
# result : Fix doc & typos
# expect : Fix javadoc
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # <UNK> * BREAKING CHANGE : <UNK> ( ) now directly throws any RuntimeException instead of wrapping it in a RealmException ( # <UNK> ) . * BREAKING CHANGE : <UNK> ( ) now throws IllegalArgumentException instead of silently accepting a null Transaction object . -* BREAKING CHANGE : String setters now throws IllegalArgumentException instead of RealmError for invalid surrogates . +* BREAKING CHANGE : String setters now throw IllegalArgumentException instead of RealmError for invalid surrogates . * BREAKING CHANGE
# result : Merge branch <UNK> into cm/handler-notifications
# expect : Refactor notify listeners
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ def toolchains = [ ] def targets = [ - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' ] ) , - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' , <UNK> ' , <UNK> ' , <UNK> ' ] )
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Backup
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmTests { } } - // FIXME HandlerThread + // This test assure that calling refresh will not trigger local listeners + // after the Looper receives REALM_CHANGE message @ Test - public void processLocalListenersAfterRefresh ( ) throws InterruptedException { + public void processRefreshLocalListenersAfterLooperQueueStart ( ) throws Throwable { // Used to validate the result final AtomicBoolean listenerWasCalled = new AtomicBoolean ( false ) ; final AtomicBoolean typeListenerWasCalled = new AtomicBoolean ( false ) ; // Used by the
# result : removed unecessary boolean
# expect : refresh send a REALM_CHANGED for looper thread
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_TableView_nativePivot /* * Class : io_realm_internal_TableView - * Method : nativeSync + * Method : nativeSyncIfNeeded * Signature : ( J ) J */ -JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSync +JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSyncIfNeeded ( JNIEnv * , jobject , jlong ) ; /* diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ inline bool view_valid_and_in_sync ( JNIEnv* env , jlong nativeViewPtr ) { ThrowException ( env , TableInvalid ,
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Fix style <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_TableView_nativePivot /* * Class : io_realm_internal_TableView - * Method : nativeSync + * Method : nativeSyncIfNeeded * Signature : ( J ) J */ -JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSync +JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSyncIfNeeded ( JNIEnv * , jobject , jlong ) ; /* diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ inline bool view_valid_and_in_sync ( JNIEnv* env , jlong nativeViewPtr ) { ThrowException ( env , TableInvalid ,
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Merge branch <UNK> into cm/bug/iterators
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_TableView_nativePivot /* * Class : io_realm_internal_TableView - * Method : nativeSync + * Method : nativeSyncIfNeeded * Signature : ( J ) J */ -JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSync +JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSyncIfNeeded ( JNIEnv * , jobject , jlong ) ; /* diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ inline bool view_valid_and_in_sync ( JNIEnv* env , jlong nativeViewPtr ) { ThrowException ( env , TableInvalid ,
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Expand comment on depends_on_deleted_linklist
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_TableView_nativePivot /* * Class : io_realm_internal_TableView - * Method : nativeSync + * Method : nativeSyncIfNeeded * Signature : ( J ) J */ -JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSync +JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSyncIfNeeded ( JNIEnv * , jobject , jlong ) ; /* diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ inline bool view_valid_and_in_sync ( JNIEnv* env , jlong nativeViewPtr ) { ThrowException ( env , TableInvalid ,
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Added RealmList ConcurrentModification tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> ( YYYY-MM-DD ) + + # # # Breaking Changes + +* The ` OrderedCollectionChangeSet ` parameter in ` <UNK> ( ) ` is no longer nullable . Use ` <UNK> ( ) ` instead ( # <UNK> ) . + + # # # Enhancements + +* Added support for partial Realms . Read [ here ] ( https : <UNK> # partial-realms ) for more information . +* Added two new methods to ` OrderedCollectionChangeSet
# result : Fix unit tests
# expect : Upgrade to Sync <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> ( YYYY-MM-DD ) + + # # # Breaking Changes + +* The ` OrderedCollectionChangeSet ` parameter in ` <UNK> ( ) ` is no longer nullable . Use ` <UNK> ( ) ` instead ( # <UNK> ) . + + # # # Enhancements + +* Added support for partial Realms . Read [ here ] ( https : <UNK> # partial-realms ) for more information . +* Added two new methods to ` OrderedCollectionChangeSet
# result : Fix unit tests
# expect : Merge branch <UNK> into cm/partial-sync/subscribe-query
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> ( YYYY-MM-DD ) + + # # # Enhancements + +* Added support for mapping between a Java name and the underlying name in the Realm file using ` @ RealmModule ` , ` @ RealmClass ` and ` @ RealmField ` annotations ( # <UNK> ) . + + # # <UNK> ( <UNK> ) # # # Internal diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK>
# result : More PR feedback
# expect : Fix missing spaces in error message
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class SyncConfiguration extends RealmConfiguration { String fileName = <UNK> ( <UNK> ( <UNK> ) + <UNK> ) ; serverCertificateFilePath = new File ( realmFileDirectory , fileName ) <UNK> ( ) ; } else { - <UNK> ( `` SSL Verification is disable , server certificate provided will not be used <UNK> ) ; + <UNK> ( `` SSL Verification is disabled , the provided server certificate will not be used . `` ) ; } }
# result : Fix test
# expect : Fix typo
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking changes * ` <UNK> ( ) ` returns a new ` RealmResults ` object instead of filtering on the original object ( # <UNK> ) . -* ` RealmResults ` is auto-updated continuously . Any transaction on the current thread which may have an impact on the order or elements of the ` RealmResults ` will change the ` RealmResults ` immediately instead of change it in the next event loop . The standard ` <UNK> (
# result : Fix javadoc format
# expect : Merge remote-tracking branch <UNK> into mc/realm-list-listener
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking changes * ` <UNK> ( ) ` returns a new ` RealmResults ` object instead of filtering on the original object ( # <UNK> ) . -* ` RealmResults ` is auto-updated continuously . Any transaction on the current thread which may have an impact on the order or elements of the ` RealmResults ` will change the ` RealmResults ` immediately instead of change it in the next event loop . The standard ` <UNK> (
# result : Fix javadoc format
# expect : Fix tests and ObserverPair equals bug
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking changes * ` <UNK> ( ) ` returns a new ` RealmResults ` object instead of filtering on the original object ( # <UNK> ) . -* ` RealmResults ` is auto-updated continuously . Any transaction on the current thread which may have an impact on the order or elements of the ` RealmResults ` will change the ` RealmResults ` immediately instead of change it in the next event loop . The standard ` <UNK> (
# result : Fix javadoc format
# expect : PR fix
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class RealmAsyncQueryTests { <UNK> ( ) ; } + // handlerController # emptyAsyncRealmObject is accessed from different threads + // make sure that
# result : making HandlerController#emptyAsyncRealmObject & HandlerController#realmObjects thread safe
# expect : making HandlerController#emptyAsyncRealmObject & HandlerController#realmObjects thread safe
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> + + # # # Enhancement + +* The default Realm module is no longer generated if no model classes exists ( # <UNK> ) . + # # <UNK> # # # Object Server API Changes ( In Beta ) diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ModuleMetaData { return false ; } - // Add default realm module if needed .
# result : Support transient <UNK>
# expect : Only create RealmDefaultModule if truly needed
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : fix a bug
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : added Javadoc comment and <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : add instrumentation tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : fix RealmListTests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : introduce <UNK> and <UNK> to check field type more precisely
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : add notice to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : use <UNK> instead of <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking Changes * ` <UNK> ( ) ` / ` <UNK> ( ) ` have been removed . Use ` <UNK> ( ) ` / ` <UNK> ( ) ` instead . +* ` <UNK> ( Realm , Class ) ` , ` <UNK> ( DynamicRealm , String ) ` , ` <UNK> ( RealmResults ) ` and ` <UNK> ( RealmList ) ` have been removed . Use ` <UNK> ( Class ) ` , ` <UNK>
# result : Merge branch <UNK> into <UNK>
# expect : remove comment
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking Changes * ` <UNK> ( ) ` / ` <UNK> ( ) ` have been removed . Use ` <UNK> ( ) ` / ` <UNK> ( ) ` instead . +* ` <UNK> ( Realm , Class ) ` , ` <UNK> ( DynamicRealm , String ) ` , ` <UNK> ( RealmResults ) ` and ` <UNK> ( RealmList ) ` have been removed . Use ` <UNK> ( Class ) ` , ` <UNK>
# result : Merge branch <UNK> into <UNK>
# expect : update <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking Changes * ` <UNK> ( ) ` / ` <UNK> ( ) ` have been removed . Use ` <UNK> ( ) ` / ` <UNK> ( ) ` instead . +* ` <UNK> ( Realm , Class ) ` , ` <UNK> ( DynamicRealm , String ) ` , ` <UNK> ( RealmResults ) ` and ` <UNK> ( RealmList ) ` have been removed . Use ` <UNK> ( Class ) ` , ` <UNK>
# result : Merge branch <UNK> into <UNK>
# expect : use <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public class RealmTest extends AndroidTestCase { // Check that FinalizerRunnable can free native resources ( phantom refs ) public void testReferenceCleaning ( ) throws NoSuchFieldException , IllegalAccessException { - Field sharedGroupReference = <UNK> ( `` sharedGroup <UNK> ) ; - <UNK> ( true )
# result : Backup with DynamicRealm
# expect : Moved more methods to RealmInstance
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > - < project version= <UNK> <UNK> <UNK> > - < component name= <UNK> ProjectCodeStyleSettingsManager <UNK> > - < option name= <UNK> PER_PROJECT_SETTINGS <UNK> > - < value > - < option name= <UNK> CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND <UNK> value= <UNK> <UNK> <UNK> / > - < option name= <UNK> NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND <UNK> value= <UNK> <UNK> <UNK> / > - < option name= <UNK> PACKAGES_TO_USE_IMPORT_ON_DEMAND <UNK> > - <
# result : Added generic <UNK>
# expect : Made fields as restrictive as <UNK>
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > - < project version= <UNK> <UNK> <UNK> > - < component name= <UNK> ProjectCodeStyleSettingsManager <UNK> > - < option name= <UNK> PER_PROJECT_SETTINGS <UNK> > - < value > - < option name= <UNK> CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND <UNK> value= <UNK> <UNK> <UNK> / > - < option name= <UNK> NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND <UNK> value= <UNK> <UNK> <UNK> / > - < option name= <UNK> PACKAGES_TO_USE_IMPORT_ON_DEMAND <UNK> > - <
# result : Added generic <UNK>
# expect : Merge branch <UNK> into cm-dynamic-realm
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ dependencies { compile gradleApi ( ) compile `` <UNK> : realm-annotations : $ { version } <UNK> compileOnly <UNK> : <UNK> - compile <UNK> : <UNK> + compile <UNK> : <UNK> testCompile ( <UNK> : <UNK> ' ) { exclude module : <UNK> '
# result : Downgrade version of Javassist causing issue with classloader at runtime <UNK>
# expect : Downgrade version of Javassist causing issue with classloader at runtime <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Added support for querying inverse relationships ( # <UNK> ) . * Moved inverse relationships out of beta stage . * Added ` <UNK> ( ) ` ( # <UNK> ) . +* Added ` <UNK> ( RealmModel ) ` ( # <UNK> ) . # # # Bug Fixes diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK>
# result : Now <UNK> returns null if the model is unmanaged
# expect : revert a change in <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Enhancements +* Added ` static <UNK> ( RealmModel ) ` , ` <UNK> ( ) ` and ` <UNK> ( ) ` ( # <UNK> ) . + # # # Bug Fixes # # # Internal diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static
# result : fix markup
# expect : remove empty tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Enhancements +* Added ` static <UNK> ( RealmModel ) ` , ` <UNK> ( ) ` and ` <UNK> ( ) ` ( # <UNK> ) . + # # # Bug Fixes # # # Internal diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK> ; import static
# result : fix markup
# expect : Merge branch <UNK> into my/getRealmConfig
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmProxyClassGenerator { } else if ( <UNK> ( field ) ) { final String genericType = <UNK> ( field ) ; writer - <UNK> ( `` RealmList < % s > % sList = <UNK> % s ( ) <UNK> , genericType , fieldName , getter ) - <UNK> ( `` RealmList < % s > % sRealmList = <UNK> % s ( ) <UNK> , - genericType , fieldName , getter ) - <UNK> ( `` % <UNK>
# result : Clear in the correct place
# expect : Do not clear own list if given as <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Enhancements * Now ` targetSdkVersion ` is <UNK> . +* Listeners on ` RealmList ` and ` RealmResults ` will be triggered immediately when the transaction is committed on the same thread ( # <UNK> ) . # # # Bug Fixes diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmListTests extends CollectionTests { fail ( ) ; } } ) ; - <UNK> (
# result : Fix test
# expect : Fix test
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ set ( CMAKE_CXX_FLAGS_DEBUG `` -ggdb -Og -DNDEBUG <UNK> ) set ( CMAKE_CXX_FLAGS `` $ { CMAKE_CXX_FLAGS } $ { REALM_COMMON_CXX_FLAGS } $ { WARNING_CXX_FLAGS } $ { ABI_CXX_FLAGS } <UNK> ) # Set link flags -set ( REALM_LINKER_FLAGS `` <UNK> ) +set ( REALM_LINKER_FLAGS `` -Wl , -- wrap , memmove <UNK> ) if ( build_SYNC ) set ( REALM_LINKER_FLAGS `` $ { REALM_LINKER_FLAGS } -lz <UNK> ) endif ( ) diff -- git <UNK> <UNK> index <UNK> <UNK> -- -
# result : Merge branch <UNK> of <UNK> into mc/bug/hack-memmove
# expect : stupid pointer mistake
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> # Object Server Release used by Integration tests . Installed using NPM . # Use ` npm view realm-object-server versions ` to get a list of available versions . <UNK> <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; -import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ;
# result : Retry in case of SocketTimeoutException
# expect : Attempting to fix SocketTimeoutConnections seen a lot on <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> # Object Server Release used by Integration tests . Installed using NPM . # Use ` npm view realm-object-server versions ` to get a list of available versions . <UNK> <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; -import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ;
# result : Retry in case of SocketTimeoutException
# expect : Merge branch <UNK> into cm/bug/track-down-flaky-tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Migration for linking objects is not yet supported . * Backlink verification is incomplete . Evil code can cause native crashes . * [ ObjectServer ] In case of a Client Reset , information about the location of the backed up Realm file is now reported through the ` ErrorHandler ` interface ( # <UNK> ) . +* The listener on ` RealmObject ` will only be triggered if the object changes ( # <UNK> ) . +* Added `
# result : Fix javadoc
# expect : Format code
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Migration for linking objects is not yet supported . * Backlink verification is incomplete . Evil code can cause native crashes . * [ ObjectServer ] In case of a Client Reset , information about the location of the backed up Realm file is now reported through the ` ErrorHandler ` interface ( # <UNK> ) . +* The listener on ` RealmObject ` will only be triggered if the object changes ( # <UNK> ) . +* Added `
# result : Fix javadoc
# expect : Share RealmObject ObserverPairList with OsObject
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Migration for linking objects is not yet supported . * Backlink verification is incomplete . Evil code can cause native crashes . * [ ObjectServer ] In case of a Client Reset , information about the location of the backed up Realm file is now reported through the ` ErrorHandler ` interface ( # <UNK> ) . +* The listener on ` RealmObject ` will only be triggered if the object changes ( # <UNK> ) . +* Added `
# result : Fix javadoc
# expect : T extends RealmModel for RealmObjectChangeListener
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Migration for linking objects is not yet supported . * Backlink verification is incomplete . Evil code can cause native crashes . * [ ObjectServer ] In case of a Client Reset , information about the location of the backed up Realm file is now reported through the ` ErrorHandler ` interface ( # <UNK> ) . +* The listener on ` RealmObject ` will only be triggered if the object changes ( # <UNK> ) . +* Added `
# result : Fix javadoc
# expect : More fix for javadoc
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmQueryTests { } @ Test + public void in_string ( ) { + populateTestRealm ( realm , <UNK> ) ; + try { + <UNK> ( <UNK> ) <UNK> ( <UNK> , ( String [ ] ) null ) <UNK> ( ) ; + } catch ( IllegalArgumentException ignored ) { + } + try { + <UNK> ( <UNK> ) <UNK> ( <UNK> , new String [ ] { } ) <UNK> ( ) ; + } catch
# result : Fix type fields in <UNK>
# expect : Remove unnecessary <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> + + # # # Enhancements + +* Added ` <UNK> ( ) ` for a comparison against multiple values . + # # <UNK> # # # Bug fixes diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmQueryTests { <UNK> ( <UNK> ) ; <UNK> ( <UNK> + i ) ; <UNK> ( `` test data `` + i ) ; + <UNK>
# result : PR <UNK> Extract the constant string literal from the hard-coded error <UNK>
# expect : Update <UNK> for <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> ( YYYY-MM-DD ) + + # # # Enhancements + +* ` <UNK> ( ) ` now support ` null ` which will always return no matches ( # <UNK> ) . +* Added support for ` <UNK> ( ) ` and ` <UNK> ( ) ` . + + # # <UNK> ( <UNK> ) # # # Enhancements diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK>
# result : Support empty input to in and two new <UNK> alwaysTrue and alwaysFalse
# expect : Kotlin docs should match java docs
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Enhancements * Added support for using non-encrypted Realms in multiple processes . Some caveats apply . Read [ doc ] ( https : <UNK> # multiprocess ) for more info ( # <UNK> ) . +* Projects using Kotlin now include additional extension functions that make working with Kotlin easier ( # <UNK> ) . # # # Bug Fixes diff -- git a/Jenkinsfile b/Jenkinsfile index <UNK> <UNK> -- - a/Jenkinsfile +++ b/Jenkinsfile @ @ <UNK> <UNK> @
# result : KDoc and unit tests <UNK>
# expect : Cleanup
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Enhancements * Added support for using non-encrypted Realms in multiple processes . Some caveats apply . Read [ doc ] ( https : <UNK> # multiprocess ) for more info ( # <UNK> ) . +* Projects using Kotlin now include additional extension functions that make working with Kotlin easier ( # <UNK> ) . # # # Bug Fixes diff -- git a/Jenkinsfile b/Jenkinsfile index <UNK> <UNK> -- - a/Jenkinsfile +++ b/Jenkinsfile @ @ <UNK> <UNK> @
# result : KDoc and unit tests <UNK>
# expect : Add tests + Javadoc
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class SyncedRealmTests { <UNK> ( ) ; } + + @ Test + public void delete_throws ( ) { + realm = getPartialRealm ( ) ; + <UNK> ( ) ; + try { + <UNK> ( )
# result : disable delete methods when using partial sync
# expect : Merge branch <UNK> into cm/bug/partial-sync/delete-all
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; import
# result : Use FieldId to identify fields in ScopeReferenceExtractor
# expect : Fix unit test
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : implement primitive list supprt for <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : added tests for non-null primitive list
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Check nullable and throw ealier in JNI
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Remove fixme and useless code
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : update nullablility annotations
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Revert non-related changes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : add notice to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : use custom deleter for shared_ptr<char> that contains char[]
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking Changes * ` <UNK> ( ) ` / ` <UNK> ( ) ` have been removed . Use ` <UNK> ( ) ` / ` <UNK> ( ) ` instead . +* ` <UNK> ( Realm , Class ) ` , ` <UNK> ( DynamicRealm , String ) ` , ` <UNK> ( RealmResults ) ` and ` <UNK> ( RealmList ) ` have been removed . Use ` <UNK> ( Class ) ` , ` <UNK>
# result : Merge branch <UNK> into <UNK>
# expect : add changelog entry about removed methods
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking Changes * ` <UNK> ( ) ` / ` <UNK> ( ) ` have been removed . Use ` <UNK> ( ) ` / ` <UNK> ( ) ` instead . +* ` <UNK> ( Realm , Class ) ` , ` <UNK> ( DynamicRealm , String ) ` , ` <UNK> ( RealmResults ) ` and ` <UNK> ( RealmList ) ` have been removed . Use ` <UNK> ( Class ) ` , ` <UNK>
# result : Merge branch <UNK> into <UNK>
# expect : remove special type conversion via Number in <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking Changes * ` <UNK> ( ) ` / ` <UNK> ( ) ` have been removed . Use ` <UNK> ( ) ` / ` <UNK> ( ) ` instead . +* ` <UNK> ( Realm , Class ) ` , ` <UNK> ( DynamicRealm , String ) ` , ` <UNK> ( RealmResults ) ` and ` <UNK> ( RealmList ) ` have been removed . Use ` <UNK> ( Class ) ` , ` <UNK>
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking Changes * ` <UNK> ( ) ` / ` <UNK> ( ) ` have been removed . Use ` <UNK> ( ) ` / ` <UNK> ( ) ` instead . +* ` <UNK> ( Realm , Class ) ` , ` <UNK> ( DynamicRealm , String ) ` , ` <UNK> ( RealmResults ) ` and ` <UNK> ( RealmList ) ` have been removed . Use ` <UNK> ( Class ) ` , ` <UNK>
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Removed deprecated API ` <UNK> ( ) ` . Use ` <UNK> ( ) ` instead . * ` <UNK> ` to becomes generic . * Removed ` <UNK> ` method from public API , and rename it to ` getRefreshToken ` . +* Relaxed upper bound of type parameter of ` RealmList ` , ` RealmQuery ` , ` RealmResults ` , ` RealmCollection ` , ` OrderedRealmCollection ` and ` OrderedRealmCollectionSnapshot ` . # # Deprecated # #
# result : Fix unit test
# expect : Merge branch <UNK> into feature/primitive_list
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Enhancements * Added support for using non-encrypted Realms in multiple processes . Some caveats apply . Read [ doc ] ( https : <UNK> # multiprocess ) for more info ( # <UNK> ) . +* Added support for importing primitive lists from JSON ( # <UNK> ) . # # # Bug Fixes @ @ <UNK> <UNK> @ @ The internal file format has been upgraded . Opening an older Realm will upgrade # # # Enhancements
# result : Support importing primitive list from JSON
# expect : Add missing test
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # Gradle build artifacts build realm/build -realm-jni/build # Gradle cache <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> + + # # # Internal + +* Move JNI build to CMake . + # # <UNK> # # # Bug
# result : Fix Dockerfile
# expect : update cleanExternalBuildFiles task definition to respect <UNK> property
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # Gradle build artifacts build realm/build -realm-jni/build # Gradle cache <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> + + # # # Internal + +* Move JNI build to CMake . + # # <UNK> # # # Bug
# result : Fix Dockerfile
# expect : fix indentation
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Fixed a crash when calling <UNK> ( ) in debugger ( # <UNK> ) . * Fixed a crash that RealmResults was not updated in Realm <UNK> change listener by adjusting the calling orders of listeners on Realm , RealmObject and RealmResults ( # <UNK> ) . +* Fixed a potential crash when accessing other RealmResults from inside a RealmResults ' RealmChangeListener ( # <UNK> ) . # # # Enhancements diff -- git <UNK> <UNK> index <UNK> <UNK> --
# result : Try to streamline listener <UNK>
# expect : Cleanup
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Migration for linking objects is not yet supported . * Backlink verification is incomplete . Evil code can cause native crashes . * [ ObjectServer ] In case of a Client Reset , information about the location of the backed up Realm file is now reported through the ` ErrorHandler ` interface ( # <UNK> ) . +* The listener on ` RealmObject ` will only be triggered if the object changes ( # <UNK> ) . +* Added `
# result : Fix javadoc
# expect : Format code
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; public class ClassMetaData { private final TypeElement classType ; // Reference to model class . - private String className ; // Model class simple name . + private final String className ; // Model class simple name . + private final List < VariableElement > fields = new ArrayList < VariableElement > ( ) ; // List of all fields in the class except those @ Ignored . + private final List < VariableElement > indexedFields = new
# result : Merge branch <UNK> into feature/backlinks
# expect : Merge branch <UNK> into feature/backlinks
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ set ( CMAKE_VERBOSE_MAKEFILE ON ) # Generate <UNK> set ( CMAKE_EXPORT_COMPILE_COMMANDS ON ) + # Initialize common compile & link flags . +set ( REALM_LINKER_FLAGS `` <UNK> ) +set ( REALM_COMMON_CXX_FLAGS `` <UNK> ) + # Setup lcache if ( NDK_LCACHE ) set ( CMAKE_CXX_CREATE_SHARED_LIBRARY `` $ { NDK_LCACHE } $ { CMAKE_CXX_CREATE_SHARED_LIBRARY } <UNK> ) @ @ <UNK> <UNK> @ @ elseif ( <UNK> ) set ( ABI_CXX_FLAGS `` -mthumb <UNK> -mfloat-abi=softfp <UNK> <UNK> ) endif ( ) + #
# result : fixing compilation error
# expect : fixing compilation error
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmProxyClassGenerator { <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; - <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; + <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK>
# result : Merge remote-tracking branch <UNK> into nh/bulk_insert
# expect : Using Collection to get the size in order to avoid the rehash call inside the IdentityHashMap
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmProxyClassGenerator { <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; - <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; + <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK>
# result : Merge remote-tracking branch <UNK> into nh/bulk_insert
# expect : Code formatting
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Bug fixes * Fixed a wrong JNI method declaration which might cause `` method not found <UNK> crash on some devices . +* Fixed bug in ` <UNK> ` and ` <UNK> ` methods causing a ` RealmList ` to be cleared when inserting a managed ` RealmModel ` ( # <UNK> ) . # # <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class
# result : fixing <UNK>
# expect : Merge remote-tracking branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Fixed a bug that ` Error ` in the background async thread is not forwarded to the caller thread . * Fixed a crash when an empty ` Collection ` is passed to ` insert ( ) ` / ` insertOrUpdate ( ) ` ( # <UNK> ) . * Fixed a bug that does not transfer the primary key when ` <UNK> ( ) ` is called to rename a class ( # <UNK> ) . +* Fixed bug
# result : Merge remote-tracking branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Fixed a bug that ` Error ` in the background async thread is not forwarded to the caller thread . * Fixed a crash when an empty ` Collection ` is passed to ` insert ( ) ` / ` insertOrUpdate ( ) ` ( # <UNK> ) . * Fixed a bug that does not transfer the primary key when ` <UNK> ( ) ` is called to rename a class ( # <UNK> ) . +* Fixed bug
# result : Merge remote-tracking branch <UNK> into <UNK>
# expect : fixing conflicts with remote `releases`
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Enhancements +* Added ` insert ( RealmModel obj ) ` , ` insertOrUpdate ( RealmModel obj ) ` , ` insert ( Collection < RealmModel > collection ) ` and ` insertOrUpdate ( Collection < RealmModel > collection ) ` to perform batch inserts ( # <UNK> ) . * Enhanced ` <UNK> ( ) ` to show a PrimaryKey field details ( # <UNK> ) . * Enabled ReLinker when loading a Realm from a custom path
# result : Fix the proxy when the model contains more than one RealmList
# expect : Doc & Javadoc
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ -- -- -name : Bug report -about : You think you have found a bug ! - -- -- - - # # # # Goal - < ! -- What do you want to achieve ? -- > - - # # # # Actual Results - < ! -- What happened ? If an exception was thrown please copy/paste the stack trace from Logcat . -- > - - # # # # Steps & Code
# result : Squashed <UNK> content from commit <UNK>
# expect : Squashed <UNK> content from commit <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmProxyClassGenerator { <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; - <UNK> ( `` <UNK> <UNK> ) ; - <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK>
# result : Merge remote-tracking branch <UNK> into nh/bulk_insert
# expect : Merge remote-tracking branch <UNK> into mc/os-schema-table-initialization
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking Changes +* An ` IllegalStateException ` will be thrown if the given ` RealmModule ` does <UNK> include all required model classes ( # <UNK> ) . + # # # Enhancements * Added support for querying inverse relationships ( # <UNK> ) . @ @ <UNK> <UNK> @ @ # # # Internal -* Factor out internal interface ManagedObject +* Factor out internal interface ManagedObject . +* Use Object Store to do table initialization . #
# result : Merge remote-tracking branch <UNK> into mc/os-schema-table-initialization
# expect : Rename vars
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking Changes * [ ObjectServer ] Updated protocol version to <UNK> which is only compatible with ROS > <UNK> . +* An ` IllegalStateException ` will be thrown if the given ` RealmModule ` does <UNK> include all required model classes ( # <UNK> ) . # # # Deprecated @ @ <UNK> <UNK> @ @ # # # Internal -* Factor out internal interface ManagedObject +* Factor out internal interface ManagedObject . +* Use Object Store to
# result : Merge remote-tracking branch <UNK> into mc/os-schema-table-initialization
# expect : Returns a schema info map in mediator
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ -- -- -name : Bug report -about : You think you have found a bug ! - -- -- - - # # # # Goal - < ! -- What do you want to achieve ? -- > - - # # # # Actual Results - < ! -- What happened ? If an exception was thrown please copy/paste the stack trace from Logcat . -- > - - # # # # Steps & Code
# result : Squashed <UNK> content from commit <UNK>
# expect : Squashed <UNK> changes from <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : Build & warning fix
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : Clean up Table
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ClassMetaData { return <UNK> ( variableElement ) ; } + /** + * Checks if a VariableElement is indexed . + * + * @ param variableElement the element/field + * @ return { @ code true } if a VariableElement is indexed , { @ code false } otherwise . + */ + public boolean isIndexed ( VariableElement variableElement ) { + return <UNK> ( variableElement ) ; + } + + public boolean isPrimaryKey ( VariableElement variableElement
# result : WiP
# expect : Remember to advance iterator
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { showStatus ( `` \nPerforming basic Query operation <UNK> <UNK> ) showStatus ( `` Number of persons : $ { <UNK> ( Person : <UNK> ) <UNK> ( ) } <UNK> ) - val results = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) <UNK> ( ) + val results = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ( ) ) <UNK> (
# result : remove @Nonnull annotation from each overriding <UNK> Add more package-infos <UNK>
# expect : Merge branch <UNK> into my/nullable_annotation
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { showStatus ( `` \nPerforming basic Query operation <UNK> <UNK> ) showStatus ( `` Number of persons : $ { <UNK> ( Person : <UNK> ) <UNK> ( ) } <UNK> ) - val results = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) <UNK> ( ) + val results = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ( ) ) <UNK> (
# result : remove @Nonnull annotation from each overriding <UNK> Add more package-infos <UNK>
# expect : remove @Nonnull from parameters
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ static_assert ( SchemaMode : <UNK> == JNIEXPORT jlong JNICALL Java_io_realm_internal_SharedRealm_nativeCreateConfig ( JNIEnv *env , jclass , jstring realm_path , jbyteArray key , jbyte schema_mode , jboolean in_memory , jboolean cache , jboolean disable_format_upgrade , - jboolean auto_change_notification , jstring sync_server_url , jstring sync_user_token ) + jboolean auto_change_notification , jstring temp_dir , jstring sync_server_url , jstring sync_user_token ) { TR_ENTER ( env ) try { JStringAccessor path ( env , realm_path ) ; // throws JniByteArray key_array ( env , key )
# result : set the path of the directory of named pipes to fix <UNK>
# expect : set the path of the directory of named pipes to fix <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> + + # # # Bug fixes + +* Permission error when a database file is located at external storage ( # <UNK> ) . + # # <UNK> This release is not protocol-compatible with previous versions of the Realm Mobile Platform . The base library is still fully compatible . diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmTests { // Injecting the
# result : add a test for <UNK>
# expect : add a test for <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> * BREAKING CHANGE : <UNK> ( ) now directly throws any RuntimeException instead of wrapping it in a RealmException ( # <UNK> ) . * BREAKING CHANGE : <UNK> ( ) now throws IllegalArgumentException instead of silently accepting a null Transaction object . + * Added support for <UNK> ( ) . + * RealmQuery now implements Cloneable . + * Added <UNK> ( RealmQuery ) . <UNK> * Upgraded to NDK <UNK> . Using gcc <UNK> for all architectures
# result : Fix doc
# expect : Updated changelog
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Added <UNK> ( ) ( # <UNK> ) . ( Thank you @ <UNK> ) * Improved <UNK> loading by using ReLinker ( https : <UNK> ) . * Improved performance of RealmList # contains ( ) ( # <UNK> ) . + * Added support for <UNK> ( ) . + * RealmQuery now implements Cloneable . + * Added <UNK> ( RealmQuery ) . <UNK> * IllegalArgumentException is now properly thrown when calling <UNK> ( ) with a
# result : Merge branch <UNK> into cm/feature-rxjava-realmquery
# expect : Merge branch <UNK> into cm/feature-rxjava-realmquery
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> * BREAKING CHANGE : <UNK> ( ) now directly throws any RuntimeException instead of wrapping it in a RealmException ( # <UNK> ) . * BREAKING CHANGE : <UNK> ( ) now throws IllegalArgumentException instead of silently accepting a null Transaction object . + * BREAKING CHANGE : RealmQuery is now final . * Fixed an error occurring during test and connectedCheck of unit test example ( # <UNK> ) . * Added <UNK> ( ) ( # <UNK> )
# result : Fix Findbugs <UNK>
# expect : Spelling and cleanup
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmQueryTests { } @ Test + public void in_string ( ) { + populateTestRealm ( realm , <UNK> ) ; + + RealmResults < AllTypes > resultList = <UNK> ( <UNK> ) <UNK> ( ) ; + assertEquals ( <UNK> , <UNK> ( ) ) ; + resultList = <UNK> ( <UNK> ) <UNK> ( <UNK> , ( String [ ] ) null ) <UNK> ( ) ; + assertEquals ( <UNK> , <UNK> ( ) ) ; +
# result : PR <UNK> equalToAny -> in
# expect : PR <UNK> apply <UNK> and <UNK> on <UNK> <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> + + # # # Enhancements + +* Added ` <UNK> ( ) ` for a comparison against multiple values . + # # <UNK> # # # Bug fixes diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmQueryTests { <UNK> ( <UNK> ) ; <UNK> ( <UNK> + i ) ; <UNK> ( `` test data `` + i ) ; + <UNK>
# result : PR <UNK> Extract the constant string literal from the hard-coded error <UNK>
# expect : Update <UNK> for <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> + + # # # Enhancements + +* Added ` <UNK> ( ) ` for a comparison against multiple values . + # # <UNK> # # # Bug fixes diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmQueryTests { <UNK> ( <UNK> ) ; <UNK> ( <UNK> + i ) ; <UNK> ( `` test data `` + i ) ; + <UNK>
# result : PR <UNK> Extract the constant string literal from the hard-coded error <UNK>
# expect : PR <UNK> ++i -> i++
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ set ( WARNING_CXX_FLAGS `` -Wall -Wextra -pedantic -Wno-long-long -Wno-variadic-macr -Wno-missing-field-initializers -Wmissing-declarations -Wno-error=uninitialized -Wno-error=maybe-uninitialized <UNK> ) set ( REALM_COMMON_CXX_FLAGS `` -DREALM_ANDROID -DREALM_HAVE_CONFIG -DPIC -pthread -fvisibility=hidden <UNK> -fsigned-char <UNK> ) if ( build_SYNC ) - set ( REALM_COMMON_CXX_FLAGS `` $ { REALM_COMMON_CXX_FLAGS } -DREALM_SYNC <UNK> ) + set ( REALM_COMMON_CXX_FLAGS `` $ { REALM_COMMON_CXX_FLAGS } -DREALM_SYNC -DREALM_ENABLE_SYNC <UNK> ) endif ( ) # There might be an issue with -Os of ndk gcc <UNK> . It will hang the encryption related tests .
# result : Merge branch <UNK> into cm/update-objectstore
# expect : more fixes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ endif ( ) # <UNK> ' was declared here set ( WARNING_CXX_FLAGS `` -Wall -Wextra -pedantic -Wno-long-long -Wno-variadic-macros \ -Wno-missing-field-initializers -Wmissing-declarations -Wno-error=uninitialized -Wno-error=maybe-uninitialized <UNK> ) -set ( REALM_COMMON_CXX_FLAGS `` -DREALM_ANDROID -DREALM_HAVE_CONFIG -DPIC -pthread -fvisibility=hidden <UNK> -fsigned-char <UNK> ) +set ( REALM_COMMON_CXX_FLAGS `` -DREALM_ANDROID -DREALM_HAVE_CONFIG -DREALM_HAVE_EPOLL -DPIC -pthread -fvisibility=hidden <UNK> -fsigned-char <UNK> ) if ( build_SYNC ) - set ( REALM_COMMON_CXX_FLAGS `` $ { REALM_COMMON_CXX_FLAGS } -DREALM_SYNC <UNK> ) + set ( REALM_COMMON_CXX_FLAGS `` $ { REALM_COMMON_CXX_FLAGS } -DREALM_ENABLE_SYNC <UNK> ) endif
# result : Work-in-progress
# expect : Only use REALM_ENABLE_SYNC
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # Realm Sync Core release used by Realm Java # https : <UNK> <UNK> <UNK> <UNK> <UNK> # Object Server Release used by Integration tests # https : <UNK> ? filter=debs diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # It <UNK> OK not to exist SyncObjectServerFacade in base library . -- dontnote <UNK> +-dontnote <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @
# result : Remove java state <UNK> Error handling goes through <UNK> Updated to latest Core <UNK>
# expect : Stop all Java sessions before reset
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; +import static <UNK>
# result : Fix unit test + throw correct exception type
# expect : Add tests for multiple logged in <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ def toolchains = [ ] def targets = [ - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' ] ) , - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' , <UNK> ' , <UNK> ' , <UNK> ' ] )
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Disable unit test until it <UNK> Fixed merge <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ def toolchains = [ ] def targets = [ - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' ] ) , - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' , <UNK> ' , <UNK> ' , <UNK> ' ] )
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Merge branch <UNK> into cm-dynamic-api
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ClassMetaData { * model classes . */ public boolean isModelClass ( ) { - return ( ! <UNK> ( ) <UNK> ( `` <UNK> <UNK> ) & & ! <UNK> ( ) <UNK> ( `` RealmProxy <UNK> ) ) ; + String type = <UNK> ( ) ; + if ( <UNK> ( `` <UNK> <UNK> ) ) { + return false ; + } + return ( ! <UNK> ( `` <UNK> <UNK> ) & & ! <UNK>
# result : Added missing transaction
# expect : Added byte <UNK> Streamlined byte array <UNK>
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > - < project version= <UNK> <UNK> <UNK> > - < component name= <UNK> ProjectCodeStyleSettingsManager <UNK> > - < option name= <UNK> PER_PROJECT_SETTINGS <UNK> > - < value > - < option name= <UNK> CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND <UNK> value= <UNK> <UNK> <UNK> / > - < option name= <UNK> NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND <UNK> value= <UNK> <UNK> <UNK> / > - < option name= <UNK> PACKAGES_TO_USE_IMPORT_ON_DEMAND <UNK> > - <
# result : Added generic <UNK>
# expect : Added <UNK> <UNK> and <UNK> to DynamicRealm
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > - < project version= <UNK> <UNK> <UNK> > - < component name= <UNK> ProjectCodeStyleSettingsManager <UNK> > - < option name= <UNK> PER_PROJECT_SETTINGS <UNK> > - < value > - < option name= <UNK> CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND <UNK> value= <UNK> <UNK> <UNK> / > - < option name= <UNK> NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND <UNK> value= <UNK> <UNK> <UNK> / > - < option name= <UNK> PACKAGES_TO_USE_IMPORT_ON_DEMAND <UNK> > - <
# result : Added generic <UNK>
# expect : Cleanup
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + # Dynamic / Migration API + +This contains a description of how a combined Dynamic/Migration could look like : + + +*Design goals* + +- Should support stepwise migration . + +- Introduce as few new classes as possible . + +- Keep terminology as close to familiar concepts as possible . + + +*Secondary design goals* + +- Migrations should just feel like switching to dynamic mode . + + + +* Why * + +Currently
# result : Updated with new <UNK>
# expect : Added dynamic design <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + # Dynamic / Migration API + +This contains a description of how a combined Dynamic/Migration could look like : + + +*Design goals + +- Should support stepwise migration . + +- Introduce as few new classes as possible . + +- Keep terminology as close to familiar concepts as possible . + + +*Secondary design goals + +- Migrations should just feel like switching to dynamic mode . + + + +* Why * + +Currently
# result : Updated with new <UNK>
# expect : Line wrapping
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT jstring JNICALL Java_io_realm_internal_Group_nativeGetTableName ( return 0 ; } +JNIEXPORT void JNICALL Java_io_realm_internal_Group_nativeRemoveTable ( + JNIEnv* env , jobject , jlong nativeGroupPtr , jstring name ) + { + TR_ENTER_PTR ( nativeGroupPtr ) + try { + JStringAccessor table_name ( env , name ) ; + G ( nativeGroupPtr ) - > remove_table ( table_name ) ; + } CATCH_STD ( ) + } + +JNIEXPORT void JNICALL Java_io_realm_internal_Group_nativeRenameTable ( + JNIEnv* env , jobject , jlong nativeGroupPtr , jstring oldName
# result : Merge branch <UNK> into cm-new-migration
# expect : Added methods for <UNK> Begun adding methods for <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_CheckedRow_nativeSetString if ( ! ROW_AND_COL_INDEX_AND_TYPE_VALID ( env , ROW ( nativeRowPtr ) , columnIndex , type_String ) ) return ; - Java_io_realm_internal_CheckedRow_nativeSetString ( env , obj , nativeRowPtr , columnIndex , value ) ; + Java_io_realm_internal_UncheckedRow_nativeSetString ( env , obj , nativeRowPtr , columnIndex , value ) ; } JNIEXPORT void JNICALL Java_io_realm_internal_CheckedRow_nativeSetByteArray @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_CheckedRow_nativeNullifyLink return ; Java_io_realm_internal_UncheckedRow_nativeNullifyLink ( env , obj , nativeRowPtr , columnIndex ) ; - }
# result : Cleanup
# expect : Reenable JNI architectures and unit <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_CheckedRow_nativeSetString if ( ! ROW_AND_COL_INDEX_AND_TYPE_VALID ( env , ROW ( nativeRowPtr ) , columnIndex , type_String ) ) return ; - Java_io_realm_internal_CheckedRow_nativeSetString ( env , obj , nativeRowPtr , columnIndex , value ) ; + Java_io_realm_internal_UncheckedRow_nativeSetString ( env , obj , nativeRowPtr , columnIndex , value ) ; } JNIEXPORT void JNICALL Java_io_realm_internal_CheckedRow_nativeSetByteArray @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_CheckedRow_nativeNullifyLink return ; Java_io_realm_internal_UncheckedRow_nativeNullifyLink ( env , obj , nativeRowPtr , columnIndex ) ; - }
# result : Cleanup
# expect : Begun adding <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ def toolchains = [ ] def targets = [ - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' ] ) , - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' , <UNK> ' , <UNK> ' , <UNK> ' ] )
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Added notification tests for none-synched <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ def toolchains = [ ] def targets = [ - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' ] ) , - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' , <UNK> ' , <UNK> ' , <UNK> ' ] )
# result : Merge branch <UNK> into cm/bug/iterators
# expect : More unit test <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> +* BREAKING CHANGE : <UNK> ( ) now throws UnsupportedOperationException . Use <UNK> ( ) instead . +* BREAKING CHANGE : <UNK> ( int ) now throws UnsupportedOperationException . Use <UNK> ( ) instead . +* Added two new interfaces : RealmCollection and OrderedRealmCollection . RealmList and RealmResults both implement these interfaces . +* Deprecated <UNK> ( ) in place of <UNK> ( ) +* Deprecated <UNK> ( Class ) in place of <UNK> ( Class )
# result : Merge branch <UNK> into cm/collection-interfaces
# expect : Merge branch <UNK> into cm/collection-interfaces
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_TableView_nativePivot /* * Class : io_realm_internal_TableView - * Method : nativeSync + * Method : nativeSyncIfNeeded * Signature : ( J ) J */ -JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSync +JNIEXPORT jlong JNICALL Java_io_realm_internal_TableView_nativeSyncIfNeeded ( JNIEnv * , jobject , jlong ) ; /* diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ inline bool view_valid_and_in_sync ( JNIEnv* env , jlong nativeViewPtr ) { ThrowException ( env , TableInvalid ,
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Fixing unit <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Deprecated +* ` <UNK> ( ) ` . Use ` <UNK> ( clazz ) <UNK> ( ) ` instead . +* ` <UNK> ( ) ` . Use ` <UNK> ( clazz ) <UNK> ( ) ` instead . +* ` <UNK> ( ) ` . Use ` <UNK> ( className ) <UNK> ( ) ` instead . +* ` <UNK> ( ) ` . Use ` <UNK> ( className ) <UNK> ( ) ` instead . *
# result : Merge branch <UNK> into cm/api-review/unify-query-methods
# expect : Fix unit tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; /** * Utility class for holding metadata for RealmProxy classes . @ @ <UNK> <UNK> @ @ public class ClassMetaData { private List < String > fieldNames = new ArrayList < String > ( ) ; private List < String > ignoreFieldNames = new ArrayList < String > ( ) ; private List < VariableElement > indexedFields = new ArrayList < VariableElement > ( ) ;
# result : Merge branch <UNK> of <UNK> into kg-feature-null-support
# expect : Merge branch <UNK> of <UNK> into kg-feature-null-support
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; /** * Utility class for holding metadata for RealmProxy classes . @ @ <UNK> <UNK> @ @ public class ClassMetaData { private List < String > fieldNames = new ArrayList < String > ( ) ; private List < String > ignoreFieldNames = new ArrayList < String > ( ) ; private List < VariableElement > indexedFields = new ArrayList < VariableElement > ( ) ;
# result : Merge branch <UNK> of <UNK> into kg-feature-null-support
# expect : Merge branch <UNK> of <UNK> into kg-feature-null-support
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; /** * Utility class for holding metadata for RealmProxy classes . @ @ <UNK> <UNK> @ @ public class ClassMetaData { private List < String > fieldNames = new ArrayList < String > ( ) ; private List < String > ignoreFieldNames = new ArrayList < String > ( ) ; private List < VariableElement > indexedFields = new ArrayList < VariableElement > ( ) ;
# result : Merge branch <UNK> of <UNK> into kg-feature-null-support
# expect : Preserve column index when migrating to nullable column
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; /** * Utility class for holding metadata for RealmProxy classes . @ @ <UNK> <UNK> @ @ public class ClassMetaData { private List < String > fieldNames = new ArrayList < String > ( ) ; private List < String > ignoreFieldNames = new ArrayList < String > ( ) ; private List < VariableElement > indexedFields = new ArrayList < VariableElement > ( ) ;
# result : Merge branch <UNK> of <UNK> into kg-feature-null-support
# expect : WiP
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT jlongArray JNICALL Java_io_realm_internal_TableQuery_nativeBatchUpdate // <UNK> : Run & export the queries against the latest shared group for ( size_t i = 0 ; i < number_of_queries ; ++i ) { - JniLongArray query_param_array ( env , ( jlongArray ) env- > GetObjectArrayElement ( query_param_matrix , i ) ) ; - switch ( query_param_array [ 0 ] ) { // 0 , index of the type of query , the next indicies are parameters + JniLongArray* query_param_array = new JniLongArray (
# result : Add warning concerning legacy_timestamp session property
# expect : Free object on nativeBatchUpdateQueries after each <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : throw an exception if query or aggregation feature is used for primitive list
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : added a test to get field meta data of primitive lists
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Commit missing file
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : fix <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into feature/primitive_list
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : fix nativeIsColumnNullable
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking Changes * ` <UNK> ( ) ` / ` <UNK> ( ) ` have been removed . Use ` <UNK> ( ) ` / ` <UNK> ( ) ` instead . +* ` <UNK> ( Realm , Class ) ` , ` <UNK> ( DynamicRealm , String ) ` , ` <UNK> ( RealmResults ) ` and ` <UNK> ( RealmList ) ` have been removed . Use ` <UNK> ( Class ) ` , ` <UNK>
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into feature/primitive_list
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking Changes * ` <UNK> ( ) ` / ` <UNK> ( ) ` have been removed . Use ` <UNK> ( ) ` / ` <UNK> ( ) ` instead . +* ` <UNK> ( Realm , Class ) ` , ` <UNK> ( DynamicRealm , String ) ` , ` <UNK> ( RealmResults ) ` and ` <UNK> ( RealmList ) ` have been removed . Use ` <UNK> ( Class ) ` , ` <UNK>
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into feature/primitive_list
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; - @ RealmModule ( library = true , classes = { <UNK> } ) + @ RealmModule ( library = true , classes = { <UNK> , <UNK> , <UNK> } ) public class PermissionModule { } diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/* + * Copyright <UNK> Realm <UNK> + * + * Licensed under the Apache License
# result : WIP waitforchange test added
# expect : Add new classes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ To run a testing server locally : <UNK> connectedObjectServerDebugAndroidTest `` ` +Note that if using VirtualBox ( Genymotion ) , the network needs to be bridged for the tests to work . +This is done in ` VirtualBox > Network ` . Set `` Adapter <UNK> <UNK> to `` Bridged Adapter <UNK> . + These tests may take as much as half an hour to complete . # # Contributing diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK>
# result : Fix Object Store version
# expect : Merge branch <UNK> into cm/add-synccredentials-accesstoken
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Object Server API Changes ( In Beta ) * Add a default ` UserStore ` based on the Realm Object Store ( ` ObjectStoreUserStore ` ) . -* Change the order of arguments to <UNK> to match iOS : token , provider , userInfo +* Breaking change : Change the order of arguments to <UNK> to match iOS : token , provider , userInfo +* Breaking change : Location of Realm files are now placed in ` getFilesDir
# result : Fix unit tests
# expect : Merge branch <UNK> into cm/permission-offer-request
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Object Server API Changes ( In Beta ) * Add a default ` UserStore ` based on the Realm Object Store ( ` ObjectStoreUserStore ` ) . -* Change the order of arguments to <UNK> to match iOS : token , provider , userInfo +* Breaking change : Change the order of arguments to <UNK> to match iOS : token , provider , userInfo +* Breaking change : Location of Realm files are now placed in ` getFilesDir
# result : Fix unit tests
# expect : Cleanup
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/* + * Copyright <UNK> Realm <UNK> + * + * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; + * you may not use this file except in compliance with the License . + * You may obtain a copy of the License at + * + * http : <UNK> + * + * Unless required by applicable law or agreed to in writing , software + * distributed
# result : Merge remote-tracking branch <UNK> into mc/bye-bye-finalizer
# expect : Cleanup unit test
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/* + * Copyright <UNK> Realm <UNK> + * + * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; + * you may not use this file except in compliance with the License . + * You may obtain a copy of the License at + * + * http : <UNK> + * + * Unless required by applicable law or agreed to in writing , software + * distributed
# result : Merge remote-tracking branch <UNK> into mc/bye-bye-finalizer
# expect : Updated RealmCursor JavaDoc
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; * < p > * A minimal configuration can be created using : * < p > - * { @ code RealmConfiguration config = new <UNK> ( getContext ( ) ) <UNK> ( ) ) } + * { @ code RealmConfiguration config = new <UNK> ( ) <UNK> ( ) } * < p > * This will create a RealmConfiguration with the following properties . * < ul >
# result : Fix wrong javadoc in RealmConfiguration
# expect : Remove excess bracer
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Enhancements +* [ ObjectServer ] Adding user lookup API for admin ( # <UNK> ) . + # # # Bug Fixes # # # Internal diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> # /tools/sync_test_server/Dockerfile specify which repo ( apt ) we should # install/use between <UNK> ' and <UNK> ' , the version below should # correspond to an existing version on the *specified*
# result : adding UT
# expect : remove typo
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ def toolchains = [ ] def targets = [ - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' ] ) , - new Target ( name : <UNK> ' , jniFolder : <UNK> ' , toolchain : <UNK> { <UNK> == <UNK> ' } , cflags : [ <UNK> ' , <UNK> ' , <UNK> ' , <UNK> ' ] )
# result : Merge branch <UNK> into cm/bug/iterators
# expect : Merge branch <UNK> into cm-dynamic-api
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ClassMetaData { * model classes . */ public boolean isModelClass ( ) { - return ( ! <UNK> ( ) <UNK> ( `` <UNK> <UNK> ) & & ! <UNK> ( ) <UNK> ( `` RealmProxy <UNK> ) ) ; + String type = <UNK> ( ) ; + if ( <UNK> ( `` <UNK> <UNK> ) ) { + return false ; + } + return ( ! <UNK> ( `` <UNK> <UNK> ) & & ! <UNK>
# result : Added missing transaction
# expect : Merge branch <UNK> into cm-new-migration
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT jstring JNICALL Java_io_realm_internal_Group_nativeGetTableName ( return 0 ; } +JNIEXPORT void JNICALL Java_io_realm_internal_Group_nativeRemoveTable ( + JNIEnv* env , jobject , jlong nativeGroupPtr , jstring name ) + { + TR_ENTER_PTR ( nativeGroupPtr ) + try { + JStringAccessor table_name ( env , name ) ; + G ( nativeGroupPtr ) - > remove_table ( table_name ) ; + } CATCH_STD ( ) + } + +JNIEXPORT void JNICALL Java_io_realm_internal_Group_nativeRenameTable ( + JNIEnv* env , jobject , jlong nativeGroupPtr , jstring oldName
# result : Merge branch <UNK> into cm-new-migration
# expect : Merge branch <UNK> into cm-new-migration
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT jstring JNICALL Java_io_realm_internal_Group_nativeGetTableName ( return 0 ; } +JNIEXPORT void JNICALL Java_io_realm_internal_Group_nativeRemoveTable ( + JNIEnv* env , jobject , jlong nativeGroupPtr , jstring name ) + { + TR_ENTER_PTR ( nativeGroupPtr ) + try { + JStringAccessor table_name ( env , name ) ; + G ( nativeGroupPtr ) - > remove_table ( table_name ) ; + } CATCH_STD ( ) + } + +JNIEXPORT void JNICALL Java_io_realm_internal_Group_nativeRenameTable ( + JNIEnv* env , jobject , jlong nativeGroupPtr , jstring oldName
# result : Merge branch <UNK> into cm-new-migration
# expect : Renaming according to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ android { defaultConfig { minSdkVersion <UNK> targetSdkVersion <UNK> + testInstrumentationRunner <UNK> } // TODO : re-enable once bug-fix is released @ @ <UNK> <UNK> @ @ dependencies { compile files ( `` <UNK> $ { version } <UNK> <UNK> ) androidTestApt files ( `` <UNK> $ { version } <UNK> <UNK> ) androidTestApt files ( `` <UNK> $ { version } <UNK> <UNK> ) + androidTestCompile <UNK> : <UNK> + androidTestCompile <UNK> : <UNK> } <UNK> { variant - > diff
# result : Backup
# expect : Backup
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > - < project version= <UNK> <UNK> <UNK> > - < component name= <UNK> ProjectCodeStyleSettingsManager <UNK> > - < option name= <UNK> PER_PROJECT_SETTINGS <UNK> > - < value > - < option name= <UNK> CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND <UNK> value= <UNK> <UNK> <UNK> / > - < option name= <UNK> NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND <UNK> value= <UNK> <UNK> <UNK> / > - < option name= <UNK> PACKAGES_TO_USE_IMPORT_ON_DEMAND <UNK> > - <
# result : Added generic <UNK>
# expect : Made fields as restrictive as <UNK>
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > - < project version= <UNK> <UNK> <UNK> > - < component name= <UNK> ProjectCodeStyleSettingsManager <UNK> > - < option name= <UNK> PER_PROJECT_SETTINGS <UNK> > - < value > - < option name= <UNK> CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND <UNK> value= <UNK> <UNK> <UNK> / > - < option name= <UNK> NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND <UNK> value= <UNK> <UNK> <UNK> / > - < option name= <UNK> PACKAGES_TO_USE_IMPORT_ON_DEMAND <UNK> > - <
# result : Added generic <UNK>
# expect : Improve unit test and rename containsClass
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Bug fixes * Disabled the optional API transformer since it has problems with DexGuard ( <UNK> ) . +* ` <UNK> ( ) ` might not be called with the correct Realm version for async transaction ( # <UNK> ) . # # <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmAsyncQueryTests { } , transactionCallback ) ; } + // Test case for
# result : Better unites
# expect : Cleanup
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : JNI size should return a value
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : No need to define exception kind twice for testing
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : Finalizer for BaseRealm
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : Merge remote-tracking branch <UNK> into feature/object-store
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : Test cases for shared Realm
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $
# result : Update android tools plugin to <UNK>
# expect : Update gradle to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + [ submodule `` realm/realm-library/src/main/cpp/object-store <UNK> ] + path = realm/realm-library/src/main/cpp/object-store + url = git @ <UNK> : <UNK> diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL
# result : Merge remote-tracking branch <UNK> into mc/feature/os-shared-realm
# expect : Use submodule instead of subtree
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $
# result : Update android tools plugin to <UNK>
# expect : Remove realm-jni
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> # Set the environment variables ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux -ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME
# result : <UNK> for README
# expect : ANDROID_NDK_HOME instead of NDK_HOME
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ task distributionJniUnstrippedPackage ( type : Zip ) { archiveName = `` realm-java-jni-libs-unstripped- $ { currentVersion } <UNK> <UNK> destinationDir = file ( `` $ { buildDir } /outputs/distribution <UNK> ) - from ( `` realm/realm-jni/build/outputs/jniLibs-unstripped <UNK> ) { + from ( `` realm/realm-library/build/outputs/jniLibs-unstripped <UNK> ) { include <UNK>
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : Merge commit <UNK> as <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $
# result : Update android tools plugin to <UNK>
# expect : Update core to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + [ submodule `` realm/realm-library/src/main/cpp/object-store <UNK> ] + path = realm/realm-library/src/main/cpp/object-store + url = git @ <UNK> : <UNK> diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL
# result : Merge remote-tracking branch <UNK> into mc/feature/os-shared-realm
# expect : Remove <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ using namespace realm ; +static void finalize_link_view ( jlong ptr ) ; + JNIEXPORT void JNICALL Java_io_realm_internal_LinkView_nativeClose ( JNIEnv* , jclass , jlong nativeLinkViewPtr ) { - LangBindHelper : <UNK> ( *LV ( nativeLinkViewPtr ) ) ; + finalize_link_view ( nativeLinkViewPtr ) ; } @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_LinkView_nativeRemoveTargetRow return lvr- > remove_target_row ( S ( pos ) ) ; } CATCH_STD ( ) } + +static void finalize_link_view ( jlong ptr ) + { +
# result : Fix my stupidness
# expect : Clean up and commit message
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ using namespace realm ; +static void finalize_link_view ( jlong ptr ) ; + JNIEXPORT void JNICALL Java_io_realm_internal_LinkView_nativeClose ( JNIEnv* , jclass , jlong nativeLinkViewPtr ) { - LangBindHelper : <UNK> ( *LV ( nativeLinkViewPtr ) ) ; + finalize_link_view ( nativeLinkViewPtr ) ; } @ @ <UNK> <UNK> @ @ JNIEXPORT void JNICALL Java_io_realm_internal_LinkView_nativeRemoveTargetRow return lvr- > remove_target_row ( S ( pos ) ) ; } CATCH_STD ( ) } + +static void finalize_link_view ( jlong ptr ) + { +
# result : Fix my stupidness
# expect : Fix findbug issues
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + # CMake <UNK> <UNK> <UNK> +CMakeFiles/ +Makefile <UNK> <UNK> <UNK> + + # Build products <UNK> <UNK> +tests/tests diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + [ submodule `` external/pegtl <UNK> ] + path = external/pegtl + url = https : <UNK> + [ submodule `` external/catch <UNK> ] + path = external/catch + url = https : <UNK> diff -- git
# result : Merge pull request <UNK> from realm/mc/feature/os-subtree
# expect : Merge commit <UNK> into feature/object-store
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ task distributionJniUnstrippedPackage ( type : Zip ) { archiveName = `` realm-java-jni-libs-unstripped- $ { currentVersion } <UNK> <UNK> destinationDir = file ( `` $ { buildDir } /outputs/distribution <UNK> ) - from ( `` realm/realm-jni/build/outputs/jniLibs-unstripped <UNK> ) { + from ( `` realm/realm-library/build/outputs/jniLibs-unstripped <UNK> ) { include <UNK>
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : Move function to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $
# result : Update android tools plugin to <UNK>
# expect : Update core to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ClassMetaData { return <UNK> ( variableElement ) ; } + /** + * Checks if a VariableElement is indexed . + * + * @ param variableElement the element/field + * @ return { @ code true } if a VariableElement is indexed , { @ code false } otherwise . + */ + public boolean isIndexed ( VariableElement variableElement ) { + return <UNK> ( variableElement ) ; + } + + public boolean isPrimaryKey ( VariableElement variableElement
# result : WiP
# expect : Include all needed classes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ClassMetaData { return <UNK> ( variableElement ) ; } + /** + * Checks if a VariableElement is indexed . + * + * @ param variableElement the element/field + * @ return { @ code true } if a VariableElement is indexed , { @ code false } otherwise . + */ + public boolean isIndexed ( VariableElement variableElement ) { + return <UNK> ( variableElement ) ; + } + + public boolean isPrimaryKey ( VariableElement variableElement
# result : WiP
# expect : Remember to advance iterator
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + # CMake <UNK> <UNK> <UNK> +CMakeFiles/ +Makefile <UNK> <UNK> <UNK> + + # Build products <UNK> <UNK> +tests/tests diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + [ submodule `` external/pegtl <UNK> ] + path = external/pegtl + url = https : <UNK> + [ submodule `` external/catch <UNK> ] + path = external/catch + url = https : <UNK> diff -- git
# result : Merge pull request <UNK> from realm/mc/feature/os-subtree
# expect : Merge commit <UNK> as <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ task distributionJniUnstrippedPackage ( type : Zip ) { archiveName = `` realm-java-jni-libs-unstripped- $ { currentVersion } <UNK> <UNK> destinationDir = file ( `` $ { buildDir } /outputs/distribution <UNK> ) - from ( `` realm/realm-jni/build/outputs/jniLibs-unstripped <UNK> ) { + from ( `` realm/realm-library/build/outputs/jniLibs-unstripped <UNK> ) { include <UNK>
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : Merge pull request <UNK> from realm/mc/feature/os-cmake
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME } /platform-tools ENV PATH $ { PATH } : $
# result : Merge remote-tracking branch <UNK> into feature/object-store
# expect : Update core to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ distribution/RealmGridViewExample/app/src distribution/RealmIntroExample/app/src distribution/RealmMigrationExample/app/src + # Generated JNI headers +realm/realm-library/src/main/cpp/jni_include + # Downloaded core +realm/realm-library/distribution + # Cmake output <UNK> diff -- git a/Dockerfile b/Dockerfile index <UNK> <UNK> -- - a/Dockerfile +++ b/Dockerfile @ @ <UNK> <UNK> @ @ ENV LC_ALL `` <UNK> <UNK> # Set the environment variables ENV JAVA_HOME <UNK> ENV ANDROID_HOME /opt/android-sdk-linux -ENV NDK_HOME /opt/android-ndk + # Need by cmake +ENV ANDROID_NDK_HOME /opt/android-ndk ENV PATH $ { PATH } : $ { ANDROID_HOME } /tools : $ { ANDROID_HOME
# result : <UNK> for README
# expect : Merge remote-tracking branch <UNK> into mc/cmake
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> - # Object Server Release used by Integration tests - # Stable releases : https : <UNK> ? filter=debs - # Beta releases : https : <UNK> ? filter=debs - # Developer builds : https : <UNK> ? filter=debs - # /tools/sync_test_server/Dockerfile specify which repo ( apt ) we should - # install/use between <UNK> ' , <UNK> ' and <UNK> ' , the version below should - # correspond to an existing version on the *specified* repo .
# result : Use default admin user + disable SSL tests
# expect : Merge branch <UNK> of <UNK> into cm/use-npm
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> <UNK> - # Object Server Release used by Integration tests - # Stable releases : https : <UNK> ? filter=debs - # Beta releases : https : <UNK> ? filter=debs - # Developer builds : https : <UNK> ? filter=debs - # /tools/sync_test_server/Dockerfile specify which repo ( apt ) we should - # install/use between <UNK> ' , <UNK> ' and <UNK> ' , the version below should - # correspond to an existing version on the *specified* repo .
# result : Use default admin user + disable SSL tests
# expect : Fix local check + ignore more unit <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; /** * Utility class for holding metadata for RealmProxy classes . @ @ <UNK> <UNK> @ @ public class ClassMetaData { private List < String > fieldNames = new ArrayList < String > ( ) ; private List < String > ignoreFieldNames = new ArrayList < String > ( ) ; private List < VariableElement > indexedFields = new ArrayList < VariableElement > ( ) ;
# result : Merge branch <UNK> of <UNK> into kg-feature-null-support
# expect : Using VariableElement instead of field names
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; /** * Utility class for holding metadata for RealmProxy classes . @ @ <UNK> <UNK> @ @ public class ClassMetaData { private List < String > fieldNames = new ArrayList < String > ( ) ; private List < String > ignoreFieldNames = new ArrayList < String > ( ) ; private List < VariableElement > indexedFields = new ArrayList < VariableElement > ( ) ;
# result : Merge branch <UNK> of <UNK> into kg-feature-null-support
# expect : Merge branch <UNK> of <UNK> into kg-feature-null-support
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; /** * Utility class for holding metadata for RealmProxy classes . @ @ <UNK> <UNK> @ @ public class ClassMetaData { private List < String > fieldNames = new ArrayList < String > ( ) ; private List < String > ignoreFieldNames = new ArrayList < String > ( ) ; private List < VariableElement > indexedFields = new ArrayList < VariableElement > ( ) ;
# result : Merge branch <UNK> of <UNK> into kg-feature-null-support
# expect : Adding constants to enhance readability of code when adding columns
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; /** * Utility class for holding metadata for RealmProxy classes . @ @ <UNK> <UNK> @ @ public class ClassMetaData { private List < String > fieldNames = new ArrayList < String > ( ) ; private List < String > ignoreFieldNames = new ArrayList < String > ( ) ; private List < VariableElement > indexedFields = new ArrayList < VariableElement > ( ) ;
# result : Merge branch <UNK> of <UNK> into kg-feature-null-support
# expect : Merge branch <UNK> of <UNK> into kg-feature-null-support
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; /** * Utility class for holding metadata for RealmProxy classes . @ @ <UNK> <UNK> @ @ public class ClassMetaData { private List < String > fieldNames = new ArrayList < String > ( ) ; private List < String > ignoreFieldNames = new ArrayList < String > ( ) ; private List < VariableElement > indexedFields = new ArrayList < VariableElement > ( ) ;
# result : Merge branch <UNK> of <UNK> into kg-feature-null-support
# expect : Merge branch <UNK> of <UNK> into kg-feature-null-support
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; /** * Utility class for holding metadata for RealmProxy classes . @ @ <UNK> <UNK> @ @ public class ClassMetaData { private List < String > fieldNames = new ArrayList < String > ( ) ; private List < String > ignoreFieldNames = new ArrayList < String > ( ) ; private List < VariableElement > indexedFields = new ArrayList < VariableElement > ( ) ;
# result : Merge branch <UNK> of <UNK> into kg-feature-null-support
# expect : Merge branch <UNK> of <UNK> into kg-feature-null-support
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; /** * Utility class for holding metadata for RealmProxy classes . @ @ <UNK> <UNK> @ @ public class ClassMetaData { private List < String > fieldNames = new ArrayList < String > ( ) ; private List <
# result : Merge branch <UNK> of <UNK> into kg-feature-null-support
# expect : Adding JSON unit tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; + /** * Utility class for holding metadata for RealmProxy classes . */ @ @ <UNK> <UNK> @ @ public class ClassMetaData { private List < String > fieldNames = new ArrayList < String > ( ) ; private List < String > ignoreFieldNames = new ArrayList < String > ( ) ; private List < VariableElement > indexedFields =
# result : Update RealmJsonTest cases
# expect : More test for Boolean null query
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; + /** * Utility class for holding metadata for RealmProxy classes . */ @ @ <UNK> <UNK> @ @ public class ClassMetaData { private List < String > fieldNames = new ArrayList < String > ( ) ; private List < String > ignoreFieldNames = new ArrayList < String > ( ) ; private List < VariableElement > indexedFields =
# result : Update RealmJsonTest cases
# expect : Remove NULLABLE_JAVA_TYPES
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; + /** * Utility class for holding metadata for RealmProxy classes . */ @ @ <UNK> <UNK> @ @ public class ClassMetaData { private List < String > fieldNames = new ArrayList < String > ( ) ; private List < String > ignoreFieldNames = new ArrayList < String > ( ) ; private List < VariableElement > indexedFields =
# result : Update RealmJsonTest cases
# expect : Clean up processor code
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; + /** * Utility class for holding metadata for RealmProxy classes . */ @ @ <UNK> <UNK> @ @ public class ClassMetaData { private List < String > fieldNames =
# result : Nullable related queries
# expect : Update Realm Json test cases for null
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; + /** * Utility class for holding metadata for RealmProxy classes . */ @ @ <UNK> <UNK> @ @ public class ClassMetaData { private List < String > fieldNames =
# result : Nullable related queries
# expect : Nullable related queries
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ;
# result : Fix <UNK> required <UNK>
# expect : Changes to DateTime link queries due to Realm core changes
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ;
# result : Fix <UNK> required <UNK>
# expect : Update doc for @Required
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Object Server API Changes ( In Beta ) * Fixed ` <UNK> ( ) ` so it now outputs a correct description instead of an empty string ( # <UNK> ) . +* Add a default ` UserStore ` based on the Realm Object Store ( ` ObjectStoreUserStore ` ) . # # # Bug fixes diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ;
# result : PR feedback
# expect : PR feedback
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class RealmProxyClassGenerator { <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; - <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; + <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK> ) ; <UNK> ( `` <UNK> <UNK>
# result : Merge remote-tracking branch <UNK> into nh/bulk_insert
# expect : Code formatting
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Enhancements +* Added ` insert ( RealmModel obj ) ` , ` insertOrUpdate ( RealmModel obj ) ` , ` insert ( Collection < RealmModel > collection ) ` and ` insertOrUpdate ( Collection < RealmModel > collection ) ` to perform batch inserts ( # <UNK> ) * Enhanced ` <UNK> ( ) ` to show a PrimaryKey field details ( # <UNK> ) . * Enabled ReLinker when loading a Realm from a custom path by
# result : - Fixing tests - Update Javadoc
# expect : fixing ABI
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Fixed a wrong JNI method declaration which might cause `` method not found <UNK> crash on some devices . * Fixed a bug that ` Error ` in the background async thread is not forwared to the caller thread . * Fixed a crash when an empty ` Collection ` is passed to ` insert ( ) ` / ` insertOrUpdate ( ) ` ( # <UNK> ) . +* Fixed bug in ` <UNK> ` and ` <UNK> `
# result : Merge remote-tracking branch <UNK> into <UNK>
# expect : Add test case to reproduce <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> Binary files /dev/null and <UNK> differ diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class RealmMigrationTests { <UNK> ( config , migration ) ; } + @ Test + public void renameAndAddField
# result : checkpoint
# expect : checkpoint
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Bug Fixes * [ ObjectServer ] Using Android Network Security Configuration is necessary to install the custom root CA for tests ( API > = <UNK> ) ( # <UNK> ) . +* Fixes issue with the incremental build causing direct access to model without accessor to fail ( # <UNK> ) . * ` <UNK> ( ) ` is now correctly applied when calling ` <UNK> ( ) ` ( # <UNK> ) . # # <UNK>
# result : Merge branch <UNK> into nh/fix_incremental_build
# expect : Merge branch <UNK> into nh/fix_incremental_build
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ set ( CMAKE_VERBOSE_MAKEFILE ON ) # Generate <UNK> set ( CMAKE_EXPORT_COMPILE_COMMANDS ON ) + # Initialize common compile & link flags . +set ( REALM_LINKER_FLAGS `` <UNK> ) +set ( REALM_COMMON_CXX_FLAGS `` <UNK> ) + # Setup lcache if ( NDK_LCACHE ) set ( CMAKE_CXX_CREATE_SHARED_LIBRARY `` $ { NDK_LCACHE } $ { CMAKE_CXX_CREATE_SHARED_LIBRARY } <UNK> ) @ @ <UNK> <UNK> @ @ elseif ( <UNK> ) set ( ABI_CXX_FLAGS `` -mthumb <UNK> -mfloat-abi=softfp <UNK> <UNK> ) endif ( ) + #
# result : fixing compilation error
# expect : Merge branch <UNK> of <UNK> into mc/bug/hack-memmove
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT jlongArray JNICALL Java_io_realm_internal_SharedGroup_nativeGetVersion env- > SetLongArrayRegion ( version_data , 0 , <UNK> , version_array ) ; return version_data ; - } \ No newline at end of file + } + +JNIEXPORT jboolean JNICALL Java_io_realm_internal_SharedGroup_nativeWaitForChange + ( JNIEnv * , jobject , jlong native_ptr ) + { + TR_ENTER_PTR ( native_ptr ) + return SG ( native_ptr ) - > wait_for_change ( ) ; + } + +JNIEXPORT void JNICALL Java_io_realm_internal_SharedGroup_nativeWaitForChangeRelease + ( JNIEnv * , jobject , jlong native_ptr
# result : Support wait_for_changes
# expect : bug fix
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ JNIEXPORT jlongArray JNICALL Java_io_realm_internal_SharedGroup_nativeGetVersion env- > SetLongArrayRegion ( version_data , 0 , <UNK> , version_array ) ; return version_data ; - } \ No newline at end of file + } + +JNIEXPORT jboolean JNICALL Java_io_realm_internal_SharedGroup_nativeWaitForChange + ( JNIEnv * , jobject , jlong native_ptr ) + { + TR_ENTER_PTR ( native_ptr ) + return SG ( native_ptr ) - > wait_for_change ( ) ; + } + +JNIEXPORT void JNICALL Java_io_realm_internal_SharedGroup_nativeWaitForChangeRelease + ( JNIEnv * , jobject , jlong native_ptr
# result : Support wait_for_changes
# expect : remove listener notification
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Removed allowBackup from AndroidManifest ( # <UNK> ) . * Added multi-arguments distinct ( <UNK> ) for Realm , DynamicRealm , RealmQuery , and RealmResults ( # <UNK> ) . * Allowed `` realm <UNK> and `` row <UNK> as a field name of model class ( # <UNK> ) . +* Added waitForChange ( ) and stopWaitForChange ( ) for Realm and DynamicRealm ( # <UNK> ) . # # <UNK> * Updated Realm Core to <UNK> diff --
# result : remove unnecessary dependencies
# expect : test <UNK> changelog
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * <UNK> ( Context ) . Use <UNK> ( RealmConfiguration ) or <UNK> ( ) instead . * <UNK> ( Class ) which was public because of the old migration API . Use <UNK> ( ) or <UNK> ( ) instead . * <UNK> ( Transaction , Callback ) and replaced it with <UNK> ( Transaction ) , <UNK> ( Transaction , OnSuccess ) , <UNK> ( Transaction , OnError ) and <UNK> ( Transaction , OnSuccess , OnError ) .
# result : merge master
# expect : Merge branch <UNK> into stk/waitforchange
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * ` <UNK> ( field , sort , field , sort , field , sort ) ` . Use ` <UNK> ( field [ ] , sort [ ] ) `` instead . * ` <UNK> ( field , sort , field , sort , field , sort ) ` . Use ` <UNK> ( field [ ] , sort [ ] ) `` instead . * ` <UNK> ( ) ` . Use ` <UNK> ( ) ` instead .
# result : fix review points
# expect : comment fix
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ + # # <UNK> + + # # # Enhancements + +* Added support for the ` annotationProcessor ` configuration provided by Android Gradle Plugin <UNK> or later . Realm plugin adds its annotation processor to the ` annotationProcessor ` configuration instead of ` apt ` configuration if it is available and the ` <UNK> ` plugin is not used . In Kotlin projects , ` kapt ` is used instead of the ` annotationProcessor ` configurationi ( # <UNK> )
# result : Merge branch <UNK> into my/support_annotationProcessor_configuration
# expect : address review comments
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import static <UNK> ; import static <UNK> ; import static <UNK> ; - @ Ignore +// @ Ignore @ RunWith ( <UNK> ) public class LinkingObjectsQueryTests extends QueryTests { @ @ <UNK> <UNK> @ @ public class LinkingObjectsQueryTests extends QueryTests { RealmResults < AllJavaTypes > result = <UNK> ( <UNK> ) <UNK> ( <UNK> + `` . <UNK> + <UNK>
# result : A bit cleaning up
# expect : Fixing unit tests for backlink <UNK> Introducing a native implementation of <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; public class ClassMetaData { private final TypeElement classType ; // Reference to model class . - private String className ; // Model class simple name . + private final String className ; // Model class simple name . + private final List < VariableElement > fields = new ArrayList < VariableElement > ( ) ; // List of all fields in the class except those @ Ignored . + private final List < VariableElement > indexedFields = new
# result : Merge branch <UNK> into feature/backlinks
# expect : Merge branch <UNK> into feature/backlinks-tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : fix tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Implement special handling for byte[] in RealmList
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Fix build on <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Primitive List <UNK> <UNK> <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge commit <UNK> into feature/primitive_list
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into feature/primitive_list
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : fix a bug that annotation processor always generates schema of primitive list as nullable
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class KotlinExampleActivity : Activity ( ) { // Sorting val sortedPersons = <UNK> ( Person : <UNK> ) <UNK> ( `` age <UNK> , <UNK> ) - status += `` \nSorting $ { <UNK> ( ) <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( ) <UNK> ( ) <UNK> } <UNK> + status += `` \nSorting $ { <UNK> ( ) ? <UNK> } == $ { <UNK> ( Person : <UNK> ) <UNK> ( )
# result : Merge branch <UNK> into <UNK>
# expect : Merge branch <UNK> into <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Breaking Changes * ` <UNK> ( ) ` / ` <UNK> ( ) ` have been removed . Use ` <UNK> ( ) ` / ` <UNK> ( ) ` instead . +* ` <UNK> ( Realm , Class ) ` , ` <UNK> ( DynamicRealm , String ) ` , ` <UNK> ( RealmResults ) ` and ` <UNK> ( RealmList ) ` have been removed . Use ` <UNK> ( Class ) ` , ` <UNK>
# result : Merge branch <UNK> into <UNK>
# expect : Primitive List <UNK> <UNK> <UNK> <UNK>
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +/build diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> +apply plugin : <UNK> + +android { + compileSdkVersion <UNK> + buildToolsVersion <UNK> + + defaultConfig { + applicationId `` <UNK> <UNK> + targetSdkVersion <UNK> + minSdkVersion <UNK> + versionCode <UNK> + versionName `` <UNK> <UNK> + } + buildTypes { + release
# result : Test case fix
# expect : Merge remote-tracking branch <UNK> into mc-multi-process
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Migration for linking objects is not yet supported . * Backlink verification is incomplete . Evil code can cause native crashes . * [ ObjectServer ] In case of a Client Reset , information about the location of the backed up Realm file is now reported through the ` ErrorHandler ` interface ( # <UNK> ) . +* The listener on ` RealmObject ` will only be triggered if the object changes ( # <UNK> ) . +* Added `
# result : Fix javadoc
# expect : PR fix
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # # # Bug Fixes * [ ObjectServer ] Fixed a crash when an authentication error happend ( # <UNK> ) . +* [ ObjectServer ] Enable encryption with Sync ( # <UNK> ) . # # # Internal diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK>
# result : monitorForDefaultConfiguration -> defaultConfigurationLock
# expect : update change log
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ * Throws a better exception message when calling ` <UNK> ( ) ` with a ` RealmModel ` class ( # <UNK> ) . * Use https for Realm version checker ( # <UNK> ) . + # # # Internal + +* Upgraded to Realm Sync <UNK> +* Upgraded to Realm Core <UNK> # # <UNK> ( <UNK> ) diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # Realm
# result : Add missing boolean
# expect : Add support for Weak/Strong links
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ final class MySQLSpanStore implements SpanStore { <UNK> ( <UNK> ( ) ? <UNK> ( <UNK> ) : null ) <UNK> ( ) ; } - private static SelectOffsetStep < <UNK> < Long > > toTraceIdQuery ( DSLContext context , + private static SelectOffsetStep < <UNK> < Long ,
# result : Zipkin <UNK> - Update SQL query for MySQL <UNK>
# expect : Zipkin <UNK> - Update SQL query for MySQL <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ /** - * Copyright <UNK> The OpenZipkin Authors + * Copyright <UNK> The OpenZipkin Authors * * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except * in compliance with the License . You may obtain a copy of the License at @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK>
# result : Deprecates EnableZipkinServer to explain custom servers are unsupported
# expect : Fixes <UNK> avoid blocking fetch in C* store
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; -import static <UNK> ; import static <UNK> ; /** - * Zipkin-UI
# result : Moves the zipkin UI under the path /zipkin
# expect : Moves the zipkin UI under the path /zipkin
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Upgrade to Finatra <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ /** - * Copyright <UNK> The OpenZipkin Authors + * Copyright <UNK> The OpenZipkin Authors * * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except * in compliance with the License . You may obtain a copy of the License at @ @ <UNK> <UNK> @ @ */ package <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import
# result : Accepts Zipkin <UNK> Span format in all current transports
# expect : Accepts Zipkin <UNK> Span format in all current transports
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < dependency > < groupId > $ { <UNK> } < /groupId > + < artifactId > <UNK> < /artifactId > + < version > $ { <UNK> } < /version > + < /dependency > + + < dependency > + < groupId > $ { <UNK> } < /groupId > + < artifactId > <UNK> < /artifactId > + < version > $ { <UNK> } < /version > + < /dependency > + + < dependency > +
# result : Added packaging of module jar to Kafka <UNK> autoconfigure <UNK> Removed <UNK> collector dependency from <UNK>
# expect : Verified that the <UNK> collector external module can be successfully loaded and run with <UNK> Moved documentation on running the <UNK> collector from the zipkin-server readme to the <UNK> <UNK> and updated with explanation of how to use the external <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < dependency > < groupId > $ { <UNK> } < /groupId > + < artifactId > <UNK> < /artifactId > + < version > $ { <UNK> } < /version > + < /dependency > + + < dependency > + < groupId > $ { <UNK> } < /groupId > + < artifactId > <UNK> < /artifactId > + < version > $ { <UNK> } < /version > + < /dependency > + + < dependency > +
# result : Added packaging of module jar to Kafka <UNK> autoconfigure <UNK> Removed <UNK> collector dependency from <UNK>
# expect : Fixed spelling <UNK>
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Cleaner summing of scribe batch size
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Remove GlobalSampler dependency from <UNK>
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Add a note that it is possible to not use Scribe at all
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Programmatically generate paths to js/css resources
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Make js/css configs visible in <UNK>
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Fixed minor typo in run_all_jobs
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Merge branch <UNK> of <UNK> into hadoop_jobs
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Update zipkin-web to use zipkin-query gem
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Remove actual gems
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Pull out msg from thrift struct in ScribeCollectorService
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Added ExpensiveEndpoints and test files
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Merge Trace spans and sort by timestamp by default
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Add js/css <UNK> broken templating
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Merge branch <UNK> of <UNK> into finatra
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Merge branch <UNK> of <UNK> into finatra
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Create SpanStore + cassie example
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Merge branch <UNK> of <UNK> into complex_query
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Add ability to remove additional filters
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Revert messed up merge change
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : CSS cleanup
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Fix imports
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + +/** + * Copyright <UNK> The OpenZipkin Authors + * + * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except + * in compliance with the License . You may obtain a copy of the License at + * + * http : <UNK> + * + * Unless required by applicable law or agreed to in writing , software distributed under the
# result : rename basic auth properties to just username and password
# expect : method name changed in test class ZipkinElasticsearchHttpStorageAutoConfigurationTest
# source : diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ + +/** + * Copyright <UNK> The OpenZipkin Authors + * + * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except + * in compliance with the License . You may obtain a copy of the License at + * + * http : <UNK> + * + * Unless required by applicable law or agreed to in writing , software distributed under the
# result : rename basic auth properties to just username and password
# expect : apply Square style formatting
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < groupId > $ { <UNK> } < /groupId > < artifactId > zipkin-collector-scribe < /artifactId > < /dependency > - < ! -- Avoid <UNK> during tests -- > + < ! -- Avoid <UNK> -- > < dependency > < groupId > <UNK> < /groupId > < artifactId > hibernate-validator < /artifactId > < version > <UNK> < /version > - < scope > test < /scope > < /dependency > < /dependencies >
# result : To distinguish from the zipkin <UNK>
# expect : Fix dependency scope in zipkin-autoconfigure-collector-scribe
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Excludes scala dependencies from zipkin-cassandra-core
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ /** - * Copyright <UNK> The OpenZipkin Authors + * Copyright <UNK> The OpenZipkin Authors * * Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except * in compliance with the License . You may obtain a copy of the License at @ @ <UNK> <UNK> @ @ public class ZipkinUiProperties { private int defaultLookback = ( int ) <UNK> ( <UNK> ) ; private String instrumented =
# result : <UNK> Fix for <UNK> <UNK> in Windows open with <UNK>
# expect : Adds errorCount to the dependency graph and colors accordingly
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ */ package <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class MetricsBenchmarks static final int LONG_SPAN = <UNK> ; static final int MEDIUM_SPAN = <UNK> ; static final int SHORT_SPAN = <UNK> ; - + @ Autowired private
# result : Migrates metrics to Micrometer
# expect : Adds Http Request metrics for Undertow using Micrometer
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Migrate build system to Gradle
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : <UNK> Add copy-webpack-plugin to copy files from static/
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; +import static <UNK> ; import static <UNK> ; import static <UNK> ; import static <UNK> ; -import static <UNK> ; final class CassandraSpanConsumer implements GuavaSpanConsumer { private static final Logger LOG = <UNK>
# result : Remove unused InMemoryHiveMetastore
# expect : Moves <UNK> traceId from BigInteger to <UNK>
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : remove unneeded import
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Added better support for <UNK>
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : only hit travis repos on travis builds
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; -import <UNK> ; +import <UNK> ; +import <UNK> ; -import static <UNK> ; import static <UNK> ; -class ElasticsearchHttpSpanConsumer implements AsyncSpanConsumer { // not final for testing +class ElasticsearchHttpSpanConsumer implements SpanConsumer { // not final for testing static final Logger LOG = <UNK> ( <UNK> ( ) ) ; final ElasticsearchHttpStorage es ; @ @ <UNK> <UNK>
# result : Adds <UNK> Call interface based on okhttp and retrofit
# expect : adds tests
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; import <UNK> ; import static <UNK> ; @ @ <UNK> <UNK> @ @ public abstract class ElasticsearchHttpStorage extends <UNK> abstract boolean legacyReadsEnabled ( ) ; + @ Override public <UNK> <UNK> ( ) { + throw new UnsupportedOperationException ( `` TODO <UNK> ) ; + } + @
# result : Fix schema checks in file-based access control
# expect : Adds <UNK> SpanStore and a bridging adapter to <UNK>
# source : diff -- git <UNK> <UNK> deleted file mode <UNK> index <UNK> -- - <UNK> +++ /dev/null @ @ <UNK> <UNK> @ @ - # - # Copyright <UNK> The OpenZipkin Authors - # - # Licensed under the Apache License , Version <UNK> ( the `` License <UNK> ) ; you may not use this file except - # in compliance with the License . You may obtain a copy of the License at - # - # http : <UNK> - # - # Unless required by applicable law or agreed to in writing , software distributed under the
# result : Add <UNK> BinaryAnnotation ThriftAdapter tests
# expect : Use Bintray Gradle plugin <UNK> fixing <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > < classpath > < classpathentry kind= <UNK> con <UNK> path= <UNK> <UNK> <UNK> / > + < classpathentry kind= <UNK> src <UNK> path= <UNK> examples <UNK> / > < classpathentry kind= <UNK> src <UNK> path= <UNK> src <UNK> / > < classpathentry kind= <UNK> src <UNK> path= <UNK> gen <UNK> / > - < classpathentry kind= <UNK> src <UNK> path= <UNK> examples <UNK> / > + < classpathentry
# result : Merge remote-tracking branch <UNK>
# expect : Merge remote-tracking branch <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; - /** * Used to intercept and handle the responses from requests made using * { @ link AsyncHttpClient } . The { @ link # onSuccess ( String ) } method is diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; +import <UNK> ; import <UNK> ; import <UNK>
# result : remove unused imports
# expect : remove unused imports
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class RetryHandler implements HttpRequestRetryHandler { if ( retry ) { // resend all idempotent requests HttpUriRequest currentReq = ( HttpUriRequest ) <UNK> ( <UNK> ) ; - String requestType = <UNK> ( ) ; + String requestType = currentReq ! = null ? <UNK> ( ) : `` <UNK> ; retry = ! <UNK> ( `` POST <UNK> ) ; } @ @ <UNK> <UNK> @ @ class RetryHandler implements HttpRequestRetryHandler { return retry ; } - + protected boolean isInList
# result : Fix crash in RetryHandler
# expect : Fix crash in RetryHandler
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class AsyncHttpClient { } /** - * Sets the connection time oout . By default , <UNK> seconds + * Sets the connection timeout . By default , <UNK> seconds * @ param timeout the connect/socket timeout in milliseconds */ public void setTimeout ( int timeout ) { @ @ <UNK> <UNK> @ @ public class AsyncHttpClient { public void setSSLSocketFactory ( SSLSocketFactory sslSocketFactory ) { <UNK> ( ) <UNK> ( ) <UNK> ( new Scheme ( `` https <UNK>
# result : <UNK> added setMaxRetries <UNK> fixed a <UNK>
# expect : <UNK> added setMaxRetries <UNK> fixed a <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > < classpath > < classpathentry kind= <UNK> con <UNK> path= <UNK> <UNK> <UNK> / > + < classpathentry kind= <UNK> src <UNK> path= <UNK> examples <UNK> / > < classpathentry kind= <UNK> src <UNK> path= <UNK> src <UNK> / > < classpathentry kind= <UNK> src <UNK> path= <UNK> gen <UNK> / > - < classpathentry kind= <UNK> src <UNK> path= <UNK> examples <UNK> / > + < classpathentry
# result : Merge remote-tracking branch <UNK>
# expect : Merge remote-tracking branch <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < ? xml version= <UNK> <UNK> <UNK> encoding= <UNK> <UNK> <UNK> ? > < classpath > < classpathentry kind= <UNK> con <UNK> path= <UNK> <UNK> <UNK> / > + < classpathentry kind= <UNK> src <UNK> path= <UNK> examples <UNK> / > < classpathentry kind= <UNK> src <UNK> path= <UNK> src <UNK> / > < classpathentry kind= <UNK> src <UNK> path= <UNK> gen <UNK> / > - < classpathentry kind= <UNK> src <UNK> path= <UNK> examples <UNK> / > + < classpathentry
# result : Merge remote-tracking branch <UNK>
# expect : Merge remote-tracking branch <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ bin/ gen/ _layouts <UNK> -gh-pages \ No newline at end of file +gh-pages <UNK> <UNK> +res/ diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ <UNK> # Project target . <UNK> <UNK> diff -- git <UNK> <UNK> new file mode <UNK> index <UNK> -- - /dev/null +++ <UNK> @ @ <UNK> <UNK> @ @ +package <UNK> ; + +import <UNK> ; +import <UNK> ; +import <UNK> ; + + +public class
# result : Merge branch <UNK> into refactorOptions
# expect : <UNK> to change to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class AsyncHttpResponseHandler implements ResponseHandlerInterfa * Avoid leaks by using a non-anonymous handler class with a weak reference */ static class ResponderHandler extends Handler { - private final WeakReference < AsyncHttpResponseHandler > mResponder ; + private final AsyncHttpResponseHandler mResponder ; ResponderHandler ( AsyncHttpResponseHandler service ) { - mResponder = new WeakReference < AsyncHttpResponseHandler > ( service ) ; + mResponder =service ; } @ Override public void handleMessage ( Message msg ) { - AsyncHttpResponseHandler service = <UNK> ( )
# result : Finishing EmbeddedJettyServer changes to support custom connectors
# expect : <UNK> use weak reference for ResponderHandler
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; -import <UNK> ; -import <UNK> ; -import <UNK> ; - /** * Used to intercept and handle the responses from requests made using * { @ link AsyncHttpClient } . The { @ link # onSuccess ( String ) } method is diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; +import <UNK> ; import <UNK> ; import <UNK>
# result : remove unused imports
# expect : remove unused imports
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class BufferedDiskCache { return null ; } else { <UNK> ( TAG , `` Found entry in disk cache for % s <UNK> , <UNK> ( ) ) ; - <UNK> ( ) ; + <UNK> ( key ) ; } PooledByteBuffer byteBuffer ; diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public interface ImageCacheStatsTracker { void onStagingAreaMiss ( ) ; /** Called on a disk cache hit .
# result : Add warning style
# expect : Add cache key for <UNK> onDiskCacheHit
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class ArrayDrawable extends Drawable <UNK> ( getBounds ( ) ) ; } } + + @ Override + @ TargetApi ( <UNK> ) + public void setHotspot ( float x , float
# result : - Incorporated pull request comment changes - Used For loop for iterating Drawable layers instead on Foreach
# expect : Fix for <UNK> Not able to set hotspot on <UNK> drawable set in xml
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; + +import <UNK> ; import <UNK> ; + import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class DefaultDiskStorage implements DiskStorage { private final File mRootDirectory ; /** + * True if cache is external + */ + private final boolean mIsExternal ; + + /** * All the sharding occurs inside a version-directory . That allows for easy version upgrade . * When we find a base directory with no
# result : Merge remote-tracking branch <UNK>
# expect : Add forgiven static to <UNK> <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; + +import <UNK> ; import <UNK> ; + import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class DefaultDiskStorage implements DiskStorage { private final File mRootDirectory ; /** + * True if cache is external + */ + private final boolean mIsExternal ; + + /** * All the sharding occurs inside a version-directory . That allows for easy version upgrade . * When we find a base directory with no
# result : Merge remote-tracking branch <UNK>
# expect : <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ScalingUtils { private final ScaleType mScaleTypeFrom ; private final ScaleType mScaleTypeTo ; - private final float [ ] mMatrixValuesFrom = new float [ <UNK> ] ; - private final float [ ] mMatrixValuesTo = new float [ <UNK> ] ; + private final Rect mBoundsFrom ; + private final Rect mBoundsTo ; + private float [ ] mMatrixValuesFrom ; + private float [ ] mMatrixValuesTo ; private final float [ ] mMatrixValuesInterpolated = new float [ <UNK> ] ;
# result : transition sample changed
# expect : added boundsFrom and boundsTo fields to <UNK> Change interpolated matrix <UNK> to evaluate exactly between start and end matrix
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # Copyright <UNK> Facebook . All Rights Reserved . APP_BUILD_SCRIPT : = <UNK> -APP_ABI : = <UNK> armeabi <UNK> +APP_ABI : = <UNK> armeabi <UNK> <UNK> <UNK> APP_PLATFORM : = <UNK> APP_MK_DIR : = $ ( dir $ ( lastword $ ( MAKEFILE_LIST ) ) ) diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ jobject GifImage_nativeCreateFromByteVector ( JNIEnv* pEnv , std : <UNK> < <UNK> > & jobject ret =
# result : Use jlong instead of <UNK>
# expect : Use jlong instead of <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ package <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; /** * Network fetcher that uses OkHttp as a backend . @ @ <UNK> <UNK> @ @ public class OkHttpNetworkFetcher extends BaseNetworkFetcher < FetchState > { private final OkHttpClient mOkHttpClient ; + private final Executor mCancellationExecutor ; + /** * @ param okHttpClient client to use */ public
# result : <UNK> Fix NetowkrOnMainThreadException while cancellation
# expect : <UNK> Fix NetowkrOnMainThreadException while cancellation
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class PooledByteBufferInputStream extends InputStream { @ VisibleForTesting int mOffset ; // current offset in the chunk + @ VisibleForTesting int mMark ; // position of <UNK> ' if any diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class ImageFormatCheckerUtils { return true ; } + /** + * Checks if byteArray interpreted as sequence of bytes contains the pattern . + * @ param byteArray the byte array
# result : <UNK> rm changes except for new ImageFormatCheckerUtils method
# expect : <UNK> rm changes except for new ImageFormatCheckerUtils method
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class SvgDecoderExample { } } return null ; + } }
# result : Fix <UNK> required <UNK>
# expect : <UNK> merge master + fix conflicts
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # Copyright <UNK> Facebook . All Rights Reserved . APP_BUILD_SCRIPT : = <UNK> -APP_ABI : = <UNK> armeabi <UNK> +APP_ABI : = <UNK> armeabi <UNK> <UNK> <UNK> APP_PLATFORM : = <UNK> APP_MK_DIR : = $ ( dir $ ( lastword $ ( MAKEFILE_LIST ) ) ) diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ jobject GifImage_nativeCreateFromByteVector ( JNIEnv* pEnv , std : <UNK> < <UNK> > & jobject ret =
# result : Use jlong instead of <UNK>
# expect : Enable use on <UNK> ARM and <UNK> <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # Copyright <UNK> Facebook . All Rights Reserved . APP_BUILD_SCRIPT : = <UNK> -APP_ABI : = <UNK> armeabi <UNK> <UNK> <UNK> +APP_ABI : = all APP_MK_DIR : = $ ( dir $ ( lastword $ ( MAKEFILE_LIST ) ) ) NDK_MODULE_PATH : = $ ( APP_MK_DIR ) $ ( HOST_DIRSEP ) $ ( APP_MK_DIR ) <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ jobs : - run : name
# result : Update gradle properties
# expect : Update gradle properties
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # Copyright <UNK> Facebook . All Rights Reserved . APP_BUILD_SCRIPT : = <UNK> -APP_ABI : = <UNK> armeabi <UNK> <UNK> <UNK> +APP_ABI : = all APP_MK_DIR : = $ ( dir $ ( lastword $ ( MAKEFILE_LIST ) ) ) NDK_MODULE_PATH : = $ ( APP_MK_DIR ) $ ( HOST_DIRSEP ) $ ( APP_MK_DIR ) <UNK> diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ jobs : - run : name
# result : Update gradle properties
# expect : Upgrade circle <UNK> ndk version to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ buildscript { jcenter ( ) } dependencies { - classpath <UNK> : <UNK> + classpath <UNK> : <UNK> } } diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ dependencies { compile <UNK> : <UNK> compile <UNK> : <UNK> ' // optional + compile <UNK> : <UNK> @ <UNK> testCompile <UNK> : <UNK> testCompile ( <UNK> : <UNK> ' ) { diff -- git <UNK> <UNK> index <UNK> <UNK> -- -
# result : Merge pull request <UNK> from ArikYa/check-charset
# expect : switch to SQLCipher
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class QueryBuilder < T > { private final List < Object > values ; private final List < Join < T , ? > > joins ; + private final List < Join < T , ? > > leftJoins ; private final AbstractDao < T , ? > dao ; private final String tablePrefix ; @ @ <UNK> <UNK> @ @ public class QueryBuilder < T > { <UNK> = tablePrefix ; values = new ArrayList < Object >
# result : Fix type of getters
# expect : Adds leftJoin to <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; + import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ public class XMLMapperBuilder extends BaseBuilder { } parsePendingResultMaps ( ) ; - parsePendingCacheRefs ( ) ; + parsePendingChacheRefs ( ) ; parsePendingStatements ( ) ; } @ @ <UNK> <UNK> @ @ public class XMLMapperBuilder extends BaseBuilder { } } - private void parsePendingCacheRefs ( ) { + private void parsePendingChacheRefs ( )
# result : Add ContentView after TopBar
# expect : no message
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class GraphicActionAddElement extends GraphicActionAbstractAddElement { public void executeAction ( ) { <UNK> ( ) ; try { - if ( ! <UNK> ( `` mComponentType <UNK> , `` video <UNK> ) & & ! <UNK> ( `` mComponentType <UNK> , `` videoplus <UNK> ) ) + if ( ! <UNK> ( mComponentType , `` video <UNK> ) & & ! <UNK> ( mComponentType , `` videoplus <UNK> ) ) <UNK> = true ; <UNK> ( child , mIndex ) ;
# result : Fix race condition when listing columns in MySQL connector
# expect : * [android] Fix interctionTime
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class Files { <UNK> ( ) ; } } + + /** Write the byte array to the file */ + public static void writeFile ( File file , byte [ ] bytes ) throws IOException { + FileOutputStream out = new FileOutputStream ( file ) ; + <UNK> ( bytes ) ; + <UNK> ( ) ; + } + + /** Write the String to the file */ + public static void writeFile ( File file , String
# result : Some additional <UNK> utilities in Files
# expect : Some additional <UNK> utilities in Files
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ < <UNK> > <UNK> < <UNK> > < <UNK> > <UNK> < <UNK> > < <UNK> > <UNK> < <UNK> > - < <UNK> > <UNK> < <UNK> > + < <UNK> > <UNK> < <UNK> > < <UNK> > <UNK> < <UNK> > < ! -- Converter Dependencies -- > diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK>
# result : checkstyle fixes
# expect : as per <UNK> suggestions simplified executing a <UNK> passed to the <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class Files { <UNK> ( ) ; } } + + /** Write the byte array to the file . */ + public static void writeFile ( File file , byte [ ] bytes ) throws IOException { + FileOutputStream out = new FileOutputStream ( file ) ; + <UNK> ( bytes ) ; + <UNK> ( ) ; + } + + /** Write the String to the file . */ + public static void writeFile ( File file
# result : Incorporate feedback from code review
# expect : Incorporate feedback from code review
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; +import <UNK> ; import <UNK> ; import <UNK> ; import <UNK> ; @ @ <UNK> <UNK> @ @ import <UNK> ; * < p > * Calling { @ link # create ( Class ) } with { @ code <UNK> } will validate and create a new * implementation of the API . + * < p > + * When an api marks { @ link <UNK>
# result : Support constructor-auto-mapping using super type <UNK>
# expect : support HTTP <UNK> semantics by allowing URI return type to be taken from the Location <UNK> and URI parameters override <UNK>
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public final class JacksonConverterFactory extends <UNK> { @ Override public Converter < ? , RequestBody > requestBodyConverter ( Type type , Annotation [ ] annotations , Retrofit retrofit ) { - JavaType javaType = <UNK> ( ) <UNK> ( type ) ; - ObjectWriter writer = <UNK> ( javaType ) ; + ObjectWriter writer = <UNK> ( ) ; return new JacksonRequestBodyConverter < > ( writer ) ; } }
# result : use <UNK> method instead of <UNK>
# expect : [resolves <UNK> Fixes the type passed to Jackson writer
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public class Files { <UNK> ( ) ; } } + + /** Write the byte array to the file . */ + public static void writeFile ( File file , byte [ ] bytes ) throws IOException { + FileOutputStream out = new FileOutputStream ( file ) ; + try { + <UNK> ( bytes ) ; + } finally { + <UNK> ( ) ; + } + } + + /** + * Create the indicated directory ,
# result : Close OutputStream in finally block
# expect : Close OutputStream in finally block
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ # Change Log + # # Version <UNK> + +* https : <UNK> + # # Version <UNK> * ( <UNK> ) * Initial release . \ No newline at end of file diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ public abstract class BaseFragment extends Fragment { <UNK> . ` <UNK> ( ) ` creates a [ KeyedWeakReference ] ( https : <UNK> ) to the watched object .
# result : Merge pull request <UNK> from <UNK>
# expect : Merge pull request <UNK> from pepyakin/sp/fix-excluded-refs
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ dependencies { `` ` In your ` Application ` class : - `` ` java public class ExampleApplication extends Application { + public static RefWatcher getRefWatcher ( Context context ) { + ExampleApplication application = ( ExampleApplication ) <UNK> ( ) ; + return <UNK> ; + } + + private RefWatcher refWatcher ; + @ Override public void onCreate ( ) { <UNK> ( ) ; if ( <UNK> ( this ) ) { @ @ <UNK> <UNK> @ @
# result : Merge branch <UNK> into ElasticsearchBasicAuth
# expect : updated <UNK> with the Application from FAQ
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ ext { <UNK> = <UNK> dep = [ - androidPlugin : <UNK> : <UNK> ' , - okhttp : <UNK> : <UNK> ' , - <UNK> : `` <UNK> : okhttp : $ <UNK> <UNK> , - mockWebServer : `` <UNK> : mockwebserver : $ <UNK> <UNK> , - intellijAnnotations : <UNK> : <UNK> ' , - pollexor : <UNK> : <UNK> ' , - <UNK> : <UNK> : <UNK> ' , - junit : <UNK> : <UNK> ' , -
# result : Allow null path in <UNK> to match <UNK>
# expect : Fix import
# source : diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ abstract class BitmapHunter implements Runnable { abstract Bitmap decode ( Request data , int retryCount ) throws IOException ; - abstract <UNK> getLoadedFrom ( ) ; + <UNK> getLoadedFrom ( ) { + return loadedFrom ; + } Bitmap hunt ( ) throws IOException { Bitmap bitmap ; diff -- git <UNK> <UNK> index <UNK> <UNK> -- - <UNK> +++ <UNK> @ @ <UNK> <UNK> @ @ class NetworkBitmapHunter extends BitmapHunter { } @ Override <UNK> getLoadedFrom ( ) { -
# result : Fixing NPE in PicassoDrawable when <UNK> issue <UNK>
# expect : Code review change to fix indentation for <UNK>
